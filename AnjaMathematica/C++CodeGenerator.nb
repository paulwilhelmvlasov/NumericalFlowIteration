(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    286530,       5454]
NotebookOptionsPosition[    279090,       5323]
NotebookOutlinePosition[    279584,       5341]
CellTagsIndexPosition[    279541,       5338]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"NMAX", "=", "21"}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.913891992286188*^9, 3.9138919934982843`*^9}},
 CellLabel->
  "In[426]:=",ExpressionUUID->"c819e5af-96d5-4539-8d6e-4f1709fbc967"],

Cell[CellGroupData[{

Cell[TextData[{
 "Make basis for harmonic polynomials ",
 Cell[BoxData[
  ButtonBox["\<\"Run Section\"\>",
   Appearance->Automatic,
   ButtonFunction:>(SelectionMove[
      EvaluationCell[], All, CellGroup]; FrontEndExecute[
      FrontEndToken["EvaluateCells"]]),
   Evaluator->Automatic,
   Method->"Preemptive"]], "Output",
  CellChangeTimes->{3.78223244855991*^9},ExpressionUUID->
  "e0fd5aaa-0774-472c-aa72-c012c884493d"]
}], "Section",
 CellChangeTimes->{{3.569139429210832*^9, 3.569139448895958*^9}, {
   3.782232327501582*^9, 3.7822323318690214`*^9}, {3.7822323908291674`*^9, 
   3.782232402970974*^9}, {3.782232459081881*^9, 3.7822324653849487`*^9}, {
   3.788176049312538*^9, 3.788176071276765*^9}, 3.788176374120003*^9, {
   3.788178045513668*^9, 3.788178046389425*^9}, {3.788216034741043*^9, 
   3.788216067945526*^9}, {3.821990163914553*^9, 3.821990171299117*^9}, {
   3.828431070342443*^9, 
   3.828431071802395*^9}},ExpressionUUID->"0488a9bf-ff6a-4633-b09c-\
210e5a0a5a6c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"PrependTo", "[", 
   RowBox[{"$Path", ",", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{
      "$HomeDirectory", ",", "\"\<Documents\>\"", ",", "\"\<Doktorarbeit\>\"",
        ",", "\"\<linuxfiles\>\"", ",", "\"\<Mathematica\>\"", ",", 
       "\"\<SmatrixScripts\>\""}], "}"}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Get", "[", "\"\<./Ypolynom_unrotated.mx\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Get", "[", "\"\<./NormFactor_unrotated.mx\>\"", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.790946322831195*^9, 3.790946382341329*^9}, {
   3.790946455367523*^9, 3.790946477909116*^9}, {3.790946518478333*^9, 
   3.790946527350198*^9}, {3.790946562406941*^9, 3.790946578876251*^9}, {
   3.790946850375613*^9, 3.790946896180863*^9}, 3.792154843079934*^9, {
   3.7922350771130943`*^9, 3.792235080049828*^9}, 3.792304006292341*^9, {
   3.792304038898302*^9, 3.792304039878605*^9}, 3.792304413273783*^9, {
   3.79465549339805*^9, 3.794655498546061*^9}, {3.79465580750592*^9, 
   3.79465580936097*^9}, 3.7946558964768224`*^9, {3.7946560116565905`*^9, 
   3.794656016824558*^9}, {3.794663615845731*^9, 3.794663643116997*^9}, {
   3.794666880514841*^9, 3.794666884045052*^9}, {3.794753580461724*^9, 
   3.794753586683557*^9}, {3.800872554566268*^9, 3.800872558908499*^9}, {
   3.801491189911741*^9, 3.801491193959962*^9}, {3.815300571142747*^9, 
   3.815300574534042*^9}, {3.82198698580826*^9, 3.82198698885044*^9}, {
   3.828454245800363*^9, 3.828454256121382*^9}, {3.9090385722782736`*^9, 
   3.9090385748447514`*^9}, {3.909038614479997*^9, 3.909038632570404*^9}, {
   3.917335384353588*^9, 3.9173353894122953`*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"9b601a50-369a-4d33-880a-05d1c3c299b8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Ypolynom", "[", 
  RowBox[{"[", "3", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.803726594509114*^9, 3.803726614239427*^9}, {
  3.807980344780597*^9, 3.80798034704082*^9}, {3.821986725495998*^9, 
  3.821986731695203*^9}, {3.8219874496276445`*^9, 3.8219874994632807`*^9}, {
  3.82199018430515*^9, 3.8219901850549808`*^9}, {3.9090386778548007`*^9, 
  3.909038692327987*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"46b19228-5073-41cd-93fe-cc0f2b56a1b9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x1", " ", "y1"}], ",", 
   RowBox[{"y1", " ", "z1"}], ",", 
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["x1", "2"]}], "-", 
    SuperscriptBox["y1", "2"], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["z1", "2"]}]}], ",", 
   RowBox[{
    RowBox[{"-", "x1"}], " ", "z1"}], ",", 
   RowBox[{
    SuperscriptBox["x1", "2"], "-", 
    SuperscriptBox["y1", "2"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8037266004433055`*^9, 3.8037266150778975`*^9}, 
   3.804330152773403*^9, 3.8043407596157618`*^9, 3.804348336952427*^9, 
   3.804836460320285*^9, 3.805020693916654*^9, 3.8052153446649966`*^9, 
   3.806405075865806*^9, 3.806468187161627*^9, 3.806477283829353*^9, 
   3.806638130636529*^9, 3.806639305595276*^9, 3.807346602212259*^9, 
   3.807980300424631*^9, 3.807980347631211*^9, 3.808028551230519*^9, 
   3.808032668626188*^9, 3.8080452400640574`*^9, 3.808066340336558*^9, 
   3.8081262335750732`*^9, 3.808202618763988*^9, 3.8082030080598993`*^9, 
   3.809163872108512*^9, 3.809347844020296*^9, 3.8096779095529103`*^9, 
   3.809705598746004*^9, 3.809766164743585*^9, 3.809773487132965*^9, 
   3.814876184107769*^9, 3.815299788676905*^9, 3.815300584228185*^9, 
   3.815300687133498*^9, 3.815908124320503*^9, 3.815982926363812*^9, 
   3.816067776706853*^9, 3.816075216722535*^9, 3.8163252068099265`*^9, 
   3.816506004408581*^9, 3.816602156827006*^9, 3.816710186753359*^9, 
   3.821542563298725*^9, 3.82154363876784*^9, 3.821700337761269*^9, 
   3.821811313697*^9, 3.821811430903967*^9, 3.821814467201262*^9, 
   3.821987421416334*^9, {3.821987453812395*^9, 3.821987500444049*^9}, 
   3.8219918174808216`*^9, 3.822676147943827*^9, 3.822948924856675*^9, 
   3.823090272907516*^9, 3.824461069350978*^9, 3.8244611771307383`*^9, 
   3.824489752757772*^9, 3.8248269744973516`*^9, 3.825004807735715*^9, 
   3.828178630230742*^9, 3.828431074044699*^9, 3.828454154532035*^9, 
   3.828454259802049*^9, 3.832080989778567*^9, 3.8383732451050816`*^9, 
   3.847194614624628*^9, 3.847256149123081*^9, 3.8491721466710286`*^9, 
   3.8605570258339195`*^9, 3.869902806006608*^9, 3.880716952315315*^9, 
   3.909038530909028*^9, 3.909038577482607*^9, 3.909038634733692*^9, {
   3.909038678983469*^9, 3.909038693024877*^9}, 3.909682327913682*^9, 
   3.910083184490388*^9, 3.9102880566998763`*^9, 3.910288501733932*^9, 
   3.9102985532955427`*^9, 3.913718133369108*^9, 3.9138145715246596`*^9, 
   3.913816555219669*^9, 3.9150107704793096`*^9, 3.915111812713528*^9, 
   3.915173361984473*^9, 3.916997912643586*^9, 3.917005130626455*^9, {
   3.917335262654003*^9, 3.917335265729688*^9}, 3.917335392808491*^9, 
   3.917338163535241*^9, {3.917440416065517*^9, 3.917440425654622*^9}, {
   3.9177890581802893`*^9, 3.917789066949254*^9}, 3.9177939081223307`*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"006f6211-4b46-49cc-a6d6-f0c3e5aa2a4f"]
}, Closed]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.909038687671417*^9, 3.9090386887515025`*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"afacf0bd-62f3-4e86-a3b2-2637bbf68080"],

Cell[BoxData[
 RowBox[{"NormFactor", ";"}]], "Input",
 CellChangeTimes->{{3.807980317254335*^9, 3.807980319701272*^9}, 
   3.809698892515413*^9},
 CellLabel->"In[44]:=",ExpressionUUID->"69f5ad57-7d8f-421d-8cec-3286b85dc606"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Spherical+Radial Definitions  ",
 Cell[BoxData[
  ButtonBox["\<\"Run Section\"\>",
   Appearance->Automatic,
   ButtonFunction:>(SelectionMove[
      EvaluationCell[], All, CellGroup]; FrontEndExecute[
      FrontEndToken["EvaluateCells"]]),
   Evaluator->Automatic,
   Method->"Preemptive"]], "Output",
  CellChangeTimes->{3.78223244855991*^9},ExpressionUUID->
  "1daa69bd-b79a-405f-b233-cada3b083d67"]
}], "Section",
 CellChangeTimes->{{3.619842257633191*^9, 3.619842264441731*^9}, {
  3.619842509238817*^9, 3.619842514084055*^9}, {3.7861761004759855`*^9, 
  3.786176134199703*^9}, {3.787238861446561*^9, 3.787238862833744*^9}, {
  3.79050297118994*^9, 
  3.790502972114197*^9}},ExpressionUUID->"d7321192-bb66-4d3e-bf2b-\
ec2cdbcbc6ca"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"couple", "[", 
    RowBox[{"nA_", ",", "nB_", ",", "nResult_"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"EvenQ", "[", 
       RowBox[{"nA", "+", "nB", "-", "nResult"}], "]"}], "&&", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"nA", "+", "nB", "-", "nResult"}], "\[GreaterEqual]", "0"}], 
       ")"}], "&&", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"nA", "+", "nB", "-", "nResult"}], "\[LessEqual]", 
        RowBox[{"2", 
         RowBox[{"Min", "[", 
          RowBox[{"nA", ",", "nB"}], "]"}]}]}], ")"}]}], ",", "1", ",", "0"}],
     "]"}]}], "\n"}]], "Input",
 CellLabel->
  "In[394]:=",ExpressionUUID->"c0a7cd56-fc44-4d4e-89b1-2e2d84cc9f7c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"p", "[", 
    RowBox[{"x_", ",", "a_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], "p"], 
      FractionBox[
       RowBox[{"Gamma", "[", 
        RowBox[{"n", "+", "a", "+", 
         RowBox[{"3", "/", "2"}]}], "]"}], 
       RowBox[{"Gamma", "[", 
        RowBox[{"n", "+", "p", "+", 
         RowBox[{"3", "/", "2"}]}], "]"}]], 
      RowBox[{"Binomial", "[", 
       RowBox[{"a", ",", "p"}], "]"}], 
      SuperscriptBox["x", "p"]}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "0", ",", "a"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.603922101598325*^9, 3.603922123170759*^9}, {
   3.603928821091833*^9, 3.603928836983473*^9}, {3.603928880575643*^9, 
   3.603928888152715*^9}, {3.603928948812301*^9, 3.603928968348375*^9}, 
   3.603929031172409*^9, {3.619843171774244*^9, 3.619843182891648*^9}, {
   3.78589970619709*^9, 3.785899709008411*^9}, {3.787231649963752*^9, 
   3.787231656928396*^9}, {3.787231689957217*^9, 3.78723170414813*^9}, {
   3.787238871638952*^9, 3.787238872198035*^9}},
 CellLabel->
  "In[395]:=",ExpressionUUID->"bf5c8aa1-82cc-4e56-b73b-09a5b83d18e9"],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"IntGauss1", ",", "IntGauss2", ",", " ", "IntGauss4"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.815998470353907*^9, 3.815998479444483*^9}, {
  3.8250056262866173`*^9, 3.825005630318598*^9}},
 CellLabel->
  "In[396]:=",ExpressionUUID->"2b30aff4-b8e2-4d76-87ad-16ef2525c3d0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"IntDirections", "[", 
      RowBox[{"nn_", ",", "mm_", ",", "pp_"}], "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"OddQ", "[", "nn", "]"}], "||", 
        RowBox[{"OddQ", "[", "mm", "]"}], "||", 
        RowBox[{"OddQ", "[", "pp", "]"}]}], ",", "0", ",", 
       RowBox[{"4", "\[Pi]", 
        FractionBox[
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"nn", "-", "1"}], ")"}], "!!"}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"mm", "-", "1"}], ")"}], "!!"}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"pp", "-", "1"}], ")"}], "!!"}]}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"nn", "+", "mm", "+", "pp", "+", "1"}], ")"}], "!!"}]]}]}],
       "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"DeltaValues", "[", "list_", "]"}], ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"a", "=", 
          RowBox[{
          "list", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{"b", "=", 
          RowBox[{
          "list", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{"c", "=", 
          RowBox[{
          "list", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"OddQ", "[", "a", "]"}], "||", 
          RowBox[{"OddQ", "[", "b", "]"}], "||", 
          RowBox[{"OddQ", "[", "c", "]"}]}], ",", "0", ",", 
         FractionBox[
          RowBox[{"Multinomial", "[", 
           RowBox[{
            FractionBox["a", "2"], ",", 
            FractionBox["b", "2"], ",", 
            FractionBox["c", "2"]}], "]"}], 
          RowBox[{"Multinomial", "[", 
           RowBox[{"a", ",", "b", ",", "c"}], "]"}]]}], "]"}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"IntDirections", "[", 
      RowBox[{"nn_", ",", "mm_", ",", "pp_"}], "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"OddQ", "[", "nn", "]"}], "||", 
        RowBox[{"OddQ", "[", "mm", "]"}], "||", 
        RowBox[{"OddQ", "[", "pp", "]"}]}], ",", "0", ",", 
       RowBox[{"4", 
        SuperscriptBox["sqrPiInv", 
         RowBox[{"-", "2"}]], " ", 
        FractionBox[
         RowBox[{"DeltaValues", "[", 
          RowBox[{"{", 
           RowBox[{"nn", ",", "mm", ",", "pp"}], "}"}], "]"}], 
         RowBox[{"nn", "+", "mm", "+", "pp", "+", "1"}]]}]}], "]"}]}], ";"}], 
   " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"IntGauss4", "[", "nn_", "]"}], ":=", 
     RowBox[{
      RowBox[{"IntGauss4", "[", "nn", "]"}], "=", 
      RowBox[{
       SuperscriptBox["sqrPiInv", 
        RowBox[{"-", "1"}]], 
       FractionBox[
        SuperscriptBox["2", 
         RowBox[{
          RowBox[{"2", "nn"}], "+", "1"}]], "2"], 
       RowBox[{
        RowBox[{"Gamma", "[", 
         RowBox[{
          FractionBox["1", "2"], "+", "nn"}], "]"}], "/", 
        SqrtBox["\[Pi]"]}]}]}]}], 
    RowBox[{"(*", 
     RowBox[{"/.", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         SqrtBox["\[Pi]"], " ", "\[Rule]", " ", 
         SuperscriptBox["sqrPiInv", 
          RowBox[{"-", "1"}]]}], ",", " ", 
        RowBox[{"\[Pi]", " ", "\[Rule]", " ", 
         SuperscriptBox["sqrPiInv", 
          RowBox[{"-", "2"}]]}]}], "}"}]}], "*)"}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
     RowBox[{
      SuperscriptBox["a", 
       RowBox[{"2", "nn"}]], 
      RowBox[{"Exp", "[", 
       RowBox[{"-", 
        FractionBox[
         SuperscriptBox["a", "2"], "4"]}], "]"}], 
      RowBox[{"\[DifferentialD]", "a"}]}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"IntGauss2", "[", "nn_", "]"}], ":=", 
      RowBox[{
       RowBox[{"IntGauss2", "[", "nn", "]"}], "=", 
       RowBox[{
        SuperscriptBox["sqrPiInv", 
         RowBox[{"-", "1"}]], 
        FractionBox[
         SuperscriptBox["2", 
          RowBox[{"nn", "+", 
           RowBox[{"1", "/", "2"}]}]], "2"], 
        RowBox[{
         RowBox[{"Gamma", "[", 
          RowBox[{
           FractionBox["1", "2"], "+", "nn"}], "]"}], "/", 
         SqrtBox["\[Pi]"]}]}]}]}], 
     RowBox[{"(*", 
      RowBox[{"/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          SqrtBox["\[Pi]"], " ", "\[Rule]", " ", 
          SuperscriptBox["sqrPiInv", 
           RowBox[{"-", "1"}]]}], ",", " ", 
         RowBox[{"\[Pi]", " ", "\[Rule]", " ", 
          SuperscriptBox["sqrPiInv", 
           RowBox[{"-", "2"}]]}]}], "}"}]}], "*)"}], ";"}], 
    RowBox[{"(*", 
     RowBox[{
      SqrtBox[
       FractionBox["\[Pi]", "2"]], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "nn"}], "-", "1"}], ")"}], "!!"}]}], "*)"}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
     RowBox[{
      SuperscriptBox["a", 
       RowBox[{"2", "nn"}]], 
      RowBox[{"Exp", "[", 
       RowBox[{"-", 
        FractionBox[
         SuperscriptBox["a", "2"], "2"]}], "]"}], 
      RowBox[{"\[DifferentialD]", "a"}]}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"IntGauss1", "[", "nn_", "]"}], ":=", 
     RowBox[{
      RowBox[{"IntGauss1", "[", "nn", "]"}], "=", 
      RowBox[{
       SuperscriptBox["sqrPiInv", 
        RowBox[{"-", "1"}]], 
       FractionBox["1", "2"], 
       RowBox[{
        RowBox[{"Gamma", "[", 
         RowBox[{
          FractionBox["1", "2"], "+", "nn"}], "]"}], "/", 
        SqrtBox["\[Pi]"]}]}]}]}], 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          SqrtBox["\[Pi]"], " ", "\[Rule]", " ", 
          SuperscriptBox["sqrPiInv", 
           RowBox[{"-", "1"}]]}], ",", " ", 
         RowBox[{"\[Pi]", " ", "\[Rule]", " ", 
          SuperscriptBox["sqrPiInv", 
           RowBox[{"-", "2"}]]}]}], "}"}]}], ";"}], 
     RowBox[{"(*", 
      FractionBox[
       RowBox[{
        SqrtBox["\[Pi]"], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "nn"}], "-", "1"}], ")"}], "!!"}]}], 
       SuperscriptBox["2", 
        RowBox[{"nn", "+", "1"}]]], "*)"}], "*)"}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
     RowBox[{
      SuperscriptBox["a", 
       RowBox[{"2", "nn"}]], 
      RowBox[{"Exp", "[", 
       RowBox[{"-", 
        SuperscriptBox["a", "2"]}], "]"}], 
      RowBox[{"\[DifferentialD]", "a"}]}]}], " ", "*)"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.785899154955062*^9, 3.785899158583635*^9}, {
   3.7861648664909983`*^9, 3.786164892476121*^9}, {3.78723178386756*^9, 
   3.787231786052273*^9}, {3.787564968949732*^9, 3.787564986550054*^9}, {
   3.79049179058384*^9, 3.790491791204987*^9}, {3.815997951920637*^9, 
   3.815998009002804*^9}, {3.815998049246063*^9, 3.8159980534376583`*^9}, 
   3.815998358300851*^9, {3.815998423981488*^9, 3.815998464673053*^9}, {
   3.8245492649441624`*^9, 3.8245492861338863`*^9}, {3.8248309601556597`*^9, 
   3.824831006715267*^9}, {3.8248376609331713`*^9, 3.8248376951799755`*^9}, {
   3.825003696502553*^9, 3.825003700222129*^9}, {3.8250055622282677`*^9, 
   3.825005615726729*^9}},
 CellLabel->
  "In[397]:=",ExpressionUUID->"53b21f00-5f0e-4919-b174-b5835e8d8ea5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Psi]ProjA", "[", 
    RowBox[{"Cx_", ",", "Cy_", ",", "Cz_", ",", "n_", ",", "l_", ",", "a_"}], 
    "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"p", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         SuperscriptBox["Cx", "2"], "+", 
         SuperscriptBox["Cy", "2"], "+", 
         SuperscriptBox["Cz", "2"]}], "2"], ",", "a", ",", "n"}], "]"}], 
     RowBox[{
      RowBox[{"Ypolynom", "\[LeftDoubleBracket]", 
       RowBox[{"n", "+", "1"}], "\[RightDoubleBracket]"}], 
      "\[LeftDoubleBracket]", 
      RowBox[{"n", "+", "l", "+", "1"}], "\[RightDoubleBracket]"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x1", "\[Rule]", "Cx"}], ",", 
      RowBox[{"y1", "\[Rule]", "Cy"}], ",", 
      RowBox[{"z1", "\[Rule]", "Cz"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Psi]ExpA", "[", 
     RowBox[{
     "Cx_", ",", "Cy_", ",", "Cz_", ",", "n_", ",", "l_", ",", "a_", ",", 
      "\[Alpha]_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"\[Alpha]", " ", 
      RowBox[{"p", "[", 
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox["Cx", "2"], "+", 
          SuperscriptBox["Cy", "2"], "+", 
          SuperscriptBox["Cz", "2"]}], "2"], ",", "a", ",", "n"}], "]"}], 
      RowBox[{
       RowBox[{"Ypolynom", "\[LeftDoubleBracket]", 
        RowBox[{"n", "+", "1"}], "\[RightDoubleBracket]"}], 
       "\[LeftDoubleBracket]", 
       RowBox[{"n", "+", "l", "+", "1"}], "\[RightDoubleBracket]"}]}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x1", "\[Rule]", "Cx"}], ",", 
       RowBox[{"y1", "\[Rule]", "Cy"}], ",", 
       RowBox[{"z1", "\[Rule]", "Cz"}]}], "}"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.786177122588923*^9, 3.7861771235984335`*^9}, {
   3.7862492329861603`*^9, 3.786249375385192*^9}, {3.786249753366849*^9, 
   3.786249760654994*^9}, {3.7862498154214044`*^9, 3.786249819662618*^9}, {
   3.786291394066052*^9, 3.786291396121424*^9}, 3.787238897095588*^9, {
   3.791042521520142*^9, 3.791042530401226*^9}, {3.7910426972469387`*^9, 
   3.79104269908977*^9}, {3.791042800381267*^9, 3.791042858491262*^9}, {
   3.791042905672224*^9, 3.791042964196725*^9}, {3.791300869692273*^9, 
   3.7913009065358477`*^9}, {3.791301106256091*^9, 3.79130111926307*^9}, {
   3.791902765801796*^9, 3.791902816792501*^9}, {3.792305906340722*^9, 
   3.792305927329207*^9}, 3.792306406139915*^9, {3.793618582340053*^9, 
   3.793618590721371*^9}, {3.807984260070446*^9, 3.807984273100557*^9}, {
   3.821987523686367*^9, 3.821987524572092*^9}, {3.909038784882968*^9, 
   3.909038832867179*^9}},
 CellLabel->
  "In[402]:=",ExpressionUUID->"f05ab810-55d2-465e-b603-fd640be55ea4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Psi]ProjA", "[", 
  RowBox[{"Cx", ",", "Cy", ",", "Cz", ",", "1", ",", "1", ",", "0"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9169998491053877`*^9, 3.916999859433094*^9}, {
  3.917853023827756*^9, 3.917853047663136*^9}},
 CellLabel->
  "In[404]:=",ExpressionUUID->"ba0b5fe7-c6c6-4297-ad18-6f208f5ef162"],

Cell[BoxData[
 RowBox[{"-", "Cx"}]], "Output",
 CellChangeTimes->{
  3.91699986039859*^9, 3.91700513289629*^9, 3.9173352704542503`*^9, 
   3.917335522205736*^9, 3.917338163665741*^9, {3.917440416640083*^9, 
   3.917440435908021*^9}, {3.91778905960644*^9, 3.917789067004092*^9}, 
   3.917793911657523*^9, {3.917853031219584*^9, 3.91785304977735*^9}},
 CellLabel->
  "Out[404]=",ExpressionUUID->"bb9e7b5b-512d-4b02-8cf5-663f1bafd7d1"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CForm", "[", 
  RowBox[{"\[Psi]ProjA", "[", 
   RowBox[{"Cx", ",", "Cy", ",", "Cz", ",", "10", ",", "5", ",", "6"}], "]"}],
   "]"}]], "Input",
 CellChangeTimes->{{3.9170001604636703`*^9, 3.917000172594615*^9}, {
  3.917000288535033*^9, 3.91700029213503*^9}},
 CellLabel->
  "In[405]:=",ExpressionUUID->"ba9cedf3-afba-46c4-9051-162fec3ef8dc"],

Cell["\<\
(-15*Power(Cx,9)*Cz + 120*Power(Cx,7)*Power(Cy,2)*Cz + \
210*Power(Cx,5)*Power(Cy,4)*Cz - 75*Cx*Power(Cy,8)*Cz + \
140*Power(Cx,7)*Power(Cz,3) - 
     1260*Power(Cx,5)*Power(Cy,2)*Power(Cz,3) - \
700*Power(Cx,3)*Power(Cy,4)*Power(Cz,3) + 700*Cx*Power(Cy,6)*Power(Cz,3) - \
168*Power(Cx,5)*Power(Cz,5) + 
     1680*Power(Cx,3)*Power(Cy,2)*Power(Cz,5) - \
840*Cx*Power(Cy,4)*Power(Cz,5))*
   (7.196565234375e6 - (60075675*(Power(Cx,2) + Power(Cy,2) + \
Power(Cz,2)))/32. + (12015135*Power(Power(Cx,2) + Power(Cy,2) + \
Power(Cz,2),2))/64. - 
     (148335*Power(Power(Cx,2) + Power(Cy,2) + Power(Cz,2),3))/16. + \
(15345*Power(Power(Cx,2) + Power(Cy,2) + Power(Cz,2),4))/64. - 
     (99*Power(Power(Cx,2) + Power(Cy,2) + Power(Cz,2),5))/32. + \
Power(Power(Cx,2) + Power(Cy,2) + Power(Cz,2),6)/64.)\
\>", "Output",
 CellChangeTimes->{{3.9170001676846347`*^9, 3.917000173042047*^9}, 
   3.9170002929037395`*^9, 3.917005132981293*^9, 3.917335270494185*^9, 
   3.917335522216243*^9, 3.9173381636812887`*^9, {3.917440416644128*^9, 
   3.917440435911314*^9}, {3.917789059610904*^9, 3.917789067008159*^9}, 
   3.917793911661474*^9, {3.91785303124251*^9, 3.917853049781045*^9}},
 CellLabel->
  "Out[405]//CForm=",ExpressionUUID->"38873924-e867-4041-9674-ac6e52d19b4e"]
}, Closed]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Norm\[Psi]A", "[", 
     RowBox[{"n", ",", "l", ",", "a"}], "]"}], ":=", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"a", "!"}], 
       RowBox[{"Gamma", "[", 
        RowBox[{"n", "+", "a", "+", 
         RowBox[{"3", "/", "2"}]}], "]"}]}], 
      RowBox[{"Gamma", "[", 
       RowBox[{"n", "+", 
        RowBox[{"3", "/", "2"}]}], "]"}]], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"NormFactor", "\[LeftDoubleBracket]", 
         RowBox[{"n", "+", "1"}], "\[RightDoubleBracket]"}], 
        "\[LeftDoubleBracket]", 
        RowBox[{"n", "+", "1", "+", "l"}], "\[RightDoubleBracket]"}], ")"}], 
      "2"]}]}], "*)"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"deg", "\[Equal]", "0"}], ",", " ", 
       RowBox[{"NormAIDX0", "\[LeftDoubleBracket]", 
        RowBox[{"a", "+", "1"}], "\[RightDoubleBracket]"}], ",", " ", "1"}], 
      "]"}], " ", 
     RowBox[{"NormFactor", "\[LeftDoubleBracket]", 
      RowBox[{"deg", "+", "1"}], "\[RightDoubleBracket]"}]}], ";"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{
  3.619842294817966*^9, {3.786540656342409*^9, 3.786540661579132*^9}, {
   3.787238739979803*^9, 3.787238742751802*^9}, {3.7919029705941877`*^9, 
   3.791903002973413*^9}, {3.792155085772895*^9, 3.792155142676368*^9}, {
   3.792155191502366*^9, 3.792155221102366*^9}, {3.792155511237237*^9, 
   3.7921555118870497`*^9}, {3.792231364313463*^9, 3.792231369999456*^9}, 
   3.792306385107563*^9, {3.801491286807678*^9, 3.801491308363549*^9}, {
   3.801491356817703*^9, 3.8014913904636307`*^9}, 3.801491532119604*^9, {
   3.801493419260531*^9, 3.8014934522577744`*^9}, {3.8048367856716776`*^9, 
   3.804836787597382*^9}, {3.821987533802416*^9, 3.8219875347084465`*^9}},
 CellLabel->
  "In[406]:=",ExpressionUUID->"c117a07e-0ab8-4392-9a20-929ad3c7943b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Apparently", ",", " ", 
    RowBox[{
    "calling", " ", "a", " ", "function", " ", "alone", " ", "takes", " ", 
     "up", " ", "a", " ", "lot", " ", "of", " ", 
     RowBox[{"time", " ", "[", 
      RowBox[{"see", " ", "below"}], "]"}]}], ",", " ", "therefore", ",", " ", 
    RowBox[{"for", " ", 
     RowBox[{"Andrea", "'"}], "s", " ", "basis", " ", "we", " ", "shall", " ",
      "from", " ", "now", " ", "on", " ", "use", " ", "\[Psi]PA", " ", "and", 
     " ", 
     RowBox[{"\[Psi]EA", ".", " ", "These"}], " ", "Basis", " ", "functions", 
     " ", "are", " ", "already", " ", "streamlined", " ", "and", " ", "need", 
     " ", "to", " ", "be", " ", "multiplied", " ", "by", " ", 
     FractionBox[
      RowBox[{"\[Psi]Factor", "[", 
       RowBox[{"n", ",", "l", ",", "a"}], "]"}], 
      SqrtBox[
       RowBox[{"Norm\[Psi]A", "[", 
        RowBox[{"a", ",", "n"}], "]"}]]], " ", "to", " ", "be", " ", 
     "normalized"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"NNMAX", " ", "=", " ", "20"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Do", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\[Psi]PA", "[", 
            RowBox[{
            "Cx_", ",", "Cy_", ",", "Cz_", ",", "n", ",", "l", ",", "a"}], 
            "]"}], "=", 
           RowBox[{"Expand", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"p", "[", 
               RowBox[{
                FractionBox[
                 RowBox[{
                  SuperscriptBox["Cx", "2"], "+", 
                  SuperscriptBox["Cy", "2"], "+", 
                  SuperscriptBox["Cz", "2"]}], "2"], ",", "a", ",", "n"}], 
               "]"}], 
              RowBox[{
               RowBox[{"Ypolynom", "\[LeftDoubleBracket]", 
                RowBox[{"n", "+", "1"}], "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", 
               RowBox[{"n", "+", "l", "+", "1"}], "\[RightDoubleBracket]"}]}],
              "/.", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"x1", "\[Rule]", "Cx"}], ",", 
               RowBox[{"y1", "\[Rule]", "Cy"}], ",", 
               RowBox[{"z1", "\[Rule]", "Cz"}]}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"\[Psi]EA", "[", 
            RowBox[{
            "Cx_", ",", "Cy_", ",", "Cz_", ",", "n", ",", "l", ",", "a", ",", 
             "\[Alpha]_"}], "]"}], "=", 
           RowBox[{"Expand", "[", 
            RowBox[{
             RowBox[{"\[Alpha]", " ", 
              RowBox[{"p", "[", 
               RowBox[{
                FractionBox[
                 RowBox[{
                  SuperscriptBox["Cx", "2"], "+", 
                  SuperscriptBox["Cy", "2"], "+", 
                  SuperscriptBox["Cz", "2"]}], "2"], ",", "a", ",", "n"}], 
               "]"}], 
              RowBox[{
               RowBox[{"Ypolynom", "\[LeftDoubleBracket]", 
                RowBox[{"n", "+", "1"}], "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", 
               RowBox[{"n", "+", "l", "+", "1"}], "\[RightDoubleBracket]"}]}],
              "/.", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"x1", "\[Rule]", "Cx"}], ",", 
               RowBox[{"y1", "\[Rule]", "Cy"}], ",", 
               RowBox[{"z1", "\[Rule]", "Cz"}]}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"\[Psi]Factor", "[", 
            RowBox[{"n", ",", "l"}], "]"}], " ", "=", " ", 
           RowBox[{
            RowBox[{"NormFactor", "\[LeftDoubleBracket]", 
             RowBox[{"n", "+", "1"}], "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", 
            RowBox[{"n", "+", "1", "+", "l"}], "\[RightDoubleBracket]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Norm\[Psi]A", "[", 
            RowBox[{"a", ",", "n"}], "]"}], "=", 
           FractionBox[
            RowBox[{
             RowBox[{"a", "!"}], 
             RowBox[{"Gamma", "[", 
              RowBox[{"n", "+", "a", "+", 
               RowBox[{"3", "/", "2"}]}], "]"}]}], 
            RowBox[{"Gamma", "[", 
             RowBox[{"n", "+", 
              RowBox[{"3", "/", "2"}]}], "]"}]]}], ";"}], 
         "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"a", ",", "0", ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"NNMAX", "-", "n"}], ")"}], "/", "2"}]}], "}"}]}], "]"}],
        "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"l", ",", 
         RowBox[{"-", "n"}], ",", "n"}], "}"}]}], "]"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", "NNMAX"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.801483781358558*^9, 3.801483861061363*^9}, {
   3.801483892266141*^9, 3.801484046177003*^9}, {3.8014840998496323`*^9, 
   3.801484101849668*^9}, {3.801491568949215*^9, 3.801491580251293*^9}, {
   3.8014916741950665`*^9, 3.801491703597096*^9}, {3.80149217005377*^9, 
   3.801492171929135*^9}, 3.80149307131983*^9, {3.8014932889821844`*^9, 
   3.8014932895965414`*^9}, {3.801493349000366*^9, 3.801493351914562*^9}, {
   3.801493461388981*^9, 3.801493463849347*^9}, {3.801494152695257*^9, 
   3.8014941653367057`*^9}, {3.801494322068739*^9, 3.8014943225194855`*^9}, 
   3.8281795281924686`*^9, {3.90903883978197*^9, 3.909038848996833*^9}},
 CellLabel->
  "In[407]:=",ExpressionUUID->"b45c4542-1141-49df-9886-4f1a4cb7942a"],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"2", "!"}], " ", 
   RowBox[{"Gamma", "[", 
    RowBox[{"0", "+", "2", "+", 
     RowBox[{"3", "/", "2"}]}], "]"}]}], 
  RowBox[{"Gamma", "[", 
   RowBox[{"0", "+", 
    RowBox[{"3", "/", "2"}]}], "]"}]]], "Input",
 CellChangeTimes->{{3.8248398702291875`*^9, 3.824839892340123*^9}},
 CellLabel->
  "In[409]:=",ExpressionUUID->"ad6a48d7-886c-473d-beef-abaec61a9c78"],

Cell[BoxData[
 FractionBox["15", "2"]], "Output",
 CellChangeTimes->{{3.8248398783137035`*^9, 3.824839893026379*^9}, 
   3.825004883339221*^9, 3.825005236954102*^9, 3.828178686947466*^9, 
   3.828431135821845*^9, 3.828454160721645*^9, 3.828454321057457*^9, 
   3.832081051374395*^9, 3.838373304814853*^9, 3.847194711119281*^9, 
   3.847256212829567*^9, 3.849172216924398*^9, 3.8605570919884424`*^9, 
   3.869902870214288*^9, 3.869903214776206*^9, 3.880717027813957*^9, 
   3.909038654984126*^9, 3.909038863972106*^9, 3.909682334713388*^9, 
   3.91008319086831*^9, 3.91028806366545*^9, 3.910288508843001*^9, 
   3.910298559701144*^9, 3.913718139849747*^9, 3.91381458181469*^9, 
   3.915010777700225*^9, 3.9151118191274195`*^9, 3.915173370626628*^9, 
   3.9169979210909357`*^9, 3.917005138146185*^9, 3.917335275389461*^9, 
   3.917335528194426*^9, 3.91733817131795*^9, {3.917440419786797*^9, 
   3.917440438940598*^9}, {3.917789062753349*^9, 3.917789070080349*^9}, 
   3.917793914645764*^9, {3.917853034392132*^9, 3.917853052828617*^9}},
 CellLabel->
  "Out[409]=",ExpressionUUID->"614c91b8-858a-4f25-9515-54b810e83e61"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Define general index maps ",
 Cell[BoxData[
  ButtonBox["\<\"Run Section\"\>",
   Appearance->Automatic,
   ButtonFunction:>(SelectionMove[
      EvaluationCell[], All, CellGroup]; FrontEndExecute[
      FrontEndToken["EvaluateCells"]]),
   Evaluator->Automatic,
   Method->"Preemptive"]], "Output",
  CellChangeTimes->{3.78223244855991*^9},ExpressionUUID->
  "44ff7e7f-cd69-4348-81ba-08c08551b7a2"]
}], "Section",
 CellChangeTimes->{{3.785819478459926*^9, 3.785819486355302*^9}, {
   3.786263559175673*^9, 3.786263565701863*^9}, {3.78629094045198*^9, 
   3.7862909494401045`*^9}, {3.787565852815752*^9, 3.787565853691145*^9}, {
   3.787565901809243*^9, 3.787565904077835*^9}, {3.787745009027326*^9, 
   3.787745025348254*^9}, {3.806405148350213*^9, 3.806405183834861*^9}, {
   3.815213094887334*^9, 3.815213115800107*^9}, {3.816076110274097*^9, 
   3.816076110941307*^9}, {3.822677700307963*^9, 3.8226777162539253`*^9}, 
   3.822677748290924*^9},ExpressionUUID->"ff575391-6d66-415c-8b34-\
30636ec75051"],

Cell[CellGroupData[{

Cell["\<\
Give each different combination of N1,N2,NN a unique case number (we will \
from now on assume N2 \[GreaterEqual] N1 w.l.o.g.)\
\>", "Subsubsection",
 CellChangeTimes->{{3.782232012882856*^9, 3.7822320189148817`*^9}, {
  3.7894294422251472`*^9, 3.789429452489951*^9}, {3.789754600128097*^9, 
  3.789754635670063*^9}, {3.789755022266953*^9, 3.789755029146384*^9}, {
  3.789755737145752*^9, 3.789755747900772*^9}, {3.7898894273517437`*^9, 
  3.789889436703219*^9}, {3.789976068210112*^9, 3.789976122037921*^9}, {
  3.789976741813513*^9, 
  3.789976745282309*^9}},ExpressionUUID->"bd1b4d6f-16b7-48d2-937f-\
a8ba662522bd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "define", " ", "a", " ", "mapping", " ", "from", " ", "the", " ", 
    "casenumber", " ", "to", " ", "the", " ", "tuple", " ", "of", " ", 
    "indexes", " ", 
    RowBox[{"{", 
     RowBox[{"NN", ",", "N1", ",", "N2"}], "}"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"generateCases", "[", "NNmax_", "]"}], " ", ":=", " ", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"caseToNs", "=", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"NmaxToTotCases", "=", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"ntot", "=", "0"}], ",", "nt"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Clear", "[", "NsToCase", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"Do", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"Do", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"Do", "[", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"n", "\[Equal]", "m"}], " ", "||", " ", 
                    RowBox[{"n1", "\[Equal]", "m"}], " ", "||", " ", 
                    RowBox[{"n2", " ", "\[Equal]", "m"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"nt", "=", 
                    RowBox[{"n1", "+", "n2", "-", "n"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"EvenQ", "[", "nt", "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"0", "\[LessEqual]", "nt"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"nt", "\[LessEqual]", 
                    RowBox[{"2", "*", 
                    RowBox[{"Min", "[", 
                    RowBox[{"n1", ",", "n2"}], "]"}]}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"ntot", " ", "=", " ", 
                    RowBox[{"ntot", "+", "1"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"caseToNs", ",", 
                    RowBox[{"{", 
                    RowBox[{"ntot", ",", "n", ",", "n1", ",", "n2"}], "}"}]}],
                     "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"NsToCase", "[", 
                    RowBox[{"n", ",", "n1", ",", "n2"}], "]"}], "=", "ntot"}],
                     ";"}]}], "\[IndentingNewLine]", "]"}]}], 
                    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
                    "]"}]}]}], "\[IndentingNewLine]", "]"}], 
                   "\[IndentingNewLine]", ",", 
                   RowBox[{"{", 
                    RowBox[{"n2", ",", "n1", ",", "m"}], "}"}]}], "]"}], 
                 ";"}], " ", 
                RowBox[{"(*", 
                 RowBox[{
                  RowBox[{"<", 
                   RowBox[{
                    RowBox[{"--", " ", "this"}], " ", "is", " ", "false"}]}], 
                  ",", " ", 
                  RowBox[{
                  "n1", " ", "should", " ", "be", " ", "replaced", " ", 
                   "with", " ", "0"}]}], "*)"}], "\[IndentingNewLine]", ",", 
                RowBox[{"{", 
                 RowBox[{"n1", ",", "0", ",", "m"}], "}"}]}], "]"}], ";"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"{", 
              RowBox[{"n", ",", "0", ",", "m"}], "}"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"NmaxToTotCases", ",", 
             RowBox[{"{", 
              RowBox[{"m", ",", "ntot"}], "}"}]}], "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"m", ",", "0", ",", "NNmax"}], "}"}]}], "]"}], ";", "\n", 
        RowBox[{"{", " ", 
         RowBox[{"caseToNs", ",", "NmaxToTotCases"}], "}"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"generateCases", "[", "20", "]"}], ";"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.789976152788108*^9, 3.789976155091975*^9}, {
   3.789976191399562*^9, 3.789976287144655*^9}, {3.7899763539141817`*^9, 
   3.789976527568708*^9}, {3.789976613131372*^9, 3.789976768639035*^9}, {
   3.7899767992488937`*^9, 3.789976805207182*^9}, {3.789976839251502*^9, 
   3.789976909339946*^9}, {3.78997694993097*^9, 3.789977010760843*^9}, {
   3.789977050302517*^9, 3.789977178379327*^9}, {3.789977354743075*^9, 
   3.789977373823838*^9}, {3.789977421044973*^9, 3.78997766055444*^9}, {
   3.7899777111409106`*^9, 3.789977722387916*^9}, 3.7899777680835476`*^9, {
   3.789977809956893*^9, 3.789977877748333*^9}, 3.78997792943449*^9, {
   3.789978184013712*^9, 3.789978190304493*^9}, 3.789978227398011*^9, {
   3.789979110885835*^9, 3.789979111742309*^9}, {3.791113221901575*^9, 
   3.791113231605608*^9}, {3.791113287748391*^9, 3.791113364169813*^9}, 
   3.791113400659693*^9, {3.791113499544673*^9, 3.791113519024963*^9}, {
   3.791113568502211*^9, 3.791113576987167*^9}, {3.791118339336257*^9, 
   3.791118340371645*^9}, {3.804348599657333*^9, 3.804348609250066*^9}, {
   3.808028758115481*^9, 3.8080287624584684`*^9}, 3.821718956176189*^9, {
   3.82171901126256*^9, 3.82171904249162*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"60d06ba9-61fb-4e9a-945f-1a4499e4863f"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
The Theory will be a vector like {2,1,1,0,0}, giving for each entry the \
maximal a\
\>", "Subsubsection",
 CellChangeTimes->{{3.782232012882856*^9, 3.7822320189148817`*^9}, {
  3.7894294422251472`*^9, 3.789429452489951*^9}, {3.789754600128097*^9, 
  3.789754635670063*^9}, {3.789755022266953*^9, 3.789755029146384*^9}, {
  3.789755737145752*^9, 3.789755747900772*^9}, {3.7898894273517437`*^9, 
  3.789889436703219*^9}, {3.789976129257703*^9, 3.789976137447473*^9}, {
  3.791111171191302*^9, 3.791111181402476*^9}, {3.791118135170786*^9, 
  3.7911181787405047`*^9}, {3.797685457451344*^9, 3.7976854608622155`*^9}, {
  3.800777161996907*^9, 
  3.800777163184784*^9}},ExpressionUUID->"fce93876-ca66-4d8e-b781-\
36792e9888e1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"generateGetIDX", "[", "theory_", "]"}], " ", ":=", " ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"NN", "=", "0"}], ",", 
       RowBox[{"idx", "=", "0"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Do", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"Do", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"getIDX", "[", 
                 RowBox[{"NN", ",", "a", ",", "l"}], "]"}], " ", "=", " ", 
                "idx"}], ";", "\[IndentingNewLine]", 
               RowBox[{"idx", "=", 
                RowBox[{"idx", "+", "1"}]}], ";"}], "\[IndentingNewLine]", 
              ",", 
              RowBox[{"{", 
               RowBox[{"l", ",", 
                RowBox[{"-", "NN"}], ",", "NN"}], "}"}]}], "]"}], ";"}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"a", ",", "0", ",", "amax"}], "}"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"NN", "=", 
          RowBox[{"NN", "+", "1"}]}], ";"}], "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"amax", ",", "theory"}], "}"}]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"generateGetIDXfull10", "[", "]"}], " ", ":=", " ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"NN", "=", "0"}], ",", 
       RowBox[{"idx", "=", "0"}], ",", 
       RowBox[{"theory", "=", 
        RowBox[{"{", 
         RowBox[{
         "10", ",", "9", ",", "9", ",", "8", ",", "8", ",", "7", ",", "7", 
          ",", "6", ",", "6", ",", "5", ",", "5", ",", "4", ",", "4", ",", 
          "3", ",", "3", ",", "2", ",", "2", ",", "1", ",", "1", ",", "0", 
          ",", "0"}], "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Do", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"Do", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"getIDXfull10", "[", 
                 RowBox[{"NN", ",", "a", ",", "l"}], "]"}], " ", "=", " ", 
                "idx"}], ";", "\[IndentingNewLine]", 
               RowBox[{"idx", "=", 
                RowBox[{"idx", "+", "1"}]}], ";"}], "\[IndentingNewLine]", 
              ",", 
              RowBox[{"{", 
               RowBox[{"l", ",", 
                RowBox[{"-", "NN"}], ",", "NN"}], "}"}]}], 
             "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"a", ",", "0", ",", "amax"}], "}"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"NN", "=", 
          RowBox[{"NN", "+", "1"}]}], ";"}], "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"amax", ",", "theory"}], "}"}]}], "\[IndentingNewLine]", 
       "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"generateGetIDXfull10", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"generateReferenceMapToFull10", "[", "theory_", "]"}], " ", ":=", 
   " ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"NN", "=", "0"}], ",", 
       RowBox[{"idx", "=", "0"}]}], "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Clear", "[", "getReferenceToFull10", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Do", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"Do", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"getReferenceToFull10", "[", "idx", "]"}], " ", "=", 
                " ", 
                RowBox[{"getIDXfull10", "[", 
                 RowBox[{"NN", ",", "a", ",", "l"}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"idx", "=", 
                RowBox[{"idx", "+", "1"}]}], ";"}], "\[IndentingNewLine]", 
              ",", 
              RowBox[{"{", 
               RowBox[{"l", ",", 
                RowBox[{"-", "NN"}], ",", "NN"}], "}"}]}], "]"}], ";"}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"a", ",", "0", ",", "amax"}], "}"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"NN", "=", 
          RowBox[{"NN", "+", "1"}]}], ";"}], "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"amax", ",", "theory"}], "}"}]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"generateIDXset", "[", "theory_", "]"}], " ", ":=", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NN", "=", "0"}], ",", 
        RowBox[{"idx", "=", "0"}], ",", " ", 
        RowBox[{"IDXset", "=", 
         RowBox[{"{", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Clear", "[", "getIDX", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"generateGetIDX", "[", "theory", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"Do", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"Do", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"AppendTo", "[", 
                 RowBox[{"IDXset", ",", 
                  RowBox[{"{", 
                   RowBox[{"NN", ",", "a", ",", "l"}], "}"}]}], "]"}], ";"}], 
               "\[IndentingNewLine]", ",", 
               RowBox[{"{", 
                RowBox[{"l", ",", 
                 RowBox[{"-", "NN"}], ",", "NN"}], "}"}]}], "]"}], ";"}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"a", ",", "0", ",", "amax"}], "}"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"NN", "=", 
           RowBox[{"NN", "+", "1"}]}], ";"}], "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"amax", ",", "theory"}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", "IDXset"}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"theory", "\[LeftDoubleBracket]", "n", "\[RightDoubleBracket]"}],
      " ", "=", " ", 
     RowBox[{"amax", "[", "n", "]"}]}], ",", " ", 
    RowBox[{
     RowBox[{"Length", "[", "theory", "]"}], " ", "=", " ", "NMAX"}], ",", 
    " ", 
    RowBox[{
     RowBox[{"Max", "[", "theory", "]"}], "=", "AMAX"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"e", ".", "g", ".", " ", "theory"}], " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"3", ",", "3", ",", "2", ",", "2", ",", "1"}], "}"}]}], ";"}], 
   " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "From", " ", "the", " ", "chosen", " ", "theory", " ", "get", " ", "all", 
    " ", "combinations", " ", "that", " ", "contribute", " ", "to", " ", 
    "the", " ", "full", " ", "sum", 
    RowBox[{
     SubsuperscriptBox["\[Sum]", 
      RowBox[{"b", "=", "0"}], "AMAX"], " ", 
     RowBox[{
      SubsuperscriptBox["\[Sum]", 
       RowBox[{"c", "=", "0"}], "AMAX"], " ", 
      RowBox[{
       SubsuperscriptBox["\[Sum]", 
        RowBox[{"n1", "=", "0"}], "NMAX"], " ", 
       RowBox[{
        SubsuperscriptBox["\[Sum]", 
         RowBox[{"n2", "=", "0"}], "NMAX"], " ", 
        RowBox[{"for", " ", "each", " ", "tuple", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", ",", "a"}], ")"}], "."}]}]}]}]}]}]}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.791111152012912*^9, 3.791111155691098*^9}, {
   3.7911111999198017`*^9, 3.7911113253507833`*^9}, {3.791111669095378*^9, 
   3.791111676311426*^9}, {3.791111739833006*^9, 3.791111818159302*^9}, {
   3.791111891161269*^9, 3.791111979279878*^9}, {3.791112041092432*^9, 
   3.7911121272531557`*^9}, {3.791112804859998*^9, 3.791112813321915*^9}, {
   3.791113625652362*^9, 3.791113636626644*^9}, {3.791118115073872*^9, 
   3.7911181213198338`*^9}, {3.791118188233492*^9, 3.79111818898402*^9}, 
   3.791198045026047*^9, {3.7924888821027308`*^9, 3.7924889420368*^9}, {
   3.792488994812839*^9, 3.792489021598979*^9}, {3.792489160096096*^9, 
   3.7924891678827457`*^9}, {3.847214968312122*^9, 3.847214979231797*^9}, {
   3.8472150124775686`*^9, 3.847215100469116*^9}, {3.8472151794569983`*^9, 
   3.8472152753621883`*^9}, 3.8472153217083187`*^9, {3.9173389938270187`*^9, 
   3.917339028880444*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"6f32c501-a4e8-4fbb-a4b0-b16a5e79c07e"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Test function shift  ",
 Cell[BoxData[
  ButtonBox["\<\"Run Section\"\>",
   Appearance->Automatic,
   ButtonFunction:>(SelectionMove[
      EvaluationCell[], All, CellGroup]; FrontEndExecute[
      FrontEndToken["EvaluateCells"]]),
   Evaluator->Automatic,
   Method->"Preemptive"]], "Output",
  CellChangeTimes->{3.78223244855991*^9},ExpressionUUID->
  "46bcc855-81e9-4ef9-8c97-f4e07159ea43"]
}], "Section",
 CellChangeTimes->{{3.619842257633191*^9, 3.619842264441731*^9}, {
  3.619842509238817*^9, 3.619842514084055*^9}, {3.7861761004759855`*^9, 
  3.786176134199703*^9}, {3.787238861446561*^9, 3.787238862833744*^9}, {
  3.79050297118994*^9, 3.790502972114197*^9}, {3.8284493766356387`*^9, 
  3.828449402846883*^9}, {3.828451054069398*^9, 3.828451056807163*^9}, {
  3.8383717734401484`*^9, 3.838371774001643*^9}, {3.909052803619813*^9, 
  3.909052807241439*^9}, {3.918621847153427*^9, 
  3.918621856278901*^9}},ExpressionUUID->"fc631935-8a27-46a4-8f71-\
5821408a536a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"p0", "[", "vz_", "]"}], "=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"vz", "+", "1"}], ")"}], "^", "10"}], " ", ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"densitydist", " ", "[", 
    RowBox[{"vx_", ",", "vy_", ",", "vz_"}], "]"}], "=", "  ", 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", "vx", " ", ")"}], "2"], " ", "+", " ", 
         SuperscriptBox["vy", "2"], " ", "+", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"vz", "+", "1"}], ")"}], "2"]}], ")"}]}], "/", "2"}], 
     "]"}], 
    RowBox[{"(", 
     RowBox[{"(", 
      RowBox[{"p0", "[", "vz", "]"}], ")"}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Rho]0", " ", "=", " ", 
   RowBox[{"Integrate", "[", " ", 
    RowBox[{
     RowBox[{"densitydist", "[", 
      RowBox[{"vx", ",", "vy", ",", "vz"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"vx", ",", 
       RowBox[{"-", "Infinity"}], ",", " ", "Infinity"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"vy", ",", 
       RowBox[{"-", "Infinity"}], ",", " ", "Infinity"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"vz", ",", 
       RowBox[{"-", "Infinity"}], ",", " ", "Infinity"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vmean", "=", 
   RowBox[{"Integrate", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"{", 
        RowBox[{"vx", ",", "vy", ",", "vz"}], "}"}], ")"}], 
      RowBox[{
       RowBox[{"densitydist", "[", 
        RowBox[{"vx", ",", "vy", ",", "vz"}], "]"}], "/", "\[Rho]0"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"vx", ",", 
       RowBox[{"-", "Infinity"}], ",", " ", "Infinity"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"vy", ",", 
       RowBox[{"-", "Infinity"}], ",", " ", "Infinity"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"vz", ",", 
       RowBox[{"-", "Infinity"}], ",", " ", "Infinity"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f0", "[", 
    RowBox[{"vx_", ",", "vy_", ",", "vz_"}], "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"densitydist", "[", 
     RowBox[{
      RowBox[{"vx", "+", 
       RowBox[{"vmean", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", 
      RowBox[{"vy", "+", 
       RowBox[{"vmean", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ",", 
      RowBox[{"vz", "+", 
       RowBox[{"vmean", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}]}], "]"}], "/", 
    RowBox[{"(", "\[Rho]0", ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kk", "=", 
   RowBox[{"Integrate", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"(", " ", 
       RowBox[{
        RowBox[{"1", "/", "3"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["vx", "2"], "+", 
          SuperscriptBox["vy", "2"], "+", 
          SuperscriptBox["vz", "2"]}], ")"}]}], ")"}], 
      RowBox[{"f0", "[", 
       RowBox[{"vx", ",", "vy", ",", "vz"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"vx", ",", 
       RowBox[{"-", "Infinity"}], ",", " ", "Infinity"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"vy", ",", 
       RowBox[{"-", "Infinity"}], ",", " ", "Infinity"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"vz", ",", 
       RowBox[{"-", "Infinity"}], ",", " ", "Infinity"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ff0", "[", 
     RowBox[{"vx_", ",", "vy_", ",", "vz_"}], "]"}], "=", 
    RowBox[{
     SuperscriptBox["kk", 
      RowBox[{"3", "/", "2"}]], 
     RowBox[{
      RowBox[{"densitydist", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          SuperscriptBox["kk", 
           RowBox[{"1", "/", "2"}]], 
          RowBox[{"(", "vx", ")"}]}], "+", 
         RowBox[{"vmean", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{
          SuperscriptBox["kk", 
           RowBox[{"1", "/", "2"}]], 
          RowBox[{"(", "vy", ")"}]}], "+", 
         RowBox[{"vmean", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{
          SuperscriptBox["kk", 
           RowBox[{"1", "/", "2"}]], 
          RowBox[{"(", "vz", ")"}]}], "+", 
         RowBox[{"vmean", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}]}], "]"}], "/", "\[Rho]0"}]}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kkA", "=", 
   RowBox[{"Integrate", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", " ", 
        RowBox[{
         RowBox[{"1", "/", "3"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"vx", "-", 
              RowBox[{"vmean", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"vy", "-", 
              RowBox[{"vmean", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"vz", "-", 
              RowBox[{"vmean", "[", 
               RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "2"]}], ")"}]}], 
        ")"}], "/", 
       RowBox[{"(", "\[Rho]0", ")"}]}], " ", 
      RowBox[{"densitydist", "[", 
       RowBox[{"vx", ",", "vy", ",", "vz"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"vx", ",", 
       RowBox[{"-", "Infinity"}], ",", " ", "Infinity"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"vy", ",", 
       RowBox[{"-", "Infinity"}], ",", " ", "Infinity"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"vz", ",", 
       RowBox[{"-", "Infinity"}], ",", " ", "Infinity"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.909134635410757*^9, 3.909134640326226*^9}, 
   3.909135049423489*^9, {3.909135081283708*^9, 3.90913508809242*^9}, {
   3.909224427439926*^9, 3.9092244446559095`*^9}, {3.9092245199275093`*^9, 
   3.909224523551257*^9}, {3.9092247337010603`*^9, 3.909224753416008*^9}, {
   3.909224810526659*^9, 3.909224845529717*^9}, {3.909224968723265*^9, 
   3.9092249835634623`*^9}, {3.909225514819577*^9, 3.9092255173633194`*^9}, {
   3.909239232033763*^9, 3.909239263237988*^9}, {3.90923941374088*^9, 
   3.9092394963385344`*^9}, {3.909239785699565*^9, 3.9092397875228605`*^9}, {
   3.9170010748757505`*^9, 3.917001143056775*^9}, {3.917002537655397*^9, 
   3.9170025920217657`*^9}, {3.917002871234514*^9, 3.917002883827044*^9}, {
   3.9170034179577913`*^9, 3.917003533851349*^9}, {3.917003565028609*^9, 
   3.9170035656023016`*^9}, {3.917003920943815*^9, 3.917003938798851*^9}, {
   3.9170040150464697`*^9, 3.917004047210782*^9}, {3.917004190440183*^9, 
   3.917004218916067*^9}, {3.918402031373501*^9, 3.9184020569920607`*^9}, 
   3.918402129565676*^9, {3.918402162124419*^9, 3.918402207755596*^9}, {
   3.918402241855797*^9, 3.918402246448332*^9}, {3.918402426421563*^9, 
   3.9184024588642178`*^9}, {3.918402697022703*^9, 3.918402701919655*^9}, {
   3.91840274901791*^9, 3.918402750048108*^9}, 3.918402780892314*^9, {
   3.918403147033009*^9, 3.918403149585112*^9}, {3.918403239970724*^9, 
   3.9184032422213597`*^9}, {3.918403562063308*^9, 3.918403569112514*^9}, {
   3.9184678560373917`*^9, 3.918467858249015*^9}, 3.918468038703596*^9, {
   3.9184681398833733`*^9, 3.918468143589973*^9}, {3.918468215779606*^9, 
   3.918468239425407*^9}, 3.918483406886676*^9, {3.918483598251193*^9, 
   3.918483600810483*^9}, {3.9184839362658033`*^9, 3.918483936986204*^9}, {
   3.9184844062783127`*^9, 3.9184844065929337`*^9}, {3.918485053851553*^9, 
   3.91848505931201*^9}, {3.918615871404627*^9, 3.918615881632124*^9}, {
   3.918616093784257*^9, 3.9186160947865887`*^9}, {3.9186161353600492`*^9, 
   3.918616145325653*^9}},
 CellLabel->
  "In[1345]:=",ExpressionUUID->"afa61b89-9901-42e6-aa59-1497b7ea0446"],

Cell[CellGroupData[{

Cell[BoxData["vmean"], "Input",
 CellChangeTimes->{{3.917002716212682*^9, 3.917002718141856*^9}},
 CellLabel->
  "In[1353]:=",ExpressionUUID->"ea9ed237-4002-49c5-9b71-5fb3351e0e1f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", 
   RowBox[{"-", "1"}]}], "}"}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGBQA+LevMe/xfTfOm55WSEqDqQnMN/PBtF/AnetBtHFkS6m
EkDaylizfSeQPl7y7ewuIL2KR27fGyCtU8/9bZrBW0eG+WlBM4H0vunnSg8Z
vnV8GnyiE0R//x66DEQHuOieBdEKXdNugGi5zVs/gWgpTSbWw0D6MtN9KRC9
0zRYF0QX7z7XC6LLEjdcB9FC6s8NHwHpA+ws6SDaJiyvBkRfPbBxOojmqmxM
eAqkJ/j1vX8JpPdkcji+AtJOl82qQHSL5qM1WkZvHSdNjTwOosVmfb8Aok+o
eD4C0SqbRT+C6PU5wX9BtPJEBQ5tIM17uDddB0gbabRV6gJpAPwelCM=
  "],
 CellLabel->
  "Out[1353]=",ExpressionUUID->"0c9811f4-efb9-4f74-bf82-2d79f3083f12"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData["kk"], "Input",
 CellChangeTimes->{{3.918402723338484*^9, 3.918402725369274*^9}},
 CellLabel->
  "In[1354]:=",ExpressionUUID->"f5fff19e-5a2b-4797-8f85-1278d02435d1"],

Cell[BoxData[
 FractionBox["13", "3"]], "Output",
 CellChangeTimes->{3.9184028666900787`*^9, 3.918403177418227*^9, 
  3.918403268724591*^9, 3.918403477682563*^9, 3.91840362407136*^9, 
  3.918403798973638*^9, 3.9184039466045513`*^9, 3.918404718487342*^9, 
  3.918405309535001*^9, 3.918467471227944*^9, 3.918467896129527*^9, 
  3.918468067476584*^9, 3.9184682855865107`*^9, 3.918473988052494*^9, 
  3.9184833244511414`*^9, 3.9184839762669992`*^9, 3.918484433717396*^9, 
  3.9186159110721493`*^9, 3.918616122803569*^9, 3.918616199742155*^9, 
  3.918616338289536*^9, 3.9186164566818037`*^9, 3.918616554612159*^9, 
  3.9186166410218477`*^9, 3.918619452435244*^9, 3.918621644198032*^9},
 CellLabel->
  "Out[1354]=",ExpressionUUID->"171fd568-b18c-4c3d-9e92-da3074201818"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData["kkA"], "Input",
 CellChangeTimes->{{3.918402729310887*^9, 3.918402730083677*^9}},
 CellLabel->
  "In[1355]:=",ExpressionUUID->"30c0b21c-d618-43e0-a8ae-918d72fd7e4f"],

Cell[BoxData[
 FractionBox["13", "3"]], "Output",
 CellChangeTimes->{3.918402866693644*^9, 3.918403177424348*^9, 
  3.918403268728918*^9, 3.9184034777150793`*^9, 3.918403624102571*^9, 
  3.918403798977577*^9, 3.918403946608501*^9, 3.918404718492036*^9, 
  3.918405309540203*^9, 3.918467471252034*^9, 3.9184678961582403`*^9, 
  3.918468067481308*^9, 3.918468285590757*^9, 3.918473988070579*^9, 
  3.9184833244552298`*^9, 3.918483976286929*^9, 3.918484433721053*^9, 
  3.91861591107648*^9, 3.918616122807797*^9, 3.9186161997460613`*^9, 
  3.918616338293097*^9, 3.918616456711248*^9, 3.9186165546367683`*^9, 
  3.9186166410256443`*^9, 3.918619452439435*^9, 3.918621644201668*^9},
 CellLabel->
  "Out[1355]=",ExpressionUUID->"372bfbeb-cb70-4fe3-8ca5-9391d542c91b"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"ff0", "[", 
    RowBox[{"0", ",", "0", ",", "vz"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"vz", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9090542883121214`*^9, 3.909054296555608*^9}, 
   3.909057704217328*^9, {3.909057887777197*^9, 3.909057925467902*^9}, {
   3.909057976200138*^9, 3.909057994907751*^9}, {3.909239303304226*^9, 
   3.90923932317293*^9}, {3.909239803714486*^9, 3.9092398054768515`*^9}, {
   3.917003850254036*^9, 3.91700387964654*^9}, {3.917003955989467*^9, 
   3.9170039785801153`*^9}, 3.917004096507179*^9},
 CellLabel->
  "In[1357]:=",ExpressionUUID->"7f39e42d-679f-4c68-8d00-7a7f4a2242aa"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1: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
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    StyleBox[
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1: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
              "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{-3, 3}, {0., 0.4083749770810508}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>
          , 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           Plot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, 
          "PlotRange" -> {{-3, 3}, {0., 0.4083749770810508}}, 
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}],
     Selectable->False]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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
          "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PanelPlotLayout" -> <||>, 
       "PlotRange" -> {{-3, 3}, {0., 0.4083749770810508}}, 
       "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
       "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-3, 3}, {0., 0.4083749770810508}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.909054298039503*^9, {3.909057697961478*^9, 3.909057705210027*^9}, {
   3.9090578611906457`*^9, 3.909057926403144*^9}, {3.90905797721818*^9, 
   3.909057995867742*^9}, 3.909058181044428*^9, 3.909058261012438*^9, 
   3.909058326917162*^9, 3.909128139162285*^9, {3.9091281870081353`*^9, 
   3.909128209519893*^9}, 3.9091282439552393`*^9, 3.909128285103849*^9, 
   3.909128611137305*^9, 3.909128756933609*^9, 3.909129613063007*^9, {
   3.909130789305578*^9, 3.909130839837774*^9}, 3.909131102381779*^9, 
   3.909131161565475*^9, 3.90913163344928*^9, 3.909131752204588*^9, 
   3.909132336618666*^9, 3.909132409899255*^9, {3.909134656160219*^9, 
   3.909134670812721*^9}, 3.9091350941125293`*^9, 3.909231860409453*^9, {
   3.909239307065646*^9, 3.909239324115741*^9}, 3.9092395432703342`*^9, {
   3.909239799055333*^9, 3.909239806603086*^9}, 3.9100833485507746`*^9, 
   3.9102985726907907`*^9, 3.9138145930985575`*^9, 3.9150107827010236`*^9, 
   3.9151118264718485`*^9, 3.915173376782547*^9, 3.917002678545727*^9, {
   3.917003798988372*^9, 3.9170038200341177`*^9}, {3.917003854875344*^9, 
   3.917003880746809*^9}, {3.917003966057471*^9, 3.917003979481061*^9}, 
   3.9170040913726416`*^9, 3.917004128082671*^9, 3.917004279128053*^9, 
   3.9170052291568165`*^9, 3.9173356093953447`*^9, 3.917338223785502*^9, 
   3.917440496976016*^9, 3.917789104413843*^9, 3.917793939260721*^9, 
   3.918402478529739*^9, 3.9184026382934*^9, 3.918402866728114*^9, 
   3.918403177476473*^9, 3.918403268757859*^9, 3.9184034777597213`*^9, 
   3.918403624159237*^9, 3.918403799007687*^9, 3.9184039466643248`*^9, 
   3.918404718524838*^9, 3.91840530957071*^9, 3.9184674712894783`*^9, 
   3.918467896193097*^9, 3.918468067541572*^9, 3.918468285628194*^9, 
   3.9184739881126833`*^9, 3.9184833245145206`*^9, 3.918483976339151*^9, 
   3.9184844337564497`*^9, 3.918615911242804*^9, 3.9186161229234467`*^9, 
   3.9186161998857937`*^9, 3.918616338398891*^9, 3.918616456848585*^9, 
   3.9186165547484493`*^9, 3.918616641132278*^9, 3.9186194526132717`*^9, 
   3.918621644354321*^9},
 CellLabel->
  "Out[1357]=",ExpressionUUID->"370cef48-b591-414c-afe9-b32859aa572c"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"ff0", "[", 
    RowBox[{"0", ",", "vy", ",", "1.5"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"vy", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.909132484470792*^9, 3.909132489365788*^9}, {
   3.909132539930149*^9, 3.909132542136178*^9}, {3.909239331747577*^9, 
   3.909239347839304*^9}, {3.909239811297323*^9, 3.909239813164728*^9}, {
   3.910298641310781*^9, 3.91029864204046*^9}, 3.918404532097775*^9, {
   3.918483291268971*^9, 3.918483295006795*^9}, 3.918616307182158*^9},
 CellLabel->
  "In[1358]:=",ExpressionUUID->"102cf5a1-259a-404a-9226-66bd8ab5005d"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1: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
QP/3fhn7//fL/wOwi07R
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    StyleBox[
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1: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
QP/3fhn7//fL/wOwi07R
              "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{-3, 3}, {0., 0.40772638240654874`}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           Plot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, 
          "PlotRange" -> {{-3, 3}, {0., 0.40772638240654874`}}, 
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}],
     Selectable->False]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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
QP/3fhn7//fL/wOwi07R
          "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PanelPlotLayout" -> <||>, 
       "PlotRange" -> {{-3, 3}, {0., 0.40772638240654874`}}, 
       "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
       "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-3, 3}, {0., 0.40772638240654874`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.918616338465119*^9, 3.9186164569331408`*^9, 
  3.918616554824794*^9, 3.918616641210693*^9, 3.9186194526991367`*^9, 
  3.918621644434956*^9},
 CellLabel->
  "Out[1358]=",ExpressionUUID->"b2df9e11-1125-40ca-bf93-3b0a6e83e30d"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Integrate", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"(", " ", 
      RowBox[{
       RowBox[{"1", "/", "3"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["vx", "2"], "+", 
         SuperscriptBox["vy", "2"], "+", 
         SuperscriptBox["vz", "2"]}], ")"}]}], ")"}], 
     RowBox[{"ff0", "[", 
      RowBox[{"vx", ",", "vy", ",", "vz"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"vx", ",", 
      RowBox[{"-", "Infinity"}], ",", " ", "Infinity"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"vy", ",", 
      RowBox[{"-", "Infinity"}], ",", " ", "Infinity"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"vz", ",", 
      RowBox[{"-", "Infinity"}], ",", " ", "Infinity"}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.9103008865702457`*^9, 3.91030089923321*^9}},
 CellLabel->
  "In[1359]:=",ExpressionUUID->"77259a72-3ea0-49dd-82b6-b6e5c7358f8b"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQBGKrP1Pn+Cm9dfRyq/Zg0nzr+CxaKMZL+61j5ZKOTdVA
+o5u2IGZQHrL+pnrxPXfOjYJSB0A0Q7phuYSQNrl7uT2nUD643rbc7uA9L9a
j31vgPTNDtNv0wzeOobsXhc0E0ir72MrO2T41vHB3A+dIDqVt2EZiNY9E3YW
ROdPOnkDTH+4/wlEOyTosh4G0ouzOaRB9LbYWl0Q3eUl0geim/2/XQfRM7Wk
jB4BacZX7QUgOnXl11YQvaMvdCGIXli2M/MpkLYof/XjJZC+lX/Y8xWIr72+
CUQLWemv1TJ665gltOE4iL6l5HgRRC+fPOkRiH4RlvARRF88M/sviP5wIZVD
G6Q++nq6DpBezHqmUhdIAwC6k6U8
  "],
 CellLabel->
  "Out[1359]=",ExpressionUUID->"f1406277-b888-40f6-aff3-c10b643d30f3"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"1", "/", "3"}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"vx", "-", 
            RowBox[{"vmean", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "/", 
          RowBox[{"kk", "^", 
           RowBox[{"(", 
            RowBox[{"1", "/", "2"}], ")"}]}]}], ")"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"vy", "-", 
            RowBox[{"vmean", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "/", 
          RowBox[{"kk", "^", 
           RowBox[{"(", 
            RowBox[{"1", "/", "2"}], ")"}]}]}], ")"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"vz", "-", 
            RowBox[{"vmean", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "/", 
          RowBox[{"kk", "^", 
           RowBox[{"(", 
            RowBox[{"1", "/", "2"}], ")"}]}]}], ")"}], "2"]}], ")"}], "/", 
     "\[Rho]0"}], " ", 
    RowBox[{"densitydist", "[", 
     RowBox[{"vx", ",", "vy", ",", "vz"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"vx", ",", 
     RowBox[{"-", "Infinity"}], ",", " ", "Infinity"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"vy", ",", 
     RowBox[{"-", "Infinity"}], ",", " ", "Infinity"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"vz", ",", 
     RowBox[{"-", "Infinity"}], ",", " ", "Infinity"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.918402975507804*^9, 3.918402978718588*^9}, {
   3.918403210903533*^9, 3.918403232461688*^9}, {3.918403351500342*^9, 
   3.918403423121352*^9}, {3.91840354539651*^9, 3.918403547941433*^9}, 
   3.918403578685305*^9, {3.918619276074903*^9, 3.9186193530685377`*^9}, {
   3.918619384679059*^9, 3.918619388898837*^9}, {3.918619419969017*^9, 
   3.918619423349502*^9}, {3.918621604683935*^9, 3.9186216135418377`*^9}},
 CellLabel->
  "In[1360]:=",ExpressionUUID->"f8ffef23-bf6b-4fcd-9b92-d725b08972a5"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.918403179784686*^9, 3.91840327984909*^9, 
  3.918403488273226*^9, 3.918403635036531*^9, 3.918403809869192*^9, 
  3.918403957448037*^9, 3.918404730158767*^9, 3.918405321298339*^9, 
  3.918467482413722*^9, 3.9184679818304358`*^9, 3.918468153232481*^9, 
  3.9184683723441057`*^9, 3.918474071300995*^9, 3.9184834091439543`*^9, 
  3.918484055946766*^9, 3.9184845112325773`*^9, 3.9186159232085342`*^9, 
  3.918616135306478*^9, 3.9186162118468113`*^9, 3.91861635047161*^9, 
  3.918616468811144*^9, 3.918616566682446*^9, 3.918616652986227*^9, 
  3.918619465283224*^9, 3.918621655862953*^9},
 CellLabel->
  "Out[1360]=",ExpressionUUID->"eb04db16-9ad4-4f65-a367-933a1d3b86cc"]
}, Closed]],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"a", ",", "b", ",", "c"}], "]"}]], "Input",
 CellChangeTimes->{{3.909239624817044*^9, 3.909239628010789*^9}},
 CellLabel->
  "In[1361]:=",ExpressionUUID->"984e3bd8-7c2c-4e0b-adfb-2e5578a659d5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"(", " ", 
     RowBox[{
      RowBox[{"vx", "^", "2"}], "+", 
      RowBox[{"vy", "^", "7"}], "+", 
      RowBox[{"vz", "^", "3"}]}], " ", ")"}], 
    RowBox[{"ff0", "[", 
     RowBox[{"vx", ",", "vy", ",", "vz"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"vx", ",", 
     RowBox[{"-", "Infinity"}], ",", " ", "Infinity"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"vy", ",", 
     RowBox[{"-", "Infinity"}], ",", " ", "Infinity"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"vz", ",", 
     RowBox[{"-", "Infinity"}], ",", " ", "Infinity"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.917003192195103*^9, 3.917003207501254*^9}, {
  3.9184030218057137`*^9, 3.918403051515719*^9}, {3.9184031669428663`*^9, 
  3.918403198969266*^9}, {3.918403685273915*^9, 3.918403691773955*^9}, {
  3.918404967825098*^9, 3.918404972671416*^9}, {3.9184674247845707`*^9, 
  3.918467431937028*^9}, {3.918621651176168*^9, 
  3.91862165496559*^9}},ExpressionUUID->"b9ed3ce9-2943-4c4b-9c40-\
07975aa098ad"],

Cell[BoxData[
 FractionBox["3", "13"]], "Output",
 CellChangeTimes->{3.9170043318522625`*^9, 3.917335648572324*^9, 
  3.917338250395178*^9, 3.917440526678345*^9, 3.917789134269718*^9, 
  3.917793969753125*^9, 3.918402506482581*^9, 3.918402665494699*^9, 
  3.918402893292814*^9, 3.918403191642027*^9, 3.918403307611943*^9, 
  3.9184035149656467`*^9, 3.9184036614196377`*^9, 3.918403836594122*^9, 
  3.918403983877365*^9, 3.91840475922651*^9, 3.918405321470456*^9, 
  3.9184674825811567`*^9, 3.9184680040437727`*^9, 3.918468175182931*^9, 
  3.918468394420004*^9, 3.918474093192746*^9, 3.918483431051421*^9, 
  3.918484077854904*^9, 3.9184845330548973`*^9, 3.91861592337815*^9, 
  3.91861613547442*^9, 3.9186162120167027`*^9, 3.9186163506397743`*^9, 
  3.918616468979868*^9, 3.918616566854163*^9, 3.9186166531622677`*^9, 
  3.91861946547799*^9, 3.9186216569857483`*^9},
 CellLabel->
  "Out[1362]=",ExpressionUUID->"fccea90b-75c5-4ef6-916c-f7be3e6a4ec4"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Integrate", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"(", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"vx", "-", 
              RowBox[{"vmean", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "/", 
            SuperscriptBox["kk", 
             RowBox[{"1", "/", "2"}]]}], ")"}], "^", "2"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"vy", "-", 
              RowBox[{"vmean", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "/", 
            SuperscriptBox["kk", 
             RowBox[{"1", "/", "2"}]]}], ")"}], "^", "7"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"vz", "-", 
              RowBox[{"vmean", "[", 
               RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "/", 
            SuperscriptBox["kk", 
             RowBox[{"1", "/", "2"}]]}], ")"}], "^", "3"}]}], ")"}], " ", 
       ")"}], "/", 
      RowBox[{"(", "\[Rho]0", ")"}]}], 
     RowBox[{"densitydist", "[", 
      RowBox[{"vx", ",", "vy", ",", "vz"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"vx", ",", 
      RowBox[{"-", "Infinity"}], ",", " ", "Infinity"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"vy", ",", 
      RowBox[{"-", "Infinity"}], ",", " ", "Infinity"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"vz", ",", 
      RowBox[{"-", "Infinity"}], ",", " ", "Infinity"}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.918402999455554*^9, 3.91840301685639*^9}, {
   3.918403675288711*^9, 3.918403699953895*^9}, {3.918403733550286*^9, 
   3.918403755737692*^9}, 3.918403905914919*^9, {3.9184043197233477`*^9, 
   3.918404339629273*^9}, {3.9184049748999233`*^9, 3.918404978537655*^9}, {
   3.918467436434072*^9, 3.918467440009282*^9}, {3.918467537702252*^9, 
   3.9184675971837378`*^9}, {3.918467691077232*^9, 3.91846769155049*^9}, 
   3.918467738496133*^9},
 CellLabel->
  "In[1365]:=",ExpressionUUID->"a511f3aa-f9d3-442a-8947-93c6e67a798f"],

Cell[BoxData[
 FractionBox["3", "13"]], "Output",
 CellChangeTimes->{3.918404654012419*^9, 3.9184052776918507`*^9, 
  3.918405331160043*^9, 3.918467492303907*^9, 3.918467636391603*^9, 
  3.918468015849246*^9, 3.9184681869429417`*^9, 3.9184684061735983`*^9, 
  3.918474105008623*^9, 3.918483442967856*^9, 3.9184840898542337`*^9, 
  3.918484544918057*^9, 3.918615935120226*^9, 3.91861614725591*^9, 
  3.918616223822694*^9, 3.918616362843788*^9, 3.918616481093701*^9, 
  3.91861657913349*^9, 3.918616665211542*^9, 3.918619477632152*^9, 
  3.918621668806859*^9},
 CellLabel->
  "Out[1365]=",ExpressionUUID->"86d6cbba-c07e-4a4a-a0ba-5e850abe0b25"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Define generation of the text file ",
 Cell[BoxData[
  ButtonBox["\<\"Run Section\"\>",
   Appearance->Automatic,
   ButtonFunction:>(SelectionMove[
      EvaluationCell[], All, CellGroup]; FrontEndExecute[
      FrontEndToken["EvaluateCells"]]),
   Evaluator->Automatic,
   Method->"Preemptive"]], "Output",
  CellChangeTimes->{3.78223244855991*^9},ExpressionUUID->
  "22314972-f972-4f88-b561-8a84b0a17e86"]
}], "Section",
 CellChangeTimes->{{3.7632694779966516`*^9, 3.763269481816036*^9}, {
   3.780297895318678*^9, 3.7802978972996616`*^9}, 3.780299790583475*^9, {
   3.782231290819748*^9, 3.782231302758502*^9}, {3.789976001565669*^9, 
   3.789976002655592*^9}, {3.7899760337285547`*^9, 3.789976050003244*^9}, {
   3.79111105574878*^9, 3.791111072244892*^9}, {3.791199115237878*^9, 
   3.791199129058989*^9}, 3.82199818407884*^9, {3.828450605806928*^9, 
   3.8284506127609315`*^9}, {3.917839235717516*^9, 
   3.917839236155983*^9}},ExpressionUUID->"98f8be1c-b57f-4c80-9693-\
60a3ef05ced8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"generatefFile", "[", 
    RowBox[{"theory_", ",", "filename_"}], "]"}], " ", ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "file", ",", "sText", ",", " ", "IDXset", ",", "idx", ",", "NN", ",", 
       "a", ",", "l", ",", " ", "factor"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"FileExistsQ", "[", "filename", "]"}], ",", " ", 
        RowBox[{"DeleteFile", "[", "filename", "]"}]}], "\[IndentingNewLine]",
        "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"file", "=", 
       RowBox[{"File", "[", 
        RowBox[{"CreateFile", "[", "filename", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
      "sText", "=", 
       "\"\<// This code has been generated automatically using the \
Mathematica file C++CodeGenerator.nb\n// This file calculates moments from a \
distribution\n// Author: Anja Matena (anja.matena@rwth-aachen.de)\ntemplate \
<typename real, size_t order>\nvoid eval_rho( size_t n, size_t l, const real \
*coeffs, const config_t<real> &conf, real* moments )\n{ \n    const size_t k  \
 = l   / (conf.Nx * conf.Ny); \n    const size_t tmp = l   % (conf.Nx * \
conf.Ny);\n    const size_t j   = tmp / conf.Nx;\n    const size_t i   = tmp \
% conf.Nx;\n\n    const real x = conf.x_min + i*conf.dx;\n    const real y = \
conf.y_min + j*conf.dy;\n    const real z = conf.z_min + k*conf.dz;\n\n    \
const real du = (conf.u_max-conf.u_min) / conf.Nu; \n    const real dv = \
(conf.v_max-conf.v_min) / conf.Nv;\n    const real dw = \
(conf.w_max-conf.w_min) / conf.Nw;\n\n    const real u_min = conf.u_min + \
0.5*du;\n    const real v_min = conf.v_min + 0.5*dv;\n    const real w_min = \
conf.w_min + 0.5*dw;\n\t\n    real rho = 0;\n    real j_x = 0;\n    real j_y \
= 0;\n    real j_z = 0;\n    real std_dev = 0;\n\n    for ( size_t kk = 0; kk \
< conf.Nw; ++kk )\n    for ( size_t jj = 0; jj < conf.Nv; ++jj )\n    for ( \
size_t ii = 0; ii < conf.Nu; ++ii )\n    {\n        real u = u_min + ii*du;\n \
       real v = v_min + jj*dv;\n        real w = w_min + kk*dw;\n        real \
f = eval_f<real,order>( n, x, y, z, u, v, w, coeffs, conf );\n        \n      \
  rho += f;\n        j_x += f*u;\n        j_y += f*v;\n        j_z += f*w;\n  \
  }\n\n    // Calculate vmean\n    j_x /= rho;\n    j_y /= rho;\n    j_z /= \
rho;\n\n    // Calculate standard deviation\n    for ( size_t kk = 0; kk < \
conf.Nw; ++kk )\n    for ( size_t jj = 0; jj < conf.Nv; ++jj )\n    for ( \
size_t ii = 0; ii < conf.Nu; ++ii )\n    {\n        real u = u_min + ii * du;\
\n        real v = v_min + jj * dv;\n        real w = w_min + kk * dw;\n      \
  real f = eval_f<real,order>( n, x, y, z, u, v, w, coeffs, conf );\n\t\t\n   \
     // vmean = 0\n        real unew = u - j_x;\n        real vnew = v - j_y;\
\n        real wnew = w - j_z;\n        \n        std_dev += f * (pow(u_new, \
2) + pow(v_new, 2) + pow(w_new, 2));\n    }\n\n    std_dev = sqrt(std_dev / \
rho); // Standard deviation\n\n    // Calculate moments\n    for ( size_t kk \
= 0; kk < conf.Nw; ++kk )\n    for ( size_t jj = 0; jj < conf.Nv; ++jj )\n    \
for ( size_t ii = 0; ii < conf.Nu; ++ii )\n    {\n        u = u_min + ii*du;\n\
        v = v_min + jj*dv;\n        w = w_min + kk*dw;\n        f = \
eval_f<real,order>( n, x, y, z, u, v, w, coeffs, conf );\n\n\t\t\n        // \
std_dev = 1\n        unew (u - j_x)/std_dev;\n        vnew = (v - \
j_y)/std_dev;\n        wnew = (w - j_z)/std_dev;\n     \n\>\""}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"IDXset", "=", 
       RowBox[{"generateIDXset", "[", "theory", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"NN", ",", "a", ",", "l"}], "}"}], "=", 
          RowBox[{"IDXset", "[", 
           RowBox[{"[", "idx", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"factor", " ", "=", " ", 
          RowBox[{"ToString", "[", 
           RowBox[{"CForm", "[", 
            RowBox[{"\[Psi]ProjA", "[", 
             RowBox[{
             "unew", ",", "vnew", ",", "wnew", ",", "NN", ",", "l", ",", 
              "a"}], "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"factor", "==", "\"\<0\>\""}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"sText", "=", 
             RowBox[{"sText", "<>", " ", "\"\<\\tmoments[\>\"", "<>", 
              RowBox[{"ToString", "[", 
               RowBox[{"idx", "-", "1"}], "]"}], "<>", "\"\<] = 0; \>\"", 
              "<>", "\"\<\\n\>\""}]}], ";"}], "\[IndentingNewLine]", ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"sText", "=", 
             RowBox[{"sText", "<>", "\"\<\\tmoments[\>\"", "<>", 
              RowBox[{"ToString", "[", 
               RowBox[{"idx", "-", "1"}], "]"}], "<>", "\"\<] += f* \>\"", "<>",
               " ", "factor", "<>", "\"\<; \\n\>\""}]}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"idx", ",", 
          RowBox[{"Length", "[", "IDXset", "]"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"sText", " ", "=", " ", 
       RowBox[{
       "sText", " ", "<>", " ", 
        "\"\<   }\n    rho = 1 - du*dv*dw*rho;\n    moments /= rho; \n\
}\>\""}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"StringTrim", "[", "sText", "]"}], " ", 
      RowBox[{"(*", 
       RowBox[{"<>", " ", "\"\<\\n\>\""}], "*)"}], ";", "\[IndentingNewLine]", 
      RowBox[{"WriteLine", "[", 
       RowBox[{"file", ",", "sText"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Close", "[", "file", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "sText"}]}], "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"FilePrint", "[", "file", "]"}], ";"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"DeleteFile", "[", "file", "]"}], ";"}], "*)"}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.791192448966908*^9, 3.791192462956981*^9}, {
   3.7911924986761436`*^9, 3.79119260068135*^9}, {3.791192642227992*^9, 
   3.791192689341468*^9}, {3.7911927419820685`*^9, 3.791192774138753*^9}, {
   3.791192840927031*^9, 3.791193060687172*^9}, {3.7911931049168386`*^9, 
   3.791193250588442*^9}, 3.791193391401177*^9, {3.791193439896398*^9, 
   3.791193442654009*^9}, {3.791194788681511*^9, 3.791194801577097*^9}, {
   3.791194863998418*^9, 3.791194868443527*^9}, 3.791194912709062*^9, {
   3.791197154690524*^9, 3.791197159162741*^9}, 3.791198033964608*^9, {
   3.794582628621258*^9, 3.7945826338674088`*^9}, {3.794582785633556*^9, 
   3.794582797445341*^9}, {3.794582919759623*^9, 3.794582922232578*^9}, {
   3.806408399500449*^9, 3.806408418036286*^9}, 3.9174398808435507`*^9, {
   3.917439921577314*^9, 3.917439954675104*^9}, {3.917440017311823*^9, 
   3.917440077526688*^9}, {3.917440235546813*^9, 3.917440313264955*^9}, {
   3.917440372856069*^9, 3.917440376910057*^9}, {3.917440584119235*^9, 
   3.917440626612869*^9}, 3.917787677633223*^9, {3.917787769840019*^9, 
   3.91778778045515*^9}, {3.917787817316965*^9, 3.917787852836774*^9}, {
   3.917787976898007*^9, 3.91778804851756*^9}, {3.9177881365424013`*^9, 
   3.917788138545237*^9}, {3.917788202453178*^9, 3.917788206382448*^9}, {
   3.917788734602107*^9, 3.917789037611165*^9}, 3.917789121228002*^9, {
   3.917789224743874*^9, 3.9177892379804897`*^9}, {3.917789298562742*^9, 
   3.917789303556643*^9}, {3.917789397922267*^9, 3.917789409983951*^9}, 
   3.917789476320113*^9, {3.917789782021994*^9, 3.917789790594236*^9}, {
   3.917789976770436*^9, 3.917790009544679*^9}, {3.917790054519006*^9, 
   3.917790123207018*^9}, 3.917790172252757*^9, {3.917790263193589*^9, 
   3.917790265581255*^9}, {3.917790487636587*^9, 3.917790506971568*^9}, {
   3.917790578494803*^9, 3.917790587185258*^9}, {3.917790671287607*^9, 
   3.917790672544329*^9}, {3.917790792466785*^9, 3.917790800069042*^9}, 
   3.917790862552737*^9, 3.917791021114466*^9, {3.917791124096366*^9, 
   3.917791158532639*^9}, {3.917791437682706*^9, 3.917791442707519*^9}, {
   3.917792089140418*^9, 3.917792130895216*^9}, {3.917792344670163*^9, 
   3.917792358366117*^9}, {3.917792740347372*^9, 3.917792761972642*^9}, 
   3.917793135006588*^9, {3.917793260026531*^9, 3.91779327988157*^9}, {
   3.917793866048065*^9, 3.917793866963535*^9}, {3.917794117398596*^9, 
   3.91779414268486*^9}, {3.917794204075987*^9, 3.917794207459158*^9}, {
   3.917794400440442*^9, 3.917794403005943*^9}, {3.917840209665481*^9, 
   3.917840213790935*^9}, {3.917844587612371*^9, 3.917844616618098*^9}, {
   3.917846592280593*^9, 3.9178465943425007`*^9}, {3.9178466291369133`*^9, 
   3.917846629629677*^9}, {3.917849857728828*^9, 3.917849858680773*^9}, {
   3.917850945313181*^9, 3.9178509459383707`*^9}, {3.917851089815529*^9, 
   3.9178512872768106`*^9}, {3.917851356260889*^9, 3.91785135772117*^9}, {
   3.917851396900613*^9, 3.9178514558070707`*^9}, 3.91785148629325*^9, {
   3.9178516922530737`*^9, 3.9178517096531277`*^9}, {3.917851752089017*^9, 
   3.917851764905305*^9}, {3.917851918667541*^9, 3.9178519629240837`*^9}, {
   3.91785200855268*^9, 3.917852020840556*^9}, {3.917852106698082*^9, 
   3.917852116780246*^9}, {3.917852162964283*^9, 3.917852169010874*^9}, {
   3.917854426697262*^9, 3.917854429135914*^9}, {3.9178545705861473`*^9, 
   3.917854578279447*^9}, {3.917854617037669*^9, 3.917854654743297*^9}, {
   3.917854841049152*^9, 3.917854850734231*^9}, {3.917855123141781*^9, 
   3.917855134094477*^9}, {3.917855515176857*^9, 3.917855530832995*^9}, {
   3.91786533537658*^9, 3.917865337680396*^9}, {3.917866656325759*^9, 
   3.917866661942741*^9}, {3.917944252145107*^9, 3.917944256861693*^9}, {
   3.917944319164004*^9, 3.917944343656116*^9}, {3.9179448765901957`*^9, 
   3.917944902325469*^9}, {3.917944948338985*^9, 3.917944987429882*^9}, {
   3.9179450414041777`*^9, 3.917945042058052*^9}, {3.918023374847941*^9, 
   3.918023442678255*^9}, {3.918023496429813*^9, 3.91802363741243*^9}, {
   3.918023668681227*^9, 3.918023748965842*^9}, {3.918023795177704*^9, 
   3.918023994167886*^9}, {3.91803154940414*^9, 3.918031586924312*^9}, {
   3.9180316344647202`*^9, 3.918031681075735*^9}, {3.918031717934583*^9, 
   3.918031721507707*^9}, 3.918031904073271*^9, {3.918403791073398*^9, 
   3.918403805316058*^9}, {3.918404054688601*^9, 3.9184042984980717`*^9}, {
   3.9184054125600147`*^9, 3.9184054432252474`*^9}, {3.91840547518132*^9, 
   3.9184055175515633`*^9}, {3.918405588300518*^9, 3.918405721658044*^9}, {
   3.9184057982453403`*^9, 3.91840580062337*^9}, {3.918405849353299*^9, 
   3.918405931705719*^9}, {3.918483552959859*^9, 3.918483553731311*^9}},
 CellLabel->
  "In[1146]:=",ExpressionUUID->"9f46df57-afea-4594-86d2-7b70d901695c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Generate the text files ",
 Cell[BoxData[
  ButtonBox["\<\"Run Section\"\>",
   Appearance->Automatic,
   ButtonFunction:>(SelectionMove[
      EvaluationCell[], All, CellGroup]; FrontEndExecute[
      FrontEndToken["EvaluateCells"]]),
   Evaluator->Automatic,
   Method->"Preemptive"]], "Output",
  CellChangeTimes->{3.78223244855991*^9},ExpressionUUID->
  "9fa0bfb5-e659-4dba-b700-72c96bcaadff"]
}], "Section",
 CellChangeTimes->{{3.7632694779966516`*^9, 3.763269481816036*^9}, {
   3.780297895318678*^9, 3.7802978972996616`*^9}, 3.780299790583475*^9, {
   3.782231290819748*^9, 3.782231302758502*^9}, {3.789976001565669*^9, 
   3.789976002655592*^9}, {3.7899760337285547`*^9, 3.789976050003244*^9}, {
   3.79111105574878*^9, 3.791111072244892*^9}, {3.791199115237878*^9, 
   3.791199129058989*^9}, 3.82199818407884*^9, {3.917839246771407*^9, 
   3.917839247665805*^9}, 
   3.918404479564929*^9},ExpressionUUID->"30dcbd12-f50f-46d2-a30a-\
735f46e1b353"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NotebookDirectory", "[", "]"}]], "Input",
 CellChangeTimes->{{3.8284508427776756`*^9, 3.828450851415454*^9}},
 CellLabel->
  "In[1007]:=",ExpressionUUID->"8e2e207c-7f57-4463-a93c-65400ce810de"],

Cell[BoxData["\<\"/Users/amat/Documents/Uni/Semester5/ACoM/AndreaArbeit/\"\>"]\
, "Output",
 CellChangeTimes->{
  3.828450851967802*^9, 3.909053961342303*^9, 3.9173356491967897`*^9, 
   3.917338250690275*^9, 3.917440526867702*^9, 3.917789134464225*^9, 
   3.9177892043551207`*^9, 3.917789274295588*^9, {3.9177893635337353`*^9, 
   3.917789370535355*^9}, 3.917789484797291*^9, 3.917789554674542*^9, 
   3.917789639958621*^9, 3.917789825140148*^9, 3.917790198630512*^9, 
   3.917790290540023*^9, 3.917790631997138*^9, 3.917790700524733*^9, 
   3.9177908120841017`*^9, 3.9177908940728397`*^9, 3.917791036819038*^9, 
   3.917791191872211*^9, 3.917791506486655*^9, 3.917792158291038*^9, 
   3.917792394018024*^9, 3.91779279578316*^9, 3.917793141541107*^9, 
   3.91779329340873*^9, 3.917793456585762*^9, 3.91779362322665*^9, 
   3.91779370029571*^9, 3.91779389170036*^9, 3.91779398410791*^9, 
   3.91779416715562*^9, 3.917794266220598*^9, 3.917794449654314*^9, {
   3.917839097197855*^9, 3.917839114792818*^9}, 3.917839258641646*^9, 
   3.9178445811333303`*^9, 3.917852043186146*^9, 3.917852133681885*^9, 
   3.917852178530734*^9, 3.917854515208001*^9, 3.917854662654914*^9, 
   3.917854885425886*^9, 3.917855167262107*^9, 3.917855578945396*^9, 
   3.917866705037484*^9, {3.917945020696447*^9, 3.917945050467873*^9}, {
   3.9180239735803833`*^9, 3.918023998184709*^9}, 3.918031596514907*^9, 
   3.9180316904516783`*^9, 3.9180317294436293`*^9, 3.918031921928729*^9, 
   3.918405360151164*^9, {3.9184055384744987`*^9, 3.918405554561055*^9}, 
   3.918405731246469*^9, 3.918405816731002*^9, 3.91840594095138*^9},
 CellLabel->
  "Out[1007]=",ExpressionUUID->"adec40ff-9299-4640-b9e9-484383642945"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"distname", "=", "\"\<CalculateMoments\>\""}]], "Input",
 CellChangeTimes->{{3.9090536557525635`*^9, 3.909053679836567*^9}, {
  3.917004640217662*^9, 3.917004641723925*^9}, {3.917838560219998*^9, 
  3.91783856439988*^9}},
 CellLabel->
  "In[1008]:=",ExpressionUUID->"784352eb-3dca-4e57-838c-2c9676eb8e74"],

Cell[BoxData["\<\"CalculateMoments\"\>"], "Output",
 CellChangeTimes->{
  3.909053791291075*^9, 3.913814608165331*^9, 3.91501082026505*^9, 
   3.917004643759954*^9, 3.917005320233166*^9, 3.91733564920364*^9, 
   3.917338250714155*^9, 3.917440526872327*^9, 3.917789134469761*^9, 
   3.91778920435946*^9, 3.91778927430075*^9, {3.917789363538024*^9, 
   3.917789370540766*^9}, 3.9177894848020477`*^9, 3.91778955467887*^9, 
   3.917789639963105*^9, 3.917789825144955*^9, 3.917790198666599*^9, 
   3.917790290544629*^9, 3.917790632037201*^9, 3.917790700529321*^9, 
   3.9177908121208*^9, 3.917790894077608*^9, 3.9177910368536243`*^9, 
   3.917791191876679*^9, 3.9177915065815*^9, 3.917792158385597*^9, 
   3.917792394022376*^9, 3.9177927957908077`*^9, 3.917793141546079*^9, 
   3.91779329341357*^9, 3.917793456590994*^9, 3.917793623231479*^9, 
   3.917793700300315*^9, 3.917793891730955*^9, 3.917793984111607*^9, 
   3.917794167159576*^9, 3.91779426622452*^9, 3.917794449680912*^9, {
   3.917839097201681*^9, 3.917839114798761*^9}, 3.917839258645314*^9, 
   3.917844581137048*^9, 3.9178520432120953`*^9, 3.917852133685538*^9, 
   3.9178521785344353`*^9, 3.917854515235772*^9, 3.917854662658682*^9, 
   3.9178548854634523`*^9, 3.917855167274527*^9, 3.9178555789494047`*^9, 
   3.917866705068736*^9, {3.917945020725268*^9, 3.9179450504717712`*^9}, {
   3.918023973584751*^9, 3.9180239982156067`*^9}, 3.91803159651919*^9, 
   3.918031690455817*^9, 3.91803172947558*^9, 3.918031921932589*^9, 
   3.918405360200851*^9, {3.9184055385183983`*^9, 3.918405554601932*^9}, 
   3.918405731295382*^9, 3.918405816778029*^9, 3.9184059409980173`*^9},
 CellLabel->
  "Out[1008]=",ExpressionUUID->"54678ad1-2af3-4114-971a-c9d69cb859f3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"theory", "=", 
    RowBox[{"{", 
     RowBox[{"2", ",", "1", ",", "1", ",", "0", ",", "0"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"theory", " ", "=", " ", 
     RowBox[{"{", "10", "}"}]}], ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"generatefFile", "[", 
  RowBox[{"theory", ",", 
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], " ", "<>", "distname", "<>", 
    "\"\<_Full2\>\""}]}], " ", "]"}]}], "Input",
 CellChangeTimes->{{3.828450765821228*^9, 3.82845093884812*^9}, {
   3.8284525426750736`*^9, 3.828452546040963*^9}, {3.82845260673518*^9, 
   3.828452618408886*^9}, {3.82845272109331*^9, 3.8284527276213055`*^9}, {
   3.828454583009755*^9, 3.8284545848959703`*^9}, 3.828455105983458*^9, 
   3.832081080468549*^9, {3.909053685344385*^9, 3.909053692261134*^9}, 
   3.918031785433972*^9, 3.918031826774856*^9},
 CellLabel->
  "In[1009]:=",ExpressionUUID->"99fb9024-c3be-409e-80b5-aad10256776e"],

Cell[BoxData["\<\"// This code has been generated automatically with the \
Mathematica file C++CodeGenerator.nb\\n// This file calculates moments from a \
distribution\\n// Author: Anja Matena (anja.matena@rwth-aachen.de)\\ntemplate \
<typename real, size_t order>\\nvoid eval_rho( size_t n, size_t l, const real \
*coeffs, const config_t<real> &conf, real* moments )\\n{ \\n    const size_t \
k   = l   / (conf.Nx * conf.Ny); \\n    const size_t tmp = l   % (conf.Nx * \
conf.Ny);\\n    const size_t j   = tmp / conf.Nx;\\n    const size_t i   = \
tmp % conf.Nx;\\n\\n    const real x = conf.x_min + i*conf.dx;\\n    const \
real y = conf.y_min + j*conf.dy;\\n    const real z = conf.z_min + k*conf.dz;\
\\n\\n    const real du = (conf.u_max-conf.u_min) / conf.Nu; \\n    const \
real dv = (conf.v_max-conf.v_min) / conf.Nv;\\n    const real dw = \
(conf.w_max-conf.w_min) / conf.Nw;\\n\\n    const real u_min = conf.u_min + \
0.5*du;\\n    const real v_min = conf.v_min + 0.5*dv;\\n    const real w_min \
= conf.w_min + 0.5*dw;\\n\\t\\n    real rho = 0;\\n    real j_x = 0;\\n    \
real j_y = 0;\\n    real j_z = 0;\\n    real std_dev = 0;\\n\\n    for ( \
size_t kk = 0; kk < conf.Nw; ++kk )\\n    for ( size_t jj = 0; jj < conf.Nv; \
++jj )\\n    for ( size_t ii = 0; ii < conf.Nu; ++ii )\\n    {\\n        real \
u = u_min + ii*du;\\n        real v = v_min + jj*dv;\\n        real w = w_min \
+ kk*dw;\\n        real f = eval_f<real,order>( n, x, y, z, u, v, w, coeffs, \
conf );\\n        \\n        rho += f;\\n        j_x += f*u;\\n        j_y += \
f*v;\\n        j_z += f*w;\\n    }\\n\\n    // Calculate vmean\\n    j_x /= \
rho;\\n    j_y /= rho;\\n    j_z /= rho;\\n\\n    // Calculate standard \
deviation\\n    for ( size_t kk = 0; kk < conf.Nw; ++kk )\\n    for ( size_t \
jj = 0; jj < conf.Nv; ++jj )\\n    for ( size_t ii = 0; ii < conf.Nu; ++ii \
)\\n    {\\n        real u = u_min + ii * du;\\n        real v = v_min + jj * \
dv;\\n        real w = w_min + kk * dw;\\n        real f = \
eval_f<real,order>( n, x, y, z, u, v, w, coeffs, conf );\\n\\t\\t\\n        \
// vmean = 0\\n        real unew = u - j_x;\\n        real vnew = v - j_y;\\n \
       real wnew = w - j_z;\\n        \\n        std_dev += f * (pow(u_new, \
2) + pow(v_new, 2) + pow(w_new, 2));\\n    }\\n\\n    std_dev = sqrt(std_dev \
/ rho); // Standard deviation\\n\\n    // Calculate moments\\n    for ( \
size_t kk = 0; kk < conf.Nw; ++kk )\\n    for ( size_t jj = 0; jj < conf.Nv; \
++jj )\\n    for ( size_t ii = 0; ii < conf.Nu; ++ii )\\n    {\\n        u = \
u_min + ii*du;\\n        v = v_min + jj*dv;\\n        w = w_min + kk*dw;\\n   \
     f = eval_f<real,order>( n, x, y, z, u, v, w, coeffs, conf );\\n\\n\\t\\t\
\\n        // std_dev = 1\\n        unew (u - j_x)/std_dev;\\n        vnew = \
(v - j_y)/std_dev;\\n        wnew = (w - j_z)/std_dev;\\n     \
\\n\\tmoments[0] += f* 1; \\n\\tmoments[1] += f* 1.5 + (-Power(unew,2) - \
Power(vnew,2) - Power(wnew,2))/2.; \\n\\tmoments[2] += f* 3.75 - \
(5*(Power(unew,2) + Power(vnew,2) + Power(wnew,2)))/2. + Power(Power(unew,2) \
+ Power(vnew,2) + Power(wnew,2),2)/4.; \\n\\tmoments[3] += f* vnew; \
\\n\\tmoments[4] += f* wnew; \\n\\tmoments[5] += f* -unew; \\n\\tmoments[6] \
+= f* vnew*(2.5 + (-Power(unew,2) - Power(vnew,2) - Power(wnew,2))/2.); \
\\n\\tmoments[7] += f* wnew*(2.5 + (-Power(unew,2) - Power(vnew,2) - \
Power(wnew,2))/2.); \\n\\tmoments[8] += f* -(unew*(2.5 + (-Power(unew,2) - \
Power(vnew,2) - Power(wnew,2))/2.)); \\n\\tmoments[9] += f* unew*vnew; \
\\n\\tmoments[10] += f* vnew*wnew; \\n\\tmoments[11] += f* -Power(unew,2) - \
Power(vnew,2) + 2*Power(wnew,2); \\n\\tmoments[12] += f* -(unew*wnew); \
\\n\\tmoments[13] += f* Power(unew,2) - Power(vnew,2); \\n\\tmoments[14] += \
f* unew*vnew*(3.5 + (-Power(unew,2) - Power(vnew,2) - Power(wnew,2))/2.); \\n\
\\tmoments[15] += f* vnew*wnew*(3.5 + (-Power(unew,2) - Power(vnew,2) - \
Power(wnew,2))/2.); \\n\\tmoments[16] += f* (-Power(unew,2) - Power(vnew,2) + \
2*Power(wnew,2))*(3.5 + (-Power(unew,2) - Power(vnew,2) - Power(wnew,2))/2.); \
\\n\\tmoments[17] += f* -(unew*wnew*(3.5 + (-Power(unew,2) - Power(vnew,2) - \
Power(wnew,2))/2.)); \\n\\tmoments[18] += f* (Power(unew,2) - \
Power(vnew,2))*(3.5 + (-Power(unew,2) - Power(vnew,2) - Power(wnew,2))/2.); \
\\n\\tmoments[19] += f* 3*Power(unew,2)*vnew - Power(vnew,3); \
\\n\\tmoments[20] += f* unew*vnew*wnew; \\n\\tmoments[21] += f* \
-(Power(unew,2)*vnew) - Power(vnew,3) + 4*vnew*Power(wnew,2); \
\\n\\tmoments[22] += f* -3*Power(unew,2)*wnew - 3*Power(vnew,2)*wnew + \
2*Power(wnew,3); \\n\\tmoments[23] += f* Power(unew,3) + unew*Power(vnew,2) - \
4*unew*Power(wnew,2); \\n\\tmoments[24] += f* Power(unew,2)*wnew - \
Power(vnew,2)*wnew; \\n\\tmoments[25] += f* -Power(unew,3) + \
3*unew*Power(vnew,2); \\n\\tmoments[26] += f* Power(unew,3)*vnew - \
unew*Power(vnew,3); \\n\\tmoments[27] += f* 3*Power(unew,2)*vnew*wnew - \
Power(vnew,3)*wnew; \\n\\tmoments[28] += f* -(Power(unew,3)*vnew) - \
unew*Power(vnew,3) + 6*unew*vnew*Power(wnew,2); \\n\\tmoments[29] += f* \
-3*Power(unew,2)*vnew*wnew - 3*Power(vnew,3)*wnew + 4*vnew*Power(wnew,3); \\n\
\\tmoments[30] += f* 3*Power(unew,4) + 6*Power(unew,2)*Power(vnew,2) + \
3*Power(vnew,4) - 24*Power(unew,2)*Power(wnew,2) - \
24*Power(vnew,2)*Power(wnew,2) + 8*Power(wnew,4); \\n\\tmoments[31] += f* \
3*Power(unew,3)*wnew + 3*unew*Power(vnew,2)*wnew - 4*unew*Power(wnew,3); \
\\n\\tmoments[32] += f* -Power(unew,4) + Power(vnew,4) + \
6*Power(unew,2)*Power(wnew,2) - 6*Power(vnew,2)*Power(wnew,2); \
\\n\\tmoments[33] += f* -(Power(unew,3)*wnew) + 3*unew*Power(vnew,2)*wnew; \
\\n\\tmoments[34] += f* Power(unew,4) - 6*Power(unew,2)*Power(vnew,2) + \
Power(vnew,4); \\n   }\\n    rho = 1 - du*dv*dw*rho;\\n    moments /= rho; \
\\n}\"\>"], "Output",
 CellChangeTimes->{{3.918023973721718*^9, 3.918023998270184*^9}, 
   3.9180315965616627`*^9, 3.9180316904905977`*^9, 3.918031729511199*^9, 
   3.918031921966217*^9, 3.918405360213656*^9, {3.918405538553257*^9, 
   3.918405554635994*^9}, 3.91840573130552*^9, 3.91840581678773*^9, 
   3.918405941010207*^9},
 CellLabel->
  "Out[1010]=",ExpressionUUID->"e09baf8b-82ae-489f-8d71-ab04f9fed500"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["\"\<// This code has been generated automatically .....\\\\n// \
This file calculates moments from a distribution\\\\n// Author: Anja Matena \
(anja.matena@rwth-aachen.de)\\\\ntemplate <typename real, size_t \
order>\\\\nvoid eval_rho( size_t n, size_t l, const real *coeffs, const \
config_t<real> &conf, real* moments )\\\\n{ \\\\n    const size_t k   = l   / \
(conf.Nx * conf.Ny); \\\\n    const size_t tmp = l   % (conf.Nx * conf.Ny);\\\
\\n    const size_t j   = tmp / conf.Nx;\\\\n    const size_t i   = tmp % \
conf.Nx;\\\\n\\\\n    const real x = conf.x_min + i*conf.dx;\\\\n    const \
real y = conf.y_min + j*conf.dy;\\\\n    const real z = conf.z_min + \
k*conf.dz;\\\\n\\\\n    const real du = (conf.u_max-conf.u_min) / conf.Nu; \\\
\\n    const real dv = (conf.v_max-conf.v_min) / conf.Nv;\\\\n    const real \
dw = (conf.w_max-conf.w_min) / conf.Nw;\\\\n\\\\n    const real u_min = \
conf.u_min + 0.5*du;\\\\n    const real v_min = conf.v_min + 0.5*dv;\\\\n    \
const real w_min = conf.w_min + 0.5*dw;\\\\n\\\\t\\\\n\\\\treal rho = 0;\\\\n \
   real j_x = 0;\\\\n    real j_y = 0;\\\\n    real j_z = 0;\\\\n    real \
std_dev = 0;\\\\n\\\\n    for ( size_t kk = 0; kk < conf.Nw; ++kk )\\\\n    \
for ( size_t jj = 0; jj < conf.Nv; ++jj )\\\\n    for ( size_t ii = 0; ii < \
conf.Nu; ++ii )\\\\n    {\\\\n        real u = u_min + ii*du;\\\\n        \
real v = v_min + jj*dv;\\\\n        real w = w_min + kk*dw;\\\\n        real \
f = eval_f<real,order>( n, x, y, z, u, v, w, coeffs, conf );\\\\n        \
\\\\n        rho += f;\\\\n        j_x += f*u;\\\\n        j_y += f*v;\\\\n   \
     j_z += f*w;\\\\n        \\\\n\\\\t}\\\\n\\\\trho = 1 - \
du*dv*dw*rho;\\\\n    // ...\\\\n\\\\n\\\\t// Calculate vmean\\\\n    j_x /= \
rho;\\\\n    j_y /= rho;\\\\n    j_z /= rho;\\\\n\\\\n    // vmean=0\\\\n    \
u_min -= j_x;\\\\n    v_min -= j_y;\\\\n    w_min -= j_z;\\\\n\\\\n\\\\t// \
Calculate standard deviation\\\\n\\\\tfor ( size_t kk = 0; kk < conf.Nw; ++kk \
)\\\\n    for ( size_t jj = 0; jj < conf.Nv; ++jj )\\\\n    for ( size_t ii = \
0; ii < conf.Nu; ++ii )\\\\n    {\\\\n        real u = u_min + ii * du;\\\\n  \
      real v = v_min + jj * dv;\\\\n        real w = w_min + kk * dw;\\\\n    \
    real f = eval_f<real,order>( n, x, y, z, u, v, w, coeffs, conf );\\\\n    \
    \\\\n        std_dev += pow(f, 2);\\\\n\\\\t}\\\\n\\\\tstd_dev = \
sqrt(std_dev / rho); // Standard deviation\\\\n\\\\n\\\\t// std_dev=1\\\\n    \
u /= std_dev;\\\\n    v /= std_dev;\\\\n    w /= std_dev;\\\\n\\\\n\\\\t// \
Calculate new rho, j_x, j_y and j_z\\\\n\\\\treal rho = 0;\\\\n    for ( \
size_t kk = 0; kk < conf.Nw * std_dev; ++kk )\\\\n    for ( size_t jj = 0; jj \
< conf.Nv * std_dev; ++jj )\\\\n    for ( size_t ii = 0; ii < conf.Nu * \
std_dev; ++ii )\\\\n    {\\\\n        real u = u_min + ii*du;\\\\n        \
real v = v_min + jj*dv;\\\\n        real w = w_min + kk*dw;\\\\n        real \
f = eval_f<real,order>( n, x, y, z, u, v, w, coeffs, conf );\\\\n        \
\\\\n        rho += f;\\\\n        j_x += f*u;\\\\n        j_y += f*v;\\\\n   \
     j_z += f*w;\\\\n        // ...\\\\n\\\\t \\\\t moments[0] += f* 1; \\\\n\
\\\\t \\\\t moments[1] += f* 1.5 + (-Power(u,2) - Power(v,2) - \
Power(w,2))/2.; \\\\n\\\\t \\\\t moments[2] += f* 3.75 - (5*(Power(u,2) + \
Power(v,2) + Power(w,2)))/2. + Power(Power(u,2) + Power(v,2) + \
Power(w,2),2)/4.; \\\\n\\\\t \\\\t moments[3] += f* v; \\\\n\\\\t \\\\t \
moments[4] += f* w; \\\\n\\\\t \\\\t moments[5] += f* -u; \\\\n\\\\t \\\\t \
moments[6] += f* v*(2.5 + (-Power(u,2) - Power(v,2) - Power(w,2))/2.); \
\\\\n\\\\t \\\\t moments[7] += f* w*(2.5 + (-Power(u,2) - Power(v,2) - \
Power(w,2))/2.); \\\\n\\\\t \\\\t moments[8] += f* -(u*(2.5 + (-Power(u,2) - \
Power(v,2) - Power(w,2))/2.)); \\\\n\\\\t \\\\t moments[9] += f* u*v; \\\\n\\\
\\t \\\\t moments[10] += f* v*w; \\\\n\\\\t \\\\t moments[11] += f* \
-Power(u,2) - Power(v,2) + 2*Power(w,2); \\\\n\\\\t \\\\t moments[12] += f* \
-(u*w); \\\\n\\\\t \\\\t moments[13] += f* Power(u,2) - Power(v,2); \
\\\\n\\\\t \\\\t moments[14] += f* u*v*(3.5 + (-Power(u,2) - Power(v,2) - \
Power(w,2))/2.); \\\\n\\\\t \\\\t moments[15] += f* v*w*(3.5 + (-Power(u,2) - \
Power(v,2) - Power(w,2))/2.); \\\\n\\\\t \\\\t moments[16] += f* (-Power(u,2) \
- Power(v,2) + 2*Power(w,2))*(3.5 + (-Power(u,2) - Power(v,2) - \
Power(w,2))/2.); \\\\n\\\\t \\\\t moments[17] += f* -(u*w*(3.5 + (-Power(u,2) \
- Power(v,2) - Power(w,2))/2.)); \\\\n\\\\t \\\\t moments[18] += f* \
(Power(u,2) - Power(v,2))*(3.5 + (-Power(u,2) - Power(v,2) - Power(w,2))/2.); \
\\\\n\\\\t \\\\t moments[19] += f* 3*Power(u,2)*v - Power(v,3); \\\\n\\\\t \\\
\\t moments[20] += f* u*v*w; \\\\n\\\\t \\\\t moments[21] += f* \
-(Power(u,2)*v) - Power(v,3) + 4*v*Power(w,2); \\\\n\\\\t \\\\t moments[22] \
+= f* -3*Power(u,2)*w - 3*Power(v,2)*w + 2*Power(w,3); \\\\n\\\\t \\\\t \
moments[23] += f* Power(u,3) + u*Power(v,2) - 4*u*Power(w,2); \\\\n\\\\t \
\\\\t moments[24] += f* Power(u,2)*w - Power(v,2)*w; \\\\n\\\\t \\\\t \
moments[25] += f* -Power(u,3) + 3*u*Power(v,2); \\\\n\\\\t \\\\t moments[26] \
+= f* Power(u,3)*v - u*Power(v,3); \\\\n\\\\t \\\\t moments[27] += f* \
3*Power(u,2)*v*w - Power(v,3)*w; \\\\n\\\\t \\\\t moments[28] += f* \
-(Power(u,3)*v) - u*Power(v,3) + 6*u*v*Power(w,2); \\\\n\\\\t \\\\t \
moments[29] += f* -3*Power(u,2)*v*w - 3*Power(v,3)*w + 4*v*Power(w,3); \
\\\\n\\\\t \\\\t moments[30] += f* 3*Power(u,4) + 6*Power(u,2)*Power(v,2) + \
3*Power(v,4) - 24*Power(u,2)*Power(w,2) - 24*Power(v,2)*Power(w,2) + \
8*Power(w,4); \\\\n\\\\t \\\\t moments[31] += f* 3*Power(u,3)*w + \
3*u*Power(v,2)*w - 4*u*Power(w,3); \\\\n\\\\t \\\\t moments[32] += f* \
-Power(u,4) + Power(v,4) + 6*Power(u,2)*Power(w,2) - 6*Power(v,2)*Power(w,2); \
\\\\n\\\\t \\\\t moments[33] += f* -(Power(u,3)*w) + 3*u*Power(v,2)*w; \
\\\\n\\\\t \\\\t moments[34] += f* Power(u,4) - 6*Power(u,2)*Power(v,2) + \
Power(v,4); \\\\n   }\\\\n\\\\trho = 1 - du*dv*dw*rho;\\\\n\\\\n    // fill \
moments vector\\\\n}\>\""], "Input",
 CellChangeTimes->{{3.918023370211582*^9, 3.918023370217276*^9}},
 CellLabel->
  "In[1011]:=",ExpressionUUID->"db2c46d4-47df-4597-ba05-fc21d15fbcea"],

Cell[BoxData["\<\"// This code has been generated automatically .....\\\\n// \
This file calculates moments from a distribution\\\\n// Author: Anja Matena \
(anja.matena@rwth-aachen.de)\\\\ntemplate <typename real, size_t \
order>\\\\nvoid eval_rho( size_t n, size_t l, const real *coeffs, const \
config_t<real> &conf, real* moments )\\\\n{ \\\\n    const size_t k   = l   / \
(conf.Nx * conf.Ny); \\\\n    const size_t tmp = l   % (conf.Nx * conf.Ny);\\\
\\n    const size_t j   = tmp / conf.Nx;\\\\n    const size_t i   = tmp % \
conf.Nx;\\\\n\\\\n    const real x = conf.x_min + i*conf.dx;\\\\n    const \
real y = conf.y_min + j*conf.dy;\\\\n    const real z = conf.z_min + \
k*conf.dz;\\\\n\\\\n    const real du = (conf.u_max-conf.u_min) / conf.Nu; \\\
\\n    const real dv = (conf.v_max-conf.v_min) / conf.Nv;\\\\n    const real \
dw = (conf.w_max-conf.w_min) / conf.Nw;\\\\n\\\\n    const real u_min = \
conf.u_min + 0.5*du;\\\\n    const real v_min = conf.v_min + 0.5*dv;\\\\n    \
const real w_min = conf.w_min + 0.5*dw;\\\\n\\\\t\\\\n\\\\treal rho = 0;\\\\n \
   real j_x = 0;\\\\n    real j_y = 0;\\\\n    real j_z = 0;\\\\n    real \
std_dev = 0;\\\\n\\\\n    for ( size_t kk = 0; kk < conf.Nw; ++kk )\\\\n    \
for ( size_t jj = 0; jj < conf.Nv; ++jj )\\\\n    for ( size_t ii = 0; ii < \
conf.Nu; ++ii )\\\\n    {\\\\n        real u = u_min + ii*du;\\\\n        \
real v = v_min + jj*dv;\\\\n        real w = w_min + kk*dw;\\\\n        real \
f = eval_f<real,order>( n, x, y, z, u, v, w, coeffs, conf );\\\\n        \
\\\\n        rho += f;\\\\n        j_x += f*u;\\\\n        j_y += f*v;\\\\n   \
     j_z += f*w;\\\\n        \\\\n\\\\t}\\\\n\\\\trho = 1 - \
du*dv*dw*rho;\\\\n    // ...\\\\n\\\\n\\\\t// Calculate vmean\\\\n    j_x /= \
rho;\\\\n    j_y /= rho;\\\\n    j_z /= rho;\\\\n\\\\n    // vmean=0\\\\n    \
u_min -= j_x;\\\\n    v_min -= j_y;\\\\n    w_min -= j_z;\\\\n\\\\n\\\\t// \
Calculate standard deviation\\\\n\\\\tfor ( size_t kk = 0; kk < conf.Nw; ++kk \
)\\\\n    for ( size_t jj = 0; jj < conf.Nv; ++jj )\\\\n    for ( size_t ii = \
0; ii < conf.Nu; ++ii )\\\\n    {\\\\n        real u = u_min + ii * du;\\\\n  \
      real v = v_min + jj * dv;\\\\n        real w = w_min + kk * dw;\\\\n    \
    real f = eval_f<real,order>( n, x, y, z, u, v, w, coeffs, conf );\\\\n    \
    \\\\n        std_dev += pow(f, 2);\\\\n\\\\t}\\\\n\\\\tstd_dev = \
sqrt(std_dev / rho); // Standard deviation\\\\n\\\\n\\\\t// std_dev=1\\\\n    \
u /= std_dev;\\\\n    v /= std_dev;\\\\n    w /= std_dev;\\\\n\\\\n\\\\t// \
Calculate new rho, j_x, j_y and j_z\\\\n\\\\treal rho = 0;\\\\n    for ( \
size_t kk = 0; kk < conf.Nw * std_dev; ++kk )\\\\n    for ( size_t jj = 0; jj \
< conf.Nv * std_dev; ++jj )\\\\n    for ( size_t ii = 0; ii < conf.Nu * \
std_dev; ++ii )\\\\n    {\\\\n        real u = u_min + ii*du;\\\\n        \
real v = v_min + jj*dv;\\\\n        real w = w_min + kk*dw;\\\\n        real \
f = eval_f<real,order>( n, x, y, z, u, v, w, coeffs, conf );\\\\n        \
\\\\n        rho += f;\\\\n        j_x += f*u;\\\\n        j_y += f*v;\\\\n   \
     j_z += f*w;\\\\n        // ...\\\\n\\\\t \\\\t moments[0] += f* 1; \\\\n\
\\\\t \\\\t moments[1] += f* 1.5 + (-Power(u,2) - Power(v,2) - \
Power(w,2))/2.; \\\\n\\\\t \\\\t moments[2] += f* 3.75 - (5*(Power(u,2) + \
Power(v,2) + Power(w,2)))/2. + Power(Power(u,2) + Power(v,2) + \
Power(w,2),2)/4.; \\\\n\\\\t \\\\t moments[3] += f* v; \\\\n\\\\t \\\\t \
moments[4] += f* w; \\\\n\\\\t \\\\t moments[5] += f* -u; \\\\n\\\\t \\\\t \
moments[6] += f* v*(2.5 + (-Power(u,2) - Power(v,2) - Power(w,2))/2.); \
\\\\n\\\\t \\\\t moments[7] += f* w*(2.5 + (-Power(u,2) - Power(v,2) - \
Power(w,2))/2.); \\\\n\\\\t \\\\t moments[8] += f* -(u*(2.5 + (-Power(u,2) - \
Power(v,2) - Power(w,2))/2.)); \\\\n\\\\t \\\\t moments[9] += f* u*v; \\\\n\\\
\\t \\\\t moments[10] += f* v*w; \\\\n\\\\t \\\\t moments[11] += f* \
-Power(u,2) - Power(v,2) + 2*Power(w,2); \\\\n\\\\t \\\\t moments[12] += f* \
-(u*w); \\\\n\\\\t \\\\t moments[13] += f* Power(u,2) - Power(v,2); \
\\\\n\\\\t \\\\t moments[14] += f* u*v*(3.5 + (-Power(u,2) - Power(v,2) - \
Power(w,2))/2.); \\\\n\\\\t \\\\t moments[15] += f* v*w*(3.5 + (-Power(u,2) - \
Power(v,2) - Power(w,2))/2.); \\\\n\\\\t \\\\t moments[16] += f* (-Power(u,2) \
- Power(v,2) + 2*Power(w,2))*(3.5 + (-Power(u,2) - Power(v,2) - \
Power(w,2))/2.); \\\\n\\\\t \\\\t moments[17] += f* -(u*w*(3.5 + (-Power(u,2) \
- Power(v,2) - Power(w,2))/2.)); \\\\n\\\\t \\\\t moments[18] += f* \
(Power(u,2) - Power(v,2))*(3.5 + (-Power(u,2) - Power(v,2) - Power(w,2))/2.); \
\\\\n\\\\t \\\\t moments[19] += f* 3*Power(u,2)*v - Power(v,3); \\\\n\\\\t \\\
\\t moments[20] += f* u*v*w; \\\\n\\\\t \\\\t moments[21] += f* \
-(Power(u,2)*v) - Power(v,3) + 4*v*Power(w,2); \\\\n\\\\t \\\\t moments[22] \
+= f* -3*Power(u,2)*w - 3*Power(v,2)*w + 2*Power(w,3); \\\\n\\\\t \\\\t \
moments[23] += f* Power(u,3) + u*Power(v,2) - 4*u*Power(w,2); \\\\n\\\\t \
\\\\t moments[24] += f* Power(u,2)*w - Power(v,2)*w; \\\\n\\\\t \\\\t \
moments[25] += f* -Power(u,3) + 3*u*Power(v,2); \\\\n\\\\t \\\\t moments[26] \
+= f* Power(u,3)*v - u*Power(v,3); \\\\n\\\\t \\\\t moments[27] += f* \
3*Power(u,2)*v*w - Power(v,3)*w; \\\\n\\\\t \\\\t moments[28] += f* \
-(Power(u,3)*v) - u*Power(v,3) + 6*u*v*Power(w,2); \\\\n\\\\t \\\\t \
moments[29] += f* -3*Power(u,2)*v*w - 3*Power(v,3)*w + 4*v*Power(w,3); \
\\\\n\\\\t \\\\t moments[30] += f* 3*Power(u,4) + 6*Power(u,2)*Power(v,2) + \
3*Power(v,4) - 24*Power(u,2)*Power(w,2) - 24*Power(v,2)*Power(w,2) + \
8*Power(w,4); \\\\n\\\\t \\\\t moments[31] += f* 3*Power(u,3)*w + \
3*u*Power(v,2)*w - 4*u*Power(w,3); \\\\n\\\\t \\\\t moments[32] += f* \
-Power(u,4) + Power(v,4) + 6*Power(u,2)*Power(w,2) - 6*Power(v,2)*Power(w,2); \
\\\\n\\\\t \\\\t moments[33] += f* -(Power(u,3)*w) + 3*u*Power(v,2)*w; \
\\\\n\\\\t \\\\t moments[34] += f* Power(u,4) - 6*Power(u,2)*Power(v,2) + \
Power(v,4); \\\\n   }\\\\n\\\\trho = 1 - du*dv*dw*rho;\\\\n\\\\n    // fill \
moments vector\\\\n}\"\>"], "Output",
 CellChangeTimes->{{3.918023973728404*^9, 3.918023998280164*^9}, 
   3.918031596570101*^9, 3.918031690499172*^9, 3.918031729519959*^9, 
   3.918031921974382*^9, 3.91840536025893*^9, {3.91840553856326*^9, 
   3.918405554645303*^9}, 3.918405731341494*^9, 3.9184058168225718`*^9, 
   3.918405941048189*^9},
 CellLabel->
  "Out[1011]=",ExpressionUUID->"d955d848-94b1-4fd7-a14d-44dfc8e5837d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["\"\<// This file calculates moments from a distribution\\\\n// \
Author: Anja Matena (anja.matena@rwth-aachen.de)\\\\ntemplate <typename real, \
size_t order>\\\\nvoid eval_rho( size_t n, size_t l, const real *coeffs, \
const config_t<real> &conf, real* moments )\\\\n{ \\\\n    const size_t k   = \
l   / (conf.Nx * conf.Ny); \\\\n    const size_t tmp = l   % (conf.Nx * \
conf.Ny);\\\\n    const size_t j   = tmp / conf.Nx;\\\\n    const size_t i   \
= tmp % conf.Nx;\\\\n\\\\n    const real x = conf.x_min + i*conf.dx;\\\\n    \
const real y = conf.y_min + j*conf.dy;\\\\n    const real z = conf.z_min + \
k*conf.dz;\\\\n\\\\n    const real du = (conf.u_max-conf.u_min) / conf.Nu; \\\
\\n    const real dv = (conf.v_max-conf.v_min) / conf.Nv;\\\\n    const real \
dw = (conf.w_max-conf.w_min) / conf.Nw;\\\\n\\\\n    const real u_min = \
conf.u_min + 0.5*du;\\\\n    const real v_min = conf.v_min + 0.5*dv;\\\\n    \
const real w_min = conf.w_min + 0.5*dw;\\\\n\\\\n\\\\n    real rho = 0;\\\\n  \
  for ( size_t kk = 0; kk < conf.Nw; ++kk )\\\\n    for ( size_t jj = 0; jj < \
conf.Nv; ++jj )\\\\n    for ( size_t ii = 0; ii < conf.Nu; ++ii )\\\\n    {\\\
\\n        real u = u_min + ii*du;\\\\n        real v = v_min + jj*dv;\\\\n   \
     real w = w_min + kk*dw;\\\\n        real f = eval_f<real,order>( n, x, \
y, z, u, v, w, coeffs, conf );\\\\n        \\\\n        rho += f;\\\\n        \
j_x += f*u;\\\\n        j_y += f*v;\\\\n        j_z += f*w'\\\\n        // \
...\\\\n        moments[1] += f* 1; \\\\n        moments[2] += f* List(1)[2]; \
\\\\n        moments[3] += f* List(1)[3]; \\\\n        moments[4] = 0; \\\\n  \
      moments[5] += f* z; \\\\n        moments[6] += f* z*(2.5 + (-Power(x,2) \
- Power(y,2) - Power(z,2))/2.); \\\\n        moments[7] = 0; \\\\n        \
moments[8] += f* -x; \\\\n        moments[9] += f* -(x*(2.5 + (-Power(x,2) - \
Power(y,2) - Power(z,2))/2.)); \\\\n        moments[10] = 0; \\\\n        \
moments[11] = 0; \\\\n        moments[12] += f* -Power(x,2) - Power(y,2) + \
2*Power(z,2); \\\\n        moments[13] += f* (-Power(x,2) - Power(y,2) + \
2*Power(z,2))*(3.5 + (-Power(x,2) - Power(y,2) - Power(z,2))/2.); \\\\n       \
 moments[14] += f* (-Power(x,2) - Power(y,2) + 2*Power(z,2))*(15.75 - \
(9*(Power(x,2) + Power(y,2) + Power(z,2)))/2. + Power(Power(x,2) + Power(y,2) \
+ Power(z,2),2)/4.); \\\\n        moments[15] = 0; \\\\n        moments[16] = \
0; \\\\n        moments[17] += f* -(x*z); \\\\n        moments[18] += f* \
-(x*z*(3.5 + (-Power(x,2) - Power(y,2) - Power(z,2))/2.)); \\\\n        \
moments[19] += f* -(x*z*(15.75 - (9*(Power(x,2) + Power(y,2) + \
Power(z,2)))/2. + Power(Power(x,2) + Power(y,2) + Power(z,2),2)/4.)); \\\\n   \
     moments[20] = 0; \\\\n        moments[21] = 0; \\\\n        moments[22] \
= 0; \\\\n        moments[23] += f* -3*Power(x,2)*z - 3*Power(y,2)*z + \
2*Power(z,3); \\\\n        moments[24] += f* (-3*Power(x,2)*z - \
3*Power(y,2)*z + 2*Power(z,3))*(4.5 + (-Power(x,2) - Power(y,2) - \
Power(z,2))/2.); \\\\n        moments[25] += f* (-3*Power(x,2)*z - \
3*Power(y,2)*z + 2*Power(z,3))*(24.75 - (11*(Power(x,2) + Power(y,2) + \
Power(z,2)))/2. + Power(Power(x,2) + Power(y,2) + Power(z,2),2)/4.); \\\\n    \
    moments[26] += f* (-3*Power(x,2)*z - 3*Power(y,2)*z + \
2*Power(z,3))*(160.875 - (429*(Power(x,2) + Power(y,2) + Power(z,2)))/8. + \
(39*Power(Power(x,2) + Power(y,2) + Power(z,2),2))/8. - Power(Power(x,2) + \
Power(y,2) + Power(z,2),3)/8.); \\\\n        moments[27] = 0; \\\\n        \
moments[28] = 0; \\\\n        moments[29] = 0; \\\\n        moments[30] = 0; \
\\\\n        moments[31] += f* 3*Power(x,4) + 6*Power(x,2)*Power(y,2) + \
3*Power(y,4) - 24*Power(x,2)*Power(z,2) - 24*Power(y,2)*Power(z,2) + \
8*Power(z,4); \\\\n        moments[32] += f* (3*Power(x,4) + \
6*Power(x,2)*Power(y,2) + 3*Power(y,4) - 24*Power(x,2)*Power(z,2) - \
24*Power(y,2)*Power(z,2) + 8*Power(z,4))*(5.5 + (-Power(x,2) - Power(y,2) - \
Power(z,2))/2.); \\\\n        moments[33] += f* (3*Power(x,4) + \
6*Power(x,2)*Power(y,2) + 3*Power(y,4) - 24*Power(x,2)*Power(z,2) - \
24*Power(y,2)*Power(z,2) + 8*Power(z,4))*(35.75 - (13*(Power(x,2) + \
Power(y,2) + Power(z,2)))/2. + Power(Power(x,2) + Power(y,2) + \
Power(z,2),2)/4.); \\\\n        moments[34] += f* (3*Power(x,4) + \
6*Power(x,2)*Power(y,2) + 3*Power(y,4) - 24*Power(x,2)*Power(z,2) - \
24*Power(y,2)*Power(z,2) + 8*Power(z,4))*(268.125 - (585*(Power(x,2) + \
Power(y,2) + Power(z,2)))/8. + (45*Power(Power(x,2) + Power(y,2) + \
Power(z,2),2))/8. - Power(Power(x,2) + Power(y,2) + Power(z,2),3)/8.); \\\\n  \
      moments[35] += f* (3*Power(x,4) + 6*Power(x,2)*Power(y,2) + \
3*Power(y,4) - 24*Power(x,2)*Power(z,2) - 24*Power(y,2)*Power(z,2) + \
8*Power(z,4))*(2279.0625 - (3315*(Power(x,2) + Power(y,2) + Power(z,2)))/4. + \
(765*Power(Power(x,2) + Power(y,2) + Power(z,2),2))/8. - (17*Power(Power(x,2) \
+ Power(y,2) + Power(z,2),3))/4. + Power(Power(x,2) + Power(y,2) + \
Power(z,2),4)/16.); \\\\n }\\\\n    rho = 1 - du*dv*dw*rho;\\\\n    // \
...\\\\n\\\\n    // fill moments vector\\\\n}\>\""], "Input",
 CellChangeTimes->{{3.917844576283641*^9, 3.917844576287838*^9}},
 CellLabel->
  "In[1012]:=",ExpressionUUID->"88783790-2a92-4887-8398-c383935f964e"],

Cell[BoxData["\<\"// This file calculates moments from a distribution\\\\n// \
Author: Anja Matena (anja.matena@rwth-aachen.de)\\\\ntemplate <typename real, \
size_t order>\\\\nvoid eval_rho( size_t n, size_t l, const real *coeffs, \
const config_t<real> &conf, real* moments )\\\\n{ \\\\n    const size_t k   = \
l   / (conf.Nx * conf.Ny); \\\\n    const size_t tmp = l   % (conf.Nx * \
conf.Ny);\\\\n    const size_t j   = tmp / conf.Nx;\\\\n    const size_t i   \
= tmp % conf.Nx;\\\\n\\\\n    const real x = conf.x_min + i*conf.dx;\\\\n    \
const real y = conf.y_min + j*conf.dy;\\\\n    const real z = conf.z_min + \
k*conf.dz;\\\\n\\\\n    const real du = (conf.u_max-conf.u_min) / conf.Nu; \\\
\\n    const real dv = (conf.v_max-conf.v_min) / conf.Nv;\\\\n    const real \
dw = (conf.w_max-conf.w_min) / conf.Nw;\\\\n\\\\n    const real u_min = \
conf.u_min + 0.5*du;\\\\n    const real v_min = conf.v_min + 0.5*dv;\\\\n    \
const real w_min = conf.w_min + 0.5*dw;\\\\n\\\\n\\\\n    real rho = 0;\\\\n  \
  for ( size_t kk = 0; kk < conf.Nw; ++kk )\\\\n    for ( size_t jj = 0; jj < \
conf.Nv; ++jj )\\\\n    for ( size_t ii = 0; ii < conf.Nu; ++ii )\\\\n    {\\\
\\n        real u = u_min + ii*du;\\\\n        real v = v_min + jj*dv;\\\\n   \
     real w = w_min + kk*dw;\\\\n        real f = eval_f<real,order>( n, x, \
y, z, u, v, w, coeffs, conf );\\\\n        \\\\n        rho += f;\\\\n        \
j_x += f*u;\\\\n        j_y += f*v;\\\\n        j_z += f*w'\\\\n        // \
...\\\\n        moments[1] += f* 1; \\\\n        moments[2] += f* List(1)[2]; \
\\\\n        moments[3] += f* List(1)[3]; \\\\n        moments[4] = 0; \\\\n  \
      moments[5] += f* z; \\\\n        moments[6] += f* z*(2.5 + (-Power(x,2) \
- Power(y,2) - Power(z,2))/2.); \\\\n        moments[7] = 0; \\\\n        \
moments[8] += f* -x; \\\\n        moments[9] += f* -(x*(2.5 + (-Power(x,2) - \
Power(y,2) - Power(z,2))/2.)); \\\\n        moments[10] = 0; \\\\n        \
moments[11] = 0; \\\\n        moments[12] += f* -Power(x,2) - Power(y,2) + \
2*Power(z,2); \\\\n        moments[13] += f* (-Power(x,2) - Power(y,2) + \
2*Power(z,2))*(3.5 + (-Power(x,2) - Power(y,2) - Power(z,2))/2.); \\\\n       \
 moments[14] += f* (-Power(x,2) - Power(y,2) + 2*Power(z,2))*(15.75 - \
(9*(Power(x,2) + Power(y,2) + Power(z,2)))/2. + Power(Power(x,2) + Power(y,2) \
+ Power(z,2),2)/4.); \\\\n        moments[15] = 0; \\\\n        moments[16] = \
0; \\\\n        moments[17] += f* -(x*z); \\\\n        moments[18] += f* \
-(x*z*(3.5 + (-Power(x,2) - Power(y,2) - Power(z,2))/2.)); \\\\n        \
moments[19] += f* -(x*z*(15.75 - (9*(Power(x,2) + Power(y,2) + \
Power(z,2)))/2. + Power(Power(x,2) + Power(y,2) + Power(z,2),2)/4.)); \\\\n   \
     moments[20] = 0; \\\\n        moments[21] = 0; \\\\n        moments[22] \
= 0; \\\\n        moments[23] += f* -3*Power(x,2)*z - 3*Power(y,2)*z + \
2*Power(z,3); \\\\n        moments[24] += f* (-3*Power(x,2)*z - \
3*Power(y,2)*z + 2*Power(z,3))*(4.5 + (-Power(x,2) - Power(y,2) - \
Power(z,2))/2.); \\\\n        moments[25] += f* (-3*Power(x,2)*z - \
3*Power(y,2)*z + 2*Power(z,3))*(24.75 - (11*(Power(x,2) + Power(y,2) + \
Power(z,2)))/2. + Power(Power(x,2) + Power(y,2) + Power(z,2),2)/4.); \\\\n    \
    moments[26] += f* (-3*Power(x,2)*z - 3*Power(y,2)*z + \
2*Power(z,3))*(160.875 - (429*(Power(x,2) + Power(y,2) + Power(z,2)))/8. + \
(39*Power(Power(x,2) + Power(y,2) + Power(z,2),2))/8. - Power(Power(x,2) + \
Power(y,2) + Power(z,2),3)/8.); \\\\n        moments[27] = 0; \\\\n        \
moments[28] = 0; \\\\n        moments[29] = 0; \\\\n        moments[30] = 0; \
\\\\n        moments[31] += f* 3*Power(x,4) + 6*Power(x,2)*Power(y,2) + \
3*Power(y,4) - 24*Power(x,2)*Power(z,2) - 24*Power(y,2)*Power(z,2) + \
8*Power(z,4); \\\\n        moments[32] += f* (3*Power(x,4) + \
6*Power(x,2)*Power(y,2) + 3*Power(y,4) - 24*Power(x,2)*Power(z,2) - \
24*Power(y,2)*Power(z,2) + 8*Power(z,4))*(5.5 + (-Power(x,2) - Power(y,2) - \
Power(z,2))/2.); \\\\n        moments[33] += f* (3*Power(x,4) + \
6*Power(x,2)*Power(y,2) + 3*Power(y,4) - 24*Power(x,2)*Power(z,2) - \
24*Power(y,2)*Power(z,2) + 8*Power(z,4))*(35.75 - (13*(Power(x,2) + \
Power(y,2) + Power(z,2)))/2. + Power(Power(x,2) + Power(y,2) + \
Power(z,2),2)/4.); \\\\n        moments[34] += f* (3*Power(x,4) + \
6*Power(x,2)*Power(y,2) + 3*Power(y,4) - 24*Power(x,2)*Power(z,2) - \
24*Power(y,2)*Power(z,2) + 8*Power(z,4))*(268.125 - (585*(Power(x,2) + \
Power(y,2) + Power(z,2)))/8. + (45*Power(Power(x,2) + Power(y,2) + \
Power(z,2),2))/8. - Power(Power(x,2) + Power(y,2) + Power(z,2),3)/8.); \\\\n  \
      moments[35] += f* (3*Power(x,4) + 6*Power(x,2)*Power(y,2) + \
3*Power(y,4) - 24*Power(x,2)*Power(z,2) - 24*Power(y,2)*Power(z,2) + \
8*Power(z,4))*(2279.0625 - (3315*(Power(x,2) + Power(y,2) + Power(z,2)))/4. + \
(765*Power(Power(x,2) + Power(y,2) + Power(z,2),2))/8. - (17*Power(Power(x,2) \
+ Power(y,2) + Power(z,2),3))/4. + Power(Power(x,2) + Power(y,2) + \
Power(z,2),4)/16.); \\\\n }\\\\n    rho = 1 - du*dv*dw*rho;\\\\n    // \
...\\\\n\\\\n    // fill moments vector\\\\n}\"\>"], "Output",
 CellChangeTimes->{
  3.917844581189352*^9, 3.917852043271175*^9, 3.917852133732991*^9, 
   3.9178521785799303`*^9, 3.917854515292378*^9, 3.917854662733354*^9, 
   3.917854885767258*^9, 3.917855167390513*^9, 3.917855579001134*^9, 
   3.9178667051176653`*^9, {3.917945020773487*^9, 3.917945050518074*^9}, {
   3.9180239737640867`*^9, 3.9180239983165007`*^9}, 3.918031596605541*^9, 
   3.9180316905350513`*^9, 3.918031729554933*^9, 3.918031922009666*^9, 
   3.9184053602701063`*^9, {3.918405538598669*^9, 3.9184055546810703`*^9}, 
   3.9184057313511877`*^9, 3.918405816834317*^9, 3.918405941060779*^9},
 CellLabel->
  "Out[1012]=",ExpressionUUID->"c80d725f-9cdd-4265-86e9-562e0f88d123"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"theory", "=", 
    RowBox[{"{", 
     RowBox[{
     "10", ",", "9", ",", "9", ",", "8", ",", "8", ",", "7", ",", "7", ",", 
      "6", ",", "6", ",", "5", ",", "5", ",", "4", ",", "4", ",", "3", ",", 
      "3", ",", "2", ",", "2", ",", "1", ",", "1", ",", "0", ",", "0"}], 
     "}"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"theory", " ", "=", " ", 
     RowBox[{"{", "10", "}"}]}], ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"generatefFile", "[", 
   RowBox[{"theory", ",", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], " ", "<>", " ", "distname", 
     "<>", "\"\<_Full10\>\""}]}], " ", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.828450765821228*^9, 3.82845093884812*^9}, {
   3.8284525426750736`*^9, 3.828452546040963*^9}, {3.82845260673518*^9, 
   3.828452618408886*^9}, {3.828454574879232*^9, 3.828454577917627*^9}, 
   3.828455111053261*^9, 3.909053704606615*^9, 3.913814608710213*^9, 
   3.918031847010805*^9, 3.918031882958344*^9},
 CellLabel->
  "In[1013]:=",ExpressionUUID->"ec95ea2b-2176-4ef7-9584-a26830aeda77"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"theory", "=", 
    RowBox[{"{", 
     RowBox[{
     "3", ",", "3", ",", "3", ",", "3", ",", "3", ",", "3", ",", "3"}], 
     "}"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"theory", " ", "=", " ", 
     RowBox[{"{", "10", "}"}]}], ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"generatefFile", "[", 
   RowBox[{"theory", ",", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], " ", "<>", " ", "distname", 
     "<>", "\"\<_3333333\>\""}]}], " ", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.915010798713681*^9, 3.915010813848222*^9}, {
  3.918031851592835*^9, 3.918031879394534*^9}},
 CellLabel->
  "In[1015]:=",ExpressionUUID->"7950cad9-4da6-4c8b-a288-ab548e8d2ce6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"theory", "=", 
    RowBox[{"{", 
     RowBox[{
     "4", ",", "4", ",", "4", ",", "4", ",", "4", ",", "4", ",", "4", ",", 
      "4", ",", "4"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"theory", " ", "=", " ", 
     RowBox[{"{", "10", "}"}]}], ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"generatefFile", "[", 
   RowBox[{"theory", ",", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], " ", "<>", " ", "distname", 
     "<>", "\"\<_444444444\>\""}]}], " ", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.913814617004052*^9, 3.91381463131046*^9}, {
  3.9180318600921993`*^9, 3.918031876908071*^9}},
 CellLabel->
  "In[1017]:=",ExpressionUUID->"6502be29-ca23-4034-b2c7-a1b78d083c0c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Alternative", " ", "projection", " ", "space"}], ",", " ", 
    RowBox[{
    "since", " ", "all", " ", "uneven", " ", "n", " ", "are", " ", "0", " ", 
     RowBox[{"anyway", ":"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"theory", "=", 
     RowBox[{"{", 
      RowBox[{
      "10", ",", "0", ",", "9", ",", "0", ",", "8", ",", "0", ",", "7", ",", 
       "0", ",", "6", ",", "0", ",", "5", ",", "0", ",", "4", ",", "0", ",", 
       "3", ",", "0", ",", "2", ",", "0", ",", "1", ",", "0", ",", "0"}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"theory", " ", "=", " ", 
      RowBox[{"{", "10", "}"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"generatefFile", "[", 
     RowBox[{"theory", ",", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], " ", "<>", " ", "distname", 
       "<>", "\"\<_OnlyEvenN10\>\""}]}], " ", "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.828450765821228*^9, 3.82845093884812*^9}, {
   3.8284525426750736`*^9, 3.828452546040963*^9}, {3.82845260673518*^9, 
   3.828452618408886*^9}, {3.828454574879232*^9, 3.828454577917627*^9}, {
   3.828454977590608*^9, 3.828455001720283*^9}, {3.82845503874884*^9, 
   3.8284550925024548`*^9}, {3.8284551507299185`*^9, 3.8284551528119955`*^9}, 
   3.909053709491209*^9, {3.9180318653563967`*^9, 3.918031872380825*^9}},
 CellLabel->
  "In[1019]:=",ExpressionUUID->"bbca885d-432f-4c82-9666-f373b8a75464"]
}, Open  ]]
},
WindowSize->{Full, Full},
WindowMargins->{{137, Automatic}, {Automatic, 26}},
TaggingRules->{
 "WelcomeScreenSettings" -> {"FEStarting" -> False}, "TryRealOnly" -> False},
FrontEndVersion->"14.0 for Mac OS X ARM (64-bit) (December 12, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"587c5d65-c009-4444-b16a-de52323ae4a3"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 393, 10, 88, "Input",ExpressionUUID->"c819e5af-96d5-4539-8d6e-4f1709fbc967"],
Cell[CellGroupData[{
Cell[976, 34, 989, 21, 69, "Section",ExpressionUUID->"0488a9bf-ff6a-4633-b09c-210e5a0a5a6c"],
Cell[1968, 57, 1981, 37, 196, "Input",ExpressionUUID->"9b601a50-369a-4d33-880a-05d1c3c299b8"],
Cell[CellGroupData[{
Cell[3974, 98, 477, 8, 30, "Input",ExpressionUUID->"46b19228-5073-41cd-93fe-cc0f2b56a1b9"],
Cell[4454, 108, 2874, 49, 37, "Output",ExpressionUUID->"006f6211-4b46-49cc-a6d6-f0c3e5aa2a4f"]
}, Closed]],
Cell[7343, 160, 173, 2, 30, "Input",ExpressionUUID->"afacf0bd-62f3-4e86-a3b2-2637bbf68080"],
Cell[7519, 164, 224, 4, 30, "Input",ExpressionUUID->"69f5ad57-7d8f-421d-8cec-3286b85dc606"]
}, Closed]],
Cell[CellGroupData[{
Cell[7780, 173, 756, 18, 55, "Section",ExpressionUUID->"d7321192-bb66-4d3e-bf2b-ec2cdbcbc6ca"],
Cell[8539, 193, 753, 22, 67, "Input",ExpressionUUID->"c0a7cd56-fc44-4d4e-89b1-2e2d84cc9f7c"],
Cell[9295, 217, 1279, 32, 86, "Input",ExpressionUUID->"bf5c8aa1-82cc-4e56-b73b-09a5b83d18e9"],
Cell[10577, 251, 323, 7, 44, "Input",ExpressionUUID->"2b30aff4-b8e2-4d76-87ad-16ef2525c3d0"],
Cell[10903, 260, 7838, 230, 476, "Input",ExpressionUUID->"53b21f00-5f0e-4919-b174-b5835e8d8ea5"],
Cell[18744, 492, 2809, 67, 139, "Input",ExpressionUUID->"f05ab810-55d2-465e-b603-fd640be55ea4"],
Cell[CellGroupData[{
Cell[21578, 563, 333, 7, 30, "Input",ExpressionUUID->"ba0b5fe7-c6c6-4297-ad18-6f208f5ef162"],
Cell[21914, 572, 432, 8, 34, "Output",ExpressionUUID->"bb9e7b5b-512d-4b02-8cf5-663f1bafd7d1"]
}, Closed]],
Cell[CellGroupData[{
Cell[22383, 585, 366, 8, 44, "Input",ExpressionUUID->"ba9cedf3-afba-46c4-9051-162fec3ef8dc"],
Cell[22752, 595, 1268, 23, 138, "Output",ExpressionUUID->"38873924-e867-4041-9674-ac6e52d19b4e"]
}, Closed]],
Cell[24035, 621, 1937, 47, 38, "Input",ExpressionUUID->"c117a07e-0ab8-4392-9a20-929ad3c7943b"],
Cell[25975, 670, 5741, 133, 496, "Input",ExpressionUUID->"b45c4542-1141-49df-9886-4f1a4cb7942a"],
Cell[CellGroupData[{
Cell[31741, 807, 415, 12, 48, "Input",ExpressionUUID->"ad6a48d7-886c-473d-beef-abaec61a9c78"],
Cell[32159, 821, 1118, 17, 49, "Output",ExpressionUUID->"614c91b8-858a-4f25-9515-54b810e83e61"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[33326, 844, 1022, 21, 55, "Section",ExpressionUUID->"ff575391-6d66-415c-8b34-30636ec75051"],
Cell[CellGroupData[{
Cell[34373, 869, 628, 11, 45, "Subsubsection",ExpressionUUID->"bd1b4d6f-16b7-48d2-937f-a8ba662522bd"],
Cell[35004, 882, 5893, 124, 577, "Input",ExpressionUUID->"60d06ba9-61fb-4e9a-945f-1a4499e4863f"]
}, Closed]],
Cell[CellGroupData[{
Cell[40934, 1011, 733, 13, 45, "Subsubsection",ExpressionUUID->"fce93876-ca66-4d8e-b781-36792e9888e1"],
Cell[41670, 1026, 9230, 229, 1451, "Input",ExpressionUUID->"6f32c501-a4e8-4fbb-a4b0-b16a5e79c07e"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[50949, 1261, 990, 21, 55, "Section",ExpressionUUID->"fc631935-8a27-46a4-8f71-5821408a536a"],
Cell[51942, 1284, 8056, 211, 341, "Input",ExpressionUUID->"afa61b89-9901-42e6-aa59-1497b7ea0446"],
Cell[CellGroupData[{
Cell[60023, 1499, 181, 3, 30, "Input",ExpressionUUID->"ea9ed237-4002-49c5-9b71-5fb3351e0e1f"],
Cell[60207, 1504, 591, 13, 48, "Output",ExpressionUUID->"0c9811f4-efb9-4f74-bf82-2d79f3083f12"]
}, Closed]],
Cell[CellGroupData[{
Cell[60835, 1522, 178, 3, 26, "Input",ExpressionUUID->"f5fff19e-5a2b-4797-8f85-1278d02435d1"],
Cell[61016, 1527, 764, 12, 63, "Output",ExpressionUUID->"171fd568-b18c-4c3d-9e92-da3074201818"]
}, Closed]],
Cell[CellGroupData[{
Cell[61817, 1544, 179, 3, 26, "Input",ExpressionUUID->"30c0b21c-d618-43e0-a8ae-918d72fd7e4f"],
Cell[61999, 1549, 760, 12, 63, "Output",ExpressionUUID->"372bfbeb-cb70-4fe3-8ca5-9391d542c91b"]
}, Closed]],
Cell[CellGroupData[{
Cell[62796, 1566, 722, 15, 40, "Input",ExpressionUUID->"7f39e42d-679f-4c68-8d00-7a7f4a2242aa"],
Cell[63521, 1583, 85106, 1437, 259, "Output",ExpressionUUID->"370cef48-b591-414c-afe9-b32859aa572c"]
}, Closed]],
Cell[CellGroupData[{
Cell[148664, 3025, 669, 14, 40, "Input",ExpressionUUID->"102cf5a1-259a-404a-9226-66bd8ab5005d"],
Cell[149336, 3041, 67763, 1158, 259, "Output",ExpressionUUID->"b2df9e11-1125-40ca-bf93-3b0a6e83e30d"]
}, Closed]],
Cell[CellGroupData[{
Cell[217136, 4204, 952, 27, 65, "Input",ExpressionUUID->"77259a72-3ea0-49dd-82b6-b6e5c7358f8b"],
Cell[218091, 4233, 550, 11, 48, "Output",ExpressionUUID->"f1406277-b888-40f6-aff3-c10b643d30f3"]
}, Closed]],
Cell[CellGroupData[{
Cell[218678, 4249, 2138, 58, 80, "Input",ExpressionUUID->"f8ffef23-bf6b-4fcd-9b92-d725b08972a5"],
Cell[220819, 4309, 716, 11, 48, "Output",ExpressionUUID->"eb04db16-9ad4-4f65-a367-933a1d3b86cc"]
}, Closed]],
Cell[221550, 4323, 241, 5, 40, "Input",ExpressionUUID->"984e3bd8-7c2c-4e0b-adfb-2e5578a659d5"],
Cell[CellGroupData[{
Cell[221816, 4332, 1077, 27, 44, "Input",ExpressionUUID->"b9ed3ce9-2943-4c4b-9c40-07975aa098ad"],
Cell[222896, 4361, 950, 15, 63, "Output",ExpressionUUID->"fccea90b-75c5-4ef6-916c-f7be3e6a4ec4"]
}, Closed]],
Cell[CellGroupData[{
Cell[223883, 4381, 2205, 58, 103, "Input",ExpressionUUID->"a511f3aa-f9d3-442a-8947-93c6e67a798f"],
Cell[226091, 4441, 642, 11, 63, "Output",ExpressionUUID->"86d6cbba-c07e-4a4a-a0ba-5e850abe0b25"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[226782, 4458, 1010, 21, 55, "Section",ExpressionUUID->"98f8be1c-b57f-4c80-9693-60a3ef05ced8"],
Cell[227795, 4481, 11110, 185, 2626, "Input",ExpressionUUID->"9f46df57-afea-4594-86d2-7b70d901695c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[238942, 4671, 973, 21, 69, "Section",ExpressionUUID->"30dcbd12-f50f-46d2-a30a-735f46e1b353"],
Cell[CellGroupData[{
Cell[239940, 4696, 217, 4, 44, "Input",ExpressionUUID->"8e2e207c-7f57-4463-a93c-65400ce810de"],
Cell[240160, 4702, 1686, 25, 34, "Output",ExpressionUUID->"adec40ff-9299-4640-b9e9-484383642945"]
}, Open  ]],
Cell[CellGroupData[{
Cell[241883, 4732, 328, 6, 30, "Input",ExpressionUUID->"784352eb-3dca-4e57-838c-2c9676eb8e74"],
Cell[242214, 4740, 1713, 25, 34, "Output",ExpressionUUID->"54678ad1-2af3-4114-971a-c9d69cb859f3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[243964, 4770, 1009, 23, 86, "Input",ExpressionUUID->"99fb9024-c3be-409e-80b5-aad10256776e"],
Cell[244976, 4795, 6167, 84, 2639, "Output",ExpressionUUID->"e09baf8b-82ae-489f-8d71-ab04f9fed500"]
}, Open  ]],
Cell[CellGroupData[{
Cell[251180, 4884, 6158, 82, 829, "Input",ExpressionUUID->"db2c46d4-47df-4597-ba05-fc21d15fbcea"],
Cell[257341, 4968, 6397, 86, 749, "Output",ExpressionUUID->"d955d848-94b1-4fd7-a14d-44dfc8e5837d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[263775, 5059, 5234, 70, 724, "Input",ExpressionUUID->"88783790-2a92-4887-8398-c383935f964e"],
Cell[269012, 5131, 5770, 78, 665, "Output",ExpressionUUID->"c80d725f-9cdd-4265-86e9-562e0f88d123"]
}, Open  ]],
Cell[274797, 5212, 1144, 26, 86, "Input",ExpressionUUID->"ec95ea2b-2176-4ef7-9584-a26830aeda77"],
Cell[275944, 5240, 775, 21, 86, "Input",ExpressionUUID->"7950cad9-4da6-4c8b-a288-ab548e8d2ce6"],
Cell[276722, 5263, 799, 21, 86, "Input",ExpressionUUID->"6502be29-ca23-4034-b2c7-a1b78d083c0c"],
Cell[277524, 5286, 1550, 34, 107, "Input",ExpressionUUID->"bbca885d-432f-4c82-9666-f373b8a75464"]
}, Open  ]]
}
]
*)

