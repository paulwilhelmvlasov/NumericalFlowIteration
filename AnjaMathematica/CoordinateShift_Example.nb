(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    555922,      11271]
NotebookOptionsPosition[    540717,      11030]
NotebookOutlinePosition[    541208,      11048]
CellTagsIndexPosition[    541165,      11045]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"NMAX", "=", "21"}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.913891992286188*^9, 3.913891993498284*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"c819e5af-96d5-4539-8d6e-4f1709fbc967"],

Cell[CellGroupData[{

Cell[TextData[{
 "Make basis for harmonic polynomials ",
 Cell[BoxData[
  ButtonBox["\<\"Run Section\"\>",
   Appearance->Automatic,
   ButtonFunction:>(SelectionMove[
      EvaluationCell[], All, CellGroup]; FrontEndExecute[
      FrontEndToken["EvaluateCells"]]),
   Evaluator->Automatic,
   Method->"Preemptive"]], "Output",
  CellChangeTimes->{3.78223244855991*^9},ExpressionUUID->
  "e0fd5aaa-0774-472c-aa72-c012c884493d"]
}], "Section",
 CellChangeTimes->{{3.569139429210832*^9, 3.569139448895958*^9}, {
   3.782232327501582*^9, 3.7822323318690214`*^9}, {3.7822323908291674`*^9, 
   3.782232402970974*^9}, {3.782232459081881*^9, 3.7822324653849487`*^9}, {
   3.788176049312538*^9, 3.788176071276765*^9}, 3.788176374120003*^9, {
   3.788178045513668*^9, 3.788178046389425*^9}, {3.788216034741043*^9, 
   3.788216067945526*^9}, {3.821990163914553*^9, 3.821990171299117*^9}, {
   3.828431070342443*^9, 
   3.828431071802395*^9}},ExpressionUUID->"0488a9bf-ff6a-4633-b09c-\
210e5a0a5a6c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"PrependTo", "[", 
   RowBox[{"$Path", ",", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{
      "$HomeDirectory", ",", "\"\<Documents\>\"", ",", "\"\<Doktorarbeit\>\"",
        ",", "\"\<linuxfiles\>\"", ",", "\"\<Mathematica\>\"", ",", 
       "\"\<SmatrixScripts\>\""}], "}"}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Get", "[", "\"\<./Ypolynom_unrotated.mx\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Get", "[", "\"\<./NormFactor_unrotated.mx\>\"", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.790946322831195*^9, 3.790946382341329*^9}, {
   3.790946455367523*^9, 3.790946477909116*^9}, {3.790946518478333*^9, 
   3.790946527350198*^9}, {3.790946562406941*^9, 3.790946578876251*^9}, {
   3.790946850375613*^9, 3.790946896180863*^9}, 3.792154843079934*^9, {
   3.7922350771130943`*^9, 3.792235080049828*^9}, 3.792304006292341*^9, {
   3.792304038898302*^9, 3.792304039878605*^9}, 3.792304413273783*^9, {
   3.79465549339805*^9, 3.794655498546061*^9}, {3.79465580750592*^9, 
   3.79465580936097*^9}, 3.7946558964768224`*^9, {3.7946560116565905`*^9, 
   3.794656016824558*^9}, {3.794663615845731*^9, 3.794663643116997*^9}, {
   3.794666880514841*^9, 3.794666884045052*^9}, {3.794753580461724*^9, 
   3.794753586683557*^9}, {3.800872554566268*^9, 3.800872558908499*^9}, {
   3.801491189911741*^9, 3.801491193959962*^9}, {3.815300571142747*^9, 
   3.815300574534042*^9}, {3.82198698580826*^9, 3.82198698885044*^9}, {
   3.828454245800363*^9, 3.828454256121382*^9}, {3.9090385722782736`*^9, 
   3.9090385748447514`*^9}, {3.909038614479997*^9, 3.909038632570404*^9}, {
   3.920542485525747*^9, 3.920542488503023*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"9b601a50-369a-4d33-880a-05d1c3c299b8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Ypolynom", "[", 
  RowBox[{"[", "6", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.803726594509114*^9, 3.803726614239427*^9}, {
   3.807980344780597*^9, 3.80798034704082*^9}, {3.821986725495998*^9, 
   3.821986731695203*^9}, {3.8219874496276445`*^9, 3.8219874994632807`*^9}, {
   3.82199018430515*^9, 3.8219901850549808`*^9}, {3.9090386778548007`*^9, 
   3.909038692327987*^9}, 3.918895593136683*^9},
 CellLabel->"In[7]:=",ExpressionUUID->"46b19228-5073-41cd-93fe-cc0f2b56a1b9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"5", " ", 
     SuperscriptBox["x1", "4"], " ", "y1"}], "-", 
    RowBox[{"10", " ", 
     SuperscriptBox["x1", "2"], " ", 
     SuperscriptBox["y1", "3"]}], "+", 
    SuperscriptBox["y1", "5"]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["x1", "3"], " ", "y1", " ", "z1"}], "-", 
    RowBox[{"x1", " ", 
     SuperscriptBox["y1", "3"], " ", "z1"}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "3"}], " ", 
     SuperscriptBox["x1", "4"], " ", "y1"}], "-", 
    RowBox[{"2", " ", 
     SuperscriptBox["x1", "2"], " ", 
     SuperscriptBox["y1", "3"]}], "+", 
    SuperscriptBox["y1", "5"], "+", 
    RowBox[{"24", " ", 
     SuperscriptBox["x1", "2"], " ", "y1", " ", 
     SuperscriptBox["z1", "2"]}], "-", 
    RowBox[{"8", " ", 
     SuperscriptBox["y1", "3"], " ", 
     SuperscriptBox["z1", "2"]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["x1", "3"]}], " ", "y1", " ", "z1"}], "-", 
    RowBox[{"x1", " ", 
     SuperscriptBox["y1", "3"], " ", "z1"}], "+", 
    RowBox[{"2", " ", "x1", " ", "y1", " ", 
     SuperscriptBox["z1", "3"]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["x1", "4"], " ", "y1"}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["x1", "2"], " ", 
     SuperscriptBox["y1", "3"]}], "+", 
    SuperscriptBox["y1", "5"], "-", 
    RowBox[{"12", " ", 
     SuperscriptBox["x1", "2"], " ", "y1", " ", 
     SuperscriptBox["z1", "2"]}], "-", 
    RowBox[{"12", " ", 
     SuperscriptBox["y1", "3"], " ", 
     SuperscriptBox["z1", "2"]}], "+", 
    RowBox[{"8", " ", "y1", " ", 
     SuperscriptBox["z1", "4"]}]}], ",", 
   RowBox[{
    RowBox[{"15", " ", 
     SuperscriptBox["x1", "4"], " ", "z1"}], "+", 
    RowBox[{"30", " ", 
     SuperscriptBox["x1", "2"], " ", 
     SuperscriptBox["y1", "2"], " ", "z1"}], "+", 
    RowBox[{"15", " ", 
     SuperscriptBox["y1", "4"], " ", "z1"}], "-", 
    RowBox[{"40", " ", 
     SuperscriptBox["x1", "2"], " ", 
     SuperscriptBox["z1", "3"]}], "-", 
    RowBox[{"40", " ", 
     SuperscriptBox["y1", "2"], " ", 
     SuperscriptBox["z1", "3"]}], "+", 
    RowBox[{"8", " ", 
     SuperscriptBox["z1", "5"]}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["x1", "5"]}], "-", 
    RowBox[{"2", " ", 
     SuperscriptBox["x1", "3"], " ", 
     SuperscriptBox["y1", "2"]}], "-", 
    RowBox[{"x1", " ", 
     SuperscriptBox["y1", "4"]}], "+", 
    RowBox[{"12", " ", 
     SuperscriptBox["x1", "3"], " ", 
     SuperscriptBox["z1", "2"]}], "+", 
    RowBox[{"12", " ", "x1", " ", 
     SuperscriptBox["y1", "2"], " ", 
     SuperscriptBox["z1", "2"]}], "-", 
    RowBox[{"8", " ", "x1", " ", 
     SuperscriptBox["z1", "4"]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["x1", "4"]}], " ", "z1"}], "+", 
    RowBox[{
     SuperscriptBox["y1", "4"], " ", "z1"}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["x1", "2"], " ", 
     SuperscriptBox["z1", "3"]}], "-", 
    RowBox[{"2", " ", 
     SuperscriptBox["y1", "2"], " ", 
     SuperscriptBox["z1", "3"]}]}], ",", 
   RowBox[{
    SuperscriptBox["x1", "5"], "-", 
    RowBox[{"2", " ", 
     SuperscriptBox["x1", "3"], " ", 
     SuperscriptBox["y1", "2"]}], "-", 
    RowBox[{"3", " ", "x1", " ", 
     SuperscriptBox["y1", "4"]}], "-", 
    RowBox[{"8", " ", 
     SuperscriptBox["x1", "3"], " ", 
     SuperscriptBox["z1", "2"]}], "+", 
    RowBox[{"24", " ", "x1", " ", 
     SuperscriptBox["y1", "2"], " ", 
     SuperscriptBox["z1", "2"]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["x1", "4"], " ", "z1"}], "-", 
    RowBox[{"6", " ", 
     SuperscriptBox["x1", "2"], " ", 
     SuperscriptBox["y1", "2"], " ", "z1"}], "+", 
    RowBox[{
     SuperscriptBox["y1", "4"], " ", "z1"}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["x1", "5"]}], "+", 
    RowBox[{"10", " ", 
     SuperscriptBox["x1", "3"], " ", 
     SuperscriptBox["y1", "2"]}], "-", 
    RowBox[{"5", " ", "x1", " ", 
     SuperscriptBox["y1", "4"]}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8037266004433055`*^9, 3.8037266150778975`*^9}, 
   3.804330152773403*^9, 3.8043407596157618`*^9, 3.804348336952427*^9, 
   3.804836460320285*^9, 3.805020693916654*^9, 3.8052153446649966`*^9, 
   3.806405075865806*^9, 3.806468187161627*^9, 3.806477283829353*^9, 
   3.806638130636529*^9, 3.806639305595276*^9, 3.807346602212259*^9, 
   3.807980300424631*^9, 3.807980347631211*^9, 3.808028551230519*^9, 
   3.808032668626188*^9, 3.8080452400640574`*^9, 3.808066340336558*^9, 
   3.8081262335750732`*^9, 3.808202618763988*^9, 3.8082030080598993`*^9, 
   3.809163872108512*^9, 3.809347844020296*^9, 3.8096779095529103`*^9, 
   3.809705598746004*^9, 3.809766164743585*^9, 3.809773487132965*^9, 
   3.814876184107769*^9, 3.815299788676905*^9, 3.815300584228185*^9, 
   3.815300687133498*^9, 3.815908124320503*^9, 3.815982926363812*^9, 
   3.816067776706853*^9, 3.816075216722535*^9, 3.8163252068099265`*^9, 
   3.816506004408581*^9, 3.816602156827006*^9, 3.816710186753359*^9, 
   3.821542563298725*^9, 3.82154363876784*^9, 3.821700337761269*^9, 
   3.821811313697*^9, 3.821811430903967*^9, 3.821814467201262*^9, 
   3.821987421416334*^9, {3.821987453812395*^9, 3.821987500444049*^9}, 
   3.8219918174808216`*^9, 3.822676147943827*^9, 3.822948924856675*^9, 
   3.823090272907516*^9, 3.824461069350978*^9, 3.8244611771307383`*^9, 
   3.824489752757772*^9, 3.8248269744973516`*^9, 3.825004807735715*^9, 
   3.828178630230742*^9, 3.828431074044699*^9, 3.828454154532035*^9, 
   3.828454259802049*^9, 3.832080989778567*^9, 3.8383732451050816`*^9, 
   3.847194614624628*^9, 3.847256149123081*^9, 3.8491721466710286`*^9, 
   3.8605570258339195`*^9, 3.869902806006608*^9, 3.880716952315315*^9, 
   3.909038530909028*^9, 3.909038577482607*^9, 3.909038634733692*^9, {
   3.909038678983469*^9, 3.909038693024877*^9}, 3.909682327913682*^9, 
   3.910083184490388*^9, 3.9102880566998763`*^9, 3.910288501733932*^9, 
   3.9102985532955427`*^9, 3.913718133369108*^9, 3.9138145715246596`*^9, 
   3.913816555219669*^9, 3.9150107704793096`*^9, 3.915111812713528*^9, 
   3.915173361984473*^9, 3.916997912643586*^9, 3.917005130626455*^9, 
   3.918895594236109*^9, 3.918903781556775*^9, 3.920004026813174*^9, 
   3.920134647063704*^9, 3.9205418433232107`*^9, 3.920541963728793*^9, 
   3.920542490110515*^9, 3.920719750907498*^9, 3.92139073105768*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"3d75cf39-df6f-48fb-a4c0-ee4329e25d99"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.909038687671417*^9, 3.9090386887515025`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"afacf0bd-62f3-4e86-a3b2-2637bbf68080"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NormFactor", "[", 
  RowBox[{"[", "6", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.807980317254335*^9, 3.807980319701272*^9}, 
   3.809698892515413*^9, {3.91889566670743*^9, 3.918895670420541*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"69f5ad57-7d8f-421d-8cec-3286b85dc606"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"8", " ", 
     SqrtBox["30"]}]], ",", 
   FractionBox["1", 
    RowBox[{"2", " ", 
     SqrtBox["3"]}]], ",", 
   FractionBox["1", 
    RowBox[{"24", " ", 
     SqrtBox["6"]}]], ",", 
   FractionBox["1", "6"], ",", 
   FractionBox["1", 
    RowBox[{"24", " ", 
     SqrtBox["7"]}]], ",", 
   FractionBox["1", 
    RowBox[{"24", " ", 
     SqrtBox["105"]}]], ",", 
   FractionBox["1", 
    RowBox[{"24", " ", 
     SqrtBox["7"]}]], ",", 
   FractionBox["1", "12"], ",", 
   FractionBox["1", 
    RowBox[{"24", " ", 
     SqrtBox["6"]}]], ",", 
   FractionBox["1", 
    RowBox[{"8", " ", 
     SqrtBox["3"]}]], ",", 
   FractionBox["1", 
    RowBox[{"8", " ", 
     SqrtBox["30"]}]]}], "}"}]], "Output",
 CellChangeTimes->{3.9188956714429398`*^9, 3.918903781772776*^9, 
  3.920004027000273*^9, 3.920134647182362*^9, 3.920541843337207*^9, 
  3.920541963734967*^9, 3.9205424901301737`*^9, 3.920719750914866*^9, 
  3.9213907310760727`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"cd8e73d1-ef85-4032-ba5e-f6a2a28eca6a"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Spherical+Radial Definitions  ",
 Cell[BoxData[
  ButtonBox["\<\"Run Section\"\>",
   Appearance->Automatic,
   ButtonFunction:>(SelectionMove[
      EvaluationCell[], All, CellGroup]; FrontEndExecute[
      FrontEndToken["EvaluateCells"]]),
   Evaluator->Automatic,
   Method->"Preemptive"]], "Output",
  CellChangeTimes->{3.78223244855991*^9},ExpressionUUID->
  "1daa69bd-b79a-405f-b233-cada3b083d67"]
}], "Section",
 CellChangeTimes->{{3.619842257633191*^9, 3.619842264441731*^9}, {
  3.619842509238817*^9, 3.619842514084055*^9}, {3.7861761004759855`*^9, 
  3.786176134199703*^9}, {3.787238861446561*^9, 3.787238862833744*^9}, {
  3.79050297118994*^9, 
  3.790502972114197*^9}},ExpressionUUID->"d7321192-bb66-4d3e-bf2b-\
ec2cdbcbc6ca"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"couple", "[", 
    RowBox[{"nA_", ",", "nB_", ",", "nResult_"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"EvenQ", "[", 
       RowBox[{"nA", "+", "nB", "-", "nResult"}], "]"}], "&&", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"nA", "+", "nB", "-", "nResult"}], "\[GreaterEqual]", "0"}], 
       ")"}], "&&", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"nA", "+", "nB", "-", "nResult"}], "\[LessEqual]", 
        RowBox[{"2", 
         RowBox[{"Min", "[", 
          RowBox[{"nA", ",", "nB"}], "]"}]}]}], ")"}]}], ",", "1", ",", "0"}],
     "]"}]}], "\n"}]], "Input",
 CellLabel->"In[10]:=",ExpressionUUID->"c0a7cd56-fc44-4d4e-89b1-2e2d84cc9f7c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"p", "[", 
    RowBox[{"x_", ",", "a_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], "p"], 
      FractionBox[
       RowBox[{"Gamma", "[", 
        RowBox[{"n", "+", "a", "+", 
         RowBox[{"3", "/", "2"}]}], "]"}], 
       RowBox[{"Gamma", "[", 
        RowBox[{"n", "+", "p", "+", 
         RowBox[{"3", "/", "2"}]}], "]"}]], 
      RowBox[{"Binomial", "[", 
       RowBox[{"a", ",", "p"}], "]"}], 
      SuperscriptBox["x", "p"]}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "0", ",", "a"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.603922101598325*^9, 3.603922123170759*^9}, {
   3.603928821091833*^9, 3.603928836983473*^9}, {3.603928880575643*^9, 
   3.603928888152715*^9}, {3.603928948812301*^9, 3.603928968348375*^9}, 
   3.603929031172409*^9, {3.619843171774244*^9, 3.619843182891648*^9}, {
   3.78589970619709*^9, 3.785899709008411*^9}, {3.787231649963752*^9, 
   3.787231656928396*^9}, {3.787231689957217*^9, 3.78723170414813*^9}, {
   3.787238871638952*^9, 3.787238872198035*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"bf5c8aa1-82cc-4e56-b73b-09a5b83d18e9"],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"IntGauss1", ",", "IntGauss2", ",", " ", "IntGauss4"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.815998470353907*^9, 3.815998479444483*^9}, {
  3.8250056262866173`*^9, 3.825005630318598*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"2b30aff4-b8e2-4d76-87ad-16ef2525c3d0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"IntDirections", "[", 
      RowBox[{"nn_", ",", "mm_", ",", "pp_"}], "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"OddQ", "[", "nn", "]"}], "||", 
        RowBox[{"OddQ", "[", "mm", "]"}], "||", 
        RowBox[{"OddQ", "[", "pp", "]"}]}], ",", "0", ",", 
       RowBox[{"4", "\[Pi]", 
        FractionBox[
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"nn", "-", "1"}], ")"}], "!!"}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"mm", "-", "1"}], ")"}], "!!"}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"pp", "-", "1"}], ")"}], "!!"}]}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"nn", "+", "mm", "+", "pp", "+", "1"}], ")"}], "!!"}]]}]}],
       "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"DeltaValues", "[", "list_", "]"}], ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"a", "=", 
          RowBox[{
          "list", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{"b", "=", 
          RowBox[{
          "list", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{"c", "=", 
          RowBox[{
          "list", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"OddQ", "[", "a", "]"}], "||", 
          RowBox[{"OddQ", "[", "b", "]"}], "||", 
          RowBox[{"OddQ", "[", "c", "]"}]}], ",", "0", ",", 
         FractionBox[
          RowBox[{"Multinomial", "[", 
           RowBox[{
            FractionBox["a", "2"], ",", 
            FractionBox["b", "2"], ",", 
            FractionBox["c", "2"]}], "]"}], 
          RowBox[{"Multinomial", "[", 
           RowBox[{"a", ",", "b", ",", "c"}], "]"}]]}], "]"}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"IntDirections", "[", 
      RowBox[{"nn_", ",", "mm_", ",", "pp_"}], "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"OddQ", "[", "nn", "]"}], "||", 
        RowBox[{"OddQ", "[", "mm", "]"}], "||", 
        RowBox[{"OddQ", "[", "pp", "]"}]}], ",", "0", ",", 
       RowBox[{"4", 
        SuperscriptBox["sqrPiInv", 
         RowBox[{"-", "2"}]], " ", 
        FractionBox[
         RowBox[{"DeltaValues", "[", 
          RowBox[{"{", 
           RowBox[{"nn", ",", "mm", ",", "pp"}], "}"}], "]"}], 
         RowBox[{"nn", "+", "mm", "+", "pp", "+", "1"}]]}]}], "]"}]}], ";"}], 
   " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"IntGauss4", "[", "nn_", "]"}], ":=", 
     RowBox[{
      RowBox[{"IntGauss4", "[", "nn", "]"}], "=", 
      RowBox[{
       SuperscriptBox["sqrPiInv", 
        RowBox[{"-", "1"}]], 
       FractionBox[
        SuperscriptBox["2", 
         RowBox[{
          RowBox[{"2", "nn"}], "+", "1"}]], "2"], 
       RowBox[{
        RowBox[{"Gamma", "[", 
         RowBox[{
          FractionBox["1", "2"], "+", "nn"}], "]"}], "/", 
        SqrtBox["\[Pi]"]}]}]}]}], 
    RowBox[{"(*", 
     RowBox[{"/.", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         SqrtBox["\[Pi]"], " ", "\[Rule]", " ", 
         SuperscriptBox["sqrPiInv", 
          RowBox[{"-", "1"}]]}], ",", " ", 
        RowBox[{"\[Pi]", " ", "\[Rule]", " ", 
         SuperscriptBox["sqrPiInv", 
          RowBox[{"-", "2"}]]}]}], "}"}]}], "*)"}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
     RowBox[{
      SuperscriptBox["a", 
       RowBox[{"2", "nn"}]], 
      RowBox[{"Exp", "[", 
       RowBox[{"-", 
        FractionBox[
         SuperscriptBox["a", "2"], "4"]}], "]"}], 
      RowBox[{"\[DifferentialD]", "a"}]}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"IntGauss2", "[", "nn_", "]"}], ":=", 
      RowBox[{
       RowBox[{"IntGauss2", "[", "nn", "]"}], "=", 
       RowBox[{
        SuperscriptBox["sqrPiInv", 
         RowBox[{"-", "1"}]], 
        FractionBox[
         SuperscriptBox["2", 
          RowBox[{"nn", "+", 
           RowBox[{"1", "/", "2"}]}]], "2"], 
        RowBox[{
         RowBox[{"Gamma", "[", 
          RowBox[{
           FractionBox["1", "2"], "+", "nn"}], "]"}], "/", 
         SqrtBox["\[Pi]"]}]}]}]}], 
     RowBox[{"(*", 
      RowBox[{"/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          SqrtBox["\[Pi]"], " ", "\[Rule]", " ", 
          SuperscriptBox["sqrPiInv", 
           RowBox[{"-", "1"}]]}], ",", " ", 
         RowBox[{"\[Pi]", " ", "\[Rule]", " ", 
          SuperscriptBox["sqrPiInv", 
           RowBox[{"-", "2"}]]}]}], "}"}]}], "*)"}], ";"}], 
    RowBox[{"(*", 
     RowBox[{
      SqrtBox[
       FractionBox["\[Pi]", "2"]], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "nn"}], "-", "1"}], ")"}], "!!"}]}], "*)"}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
     RowBox[{
      SuperscriptBox["a", 
       RowBox[{"2", "nn"}]], 
      RowBox[{"Exp", "[", 
       RowBox[{"-", 
        FractionBox[
         SuperscriptBox["a", "2"], "2"]}], "]"}], 
      RowBox[{"\[DifferentialD]", "a"}]}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"IntGauss1", "[", "nn_", "]"}], ":=", 
     RowBox[{
      RowBox[{"IntGauss1", "[", "nn", "]"}], "=", 
      RowBox[{
       SuperscriptBox["sqrPiInv", 
        RowBox[{"-", "1"}]], 
       FractionBox["1", "2"], 
       RowBox[{
        RowBox[{"Gamma", "[", 
         RowBox[{
          FractionBox["1", "2"], "+", "nn"}], "]"}], "/", 
        SqrtBox["\[Pi]"]}]}]}]}], 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"/.", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          SqrtBox["\[Pi]"], " ", "\[Rule]", " ", 
          SuperscriptBox["sqrPiInv", 
           RowBox[{"-", "1"}]]}], ",", " ", 
         RowBox[{"\[Pi]", " ", "\[Rule]", " ", 
          SuperscriptBox["sqrPiInv", 
           RowBox[{"-", "2"}]]}]}], "}"}]}], ";"}], 
     RowBox[{"(*", 
      FractionBox[
       RowBox[{
        SqrtBox["\[Pi]"], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "nn"}], "-", "1"}], ")"}], "!!"}]}], 
       SuperscriptBox["2", 
        RowBox[{"nn", "+", "1"}]]], "*)"}], "*)"}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
     RowBox[{
      SuperscriptBox["a", 
       RowBox[{"2", "nn"}]], 
      RowBox[{"Exp", "[", 
       RowBox[{"-", 
        SuperscriptBox["a", "2"]}], "]"}], 
      RowBox[{"\[DifferentialD]", "a"}]}]}], " ", "*)"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.785899154955062*^9, 3.785899158583635*^9}, {
   3.7861648664909973`*^9, 3.786164892476121*^9}, {3.78723178386756*^9, 
   3.787231786052273*^9}, {3.787564968949732*^9, 3.787564986550054*^9}, {
   3.79049179058384*^9, 3.790491791204987*^9}, {3.815997951920637*^9, 
   3.815998009002804*^9}, {3.815998049246063*^9, 3.8159980534376583`*^9}, 
   3.815998358300851*^9, {3.815998423981488*^9, 3.815998464673053*^9}, {
   3.8245492649441624`*^9, 3.8245492861338863`*^9}, {3.8248309601556597`*^9, 
   3.824831006715267*^9}, {3.8248376609331713`*^9, 3.8248376951799755`*^9}, {
   3.825003696502553*^9, 3.825003700222129*^9}, {3.8250055622282677`*^9, 
   3.825005615726729*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"53b21f00-5f0e-4919-b174-b5835e8d8ea5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Psi]ProjA", "[", 
    RowBox[{"Cx_", ",", "Cy_", ",", "Cz_", ",", "n_", ",", "l_", ",", "a_"}], 
    "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"p", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         SuperscriptBox["Cx", "2"], "+", 
         SuperscriptBox["Cy", "2"], "+", 
         SuperscriptBox["Cz", "2"]}], "2"], ",", "a", ",", "n"}], "]"}], 
     RowBox[{
      RowBox[{"Ypolynom", "\[LeftDoubleBracket]", 
       RowBox[{"n", "+", "1"}], "\[RightDoubleBracket]"}], 
      "\[LeftDoubleBracket]", 
      RowBox[{"n", "+", "l", "+", "1"}], "\[RightDoubleBracket]"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x1", "\[Rule]", "Cx"}], ",", 
      RowBox[{"y1", "\[Rule]", "Cy"}], ",", 
      RowBox[{"z1", "\[Rule]", "Cz"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Psi]ExpA", "[", 
     RowBox[{
     "Cx_", ",", "Cy_", ",", "Cz_", ",", "n_", ",", "l_", ",", "a_", ",", 
      "\[Alpha]_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"\[Alpha]", " ", 
      RowBox[{"p", "[", 
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox["Cx", "2"], "+", 
          SuperscriptBox["Cy", "2"], "+", 
          SuperscriptBox["Cz", "2"]}], "2"], ",", "a", ",", "n"}], "]"}], 
      RowBox[{
       RowBox[{"Ypolynom", "\[LeftDoubleBracket]", 
        RowBox[{"n", "+", "1"}], "\[RightDoubleBracket]"}], 
       "\[LeftDoubleBracket]", 
       RowBox[{"n", "+", "l", "+", "1"}], "\[RightDoubleBracket]"}]}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x1", "\[Rule]", "Cx"}], ",", 
       RowBox[{"y1", "\[Rule]", "Cy"}], ",", 
       RowBox[{"z1", "\[Rule]", "Cz"}]}], "}"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.786177122588923*^9, 3.7861771235984335`*^9}, {
   3.7862492329861603`*^9, 3.786249375385192*^9}, {3.786249753366849*^9, 
   3.786249760654994*^9}, {3.7862498154214044`*^9, 3.786249819662618*^9}, {
   3.786291394066052*^9, 3.786291396121424*^9}, 3.787238897095588*^9, {
   3.791042521520142*^9, 3.791042530401226*^9}, {3.7910426972469387`*^9, 
   3.79104269908977*^9}, {3.791042800381267*^9, 3.791042858491262*^9}, {
   3.791042905672224*^9, 3.791042964196725*^9}, {3.791300869692273*^9, 
   3.7913009065358477`*^9}, {3.791301106256091*^9, 3.79130111926307*^9}, {
   3.791902765801796*^9, 3.791902816792501*^9}, {3.792305906340722*^9, 
   3.792305927329207*^9}, 3.792306406139915*^9, {3.793618582340053*^9, 
   3.793618590721371*^9}, {3.807984260070446*^9, 3.807984273100557*^9}, {
   3.821987523686367*^9, 3.821987524572092*^9}, {3.909038784882968*^9, 
   3.909038832867179*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"f05ab810-55d2-465e-b603-fd640be55ea4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Psi]ProjA", "[", 
  RowBox[{"Cx", ",", "Cy", ",", "Cz", ",", "4", ",", "3", ",", "2"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9169998491053877`*^9, 3.916999859433094*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"ba0b5fe7-c6c6-4297-ad18-6f208f5ef162"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["Cx", "3"]}], " ", "Cz"}], "+", 
    RowBox[{"3", " ", "Cx", " ", 
     SuperscriptBox["Cy", "2"], " ", "Cz"}]}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{
    FractionBox["143", "4"], "-", 
    RowBox[{
     FractionBox["13", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["Cx", "2"], "+", 
       SuperscriptBox["Cy", "2"], "+", 
       SuperscriptBox["Cz", "2"]}], ")"}]}], "+", 
    RowBox[{
     FractionBox["1", "4"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["Cx", "2"], "+", 
        SuperscriptBox["Cy", "2"], "+", 
        SuperscriptBox["Cz", "2"]}], ")"}], "2"]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.91699986039859*^9, 3.91700513289629*^9, 
  3.918532788257589*^9, 3.9189037862372646`*^9, 3.9200040282730694`*^9, 
  3.9201346485355377`*^9, 3.920541847151787*^9, 3.92054196514102*^9, 
  3.920719752784966*^9, 3.921390732663045*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"7d0405b8-cf63-437c-8296-899898b50e59"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Norm\[Psi]A", "[", 
     RowBox[{"n", ",", "l", ",", "a"}], "]"}], ":=", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"a", "!"}], 
       RowBox[{"Gamma", "[", 
        RowBox[{"n", "+", "a", "+", 
         RowBox[{"3", "/", "2"}]}], "]"}]}], 
      RowBox[{"Gamma", "[", 
       RowBox[{"n", "+", 
        RowBox[{"3", "/", "2"}]}], "]"}]], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"NormFactor", "\[LeftDoubleBracket]", 
         RowBox[{"n", "+", "1"}], "\[RightDoubleBracket]"}], 
        "\[LeftDoubleBracket]", 
        RowBox[{"n", "+", "1", "+", "l"}], "\[RightDoubleBracket]"}], ")"}], 
      "2"]}]}], "*)"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"deg", "\[Equal]", "0"}], ",", " ", 
       RowBox[{"NormAIDX0", "\[LeftDoubleBracket]", 
        RowBox[{"a", "+", "1"}], "\[RightDoubleBracket]"}], ",", " ", "1"}], 
      "]"}], " ", 
     RowBox[{"NormFactor", "\[LeftDoubleBracket]", 
      RowBox[{"deg", "+", "1"}], "\[RightDoubleBracket]"}]}], ";"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{
  3.619842294817966*^9, {3.786540656342409*^9, 3.786540661579132*^9}, {
   3.787238739979803*^9, 3.787238742751802*^9}, {3.7919029705941877`*^9, 
   3.791903002973413*^9}, {3.792155085772895*^9, 3.792155142676368*^9}, {
   3.792155191502366*^9, 3.792155221102366*^9}, {3.792155511237237*^9, 
   3.7921555118870497`*^9}, {3.792231364313463*^9, 3.792231369999456*^9}, 
   3.792306385107563*^9, {3.801491286807678*^9, 3.801491308363549*^9}, {
   3.801491356817703*^9, 3.8014913904636307`*^9}, 3.801491532119604*^9, {
   3.801493419260531*^9, 3.8014934522577744`*^9}, {3.8048367856716776`*^9, 
   3.804836787597382*^9}, {3.821987533802416*^9, 3.8219875347084465`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"c117a07e-0ab8-4392-9a20-929ad3c7943b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Apparently", ",", " ", 
    RowBox[{
    "calling", " ", "a", " ", "function", " ", "alone", " ", "takes", " ", 
     "up", " ", "a", " ", "lot", " ", "of", " ", 
     RowBox[{"time", " ", "[", 
      RowBox[{"see", " ", "below"}], "]"}]}], ",", " ", "therefore", ",", " ", 
    RowBox[{"for", " ", 
     RowBox[{"Andrea", "'"}], "s", " ", "basis", " ", "we", " ", "shall", " ",
      "from", " ", "now", " ", "on", " ", "use", " ", "\[Psi]PA", " ", "and", 
     " ", 
     RowBox[{"\[Psi]EA", ".", " ", "These"}], " ", "Basis", " ", "functions", 
     " ", "are", " ", "already", " ", "streamlined", " ", "and", " ", "need", 
     " ", "to", " ", "be", " ", "multiplied", " ", "by", " ", 
     FractionBox[
      RowBox[{"\[Psi]Factor", "[", 
       RowBox[{"n", ",", "l", ",", "a"}], "]"}], 
      SqrtBox[
       RowBox[{"Norm\[Psi]A", "[", 
        RowBox[{"a", ",", "n"}], "]"}]]], " ", "to", " ", "be", " ", 
     "normalized"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"NNMAX", " ", "=", " ", "20"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Do", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\[Psi]PA", "[", 
            RowBox[{
            "Cx_", ",", "Cy_", ",", "Cz_", ",", "n", ",", "l", ",", "a"}], 
            "]"}], "=", 
           RowBox[{"Expand", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"p", "[", 
               RowBox[{
                FractionBox[
                 RowBox[{
                  SuperscriptBox["Cx", "2"], "+", 
                  SuperscriptBox["Cy", "2"], "+", 
                  SuperscriptBox["Cz", "2"]}], "2"], ",", "a", ",", "n"}], 
               "]"}], 
              RowBox[{
               RowBox[{"Ypolynom", "\[LeftDoubleBracket]", 
                RowBox[{"n", "+", "1"}], "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", 
               RowBox[{"n", "+", "l", "+", "1"}], "\[RightDoubleBracket]"}]}],
              "/.", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"x1", "\[Rule]", "Cx"}], ",", 
               RowBox[{"y1", "\[Rule]", "Cy"}], ",", 
               RowBox[{"z1", "\[Rule]", "Cz"}]}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"\[Psi]EA", "[", 
            RowBox[{
            "Cx_", ",", "Cy_", ",", "Cz_", ",", "n", ",", "l", ",", "a", ",", 
             "\[Alpha]_"}], "]"}], "=", 
           RowBox[{"Expand", "[", 
            RowBox[{
             RowBox[{"\[Alpha]", " ", 
              RowBox[{"p", "[", 
               RowBox[{
                FractionBox[
                 RowBox[{
                  SuperscriptBox["Cx", "2"], "+", 
                  SuperscriptBox["Cy", "2"], "+", 
                  SuperscriptBox["Cz", "2"]}], "2"], ",", "a", ",", "n"}], 
               "]"}], 
              RowBox[{
               RowBox[{"Ypolynom", "\[LeftDoubleBracket]", 
                RowBox[{"n", "+", "1"}], "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", 
               RowBox[{"n", "+", "l", "+", "1"}], "\[RightDoubleBracket]"}]}],
              "/.", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"x1", "\[Rule]", "Cx"}], ",", 
               RowBox[{"y1", "\[Rule]", "Cy"}], ",", 
               RowBox[{"z1", "\[Rule]", "Cz"}]}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"\[Psi]Factor", "[", 
            RowBox[{"n", ",", "l"}], "]"}], " ", "=", " ", 
           RowBox[{
            RowBox[{"NormFactor", "\[LeftDoubleBracket]", 
             RowBox[{"n", "+", "1"}], "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", 
            RowBox[{"n", "+", "1", "+", "l"}], "\[RightDoubleBracket]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Norm\[Psi]A", "[", 
            RowBox[{"a", ",", "n"}], "]"}], "=", 
           FractionBox[
            RowBox[{
             RowBox[{"a", "!"}], 
             RowBox[{"Gamma", "[", 
              RowBox[{"n", "+", "a", "+", 
               RowBox[{"3", "/", "2"}]}], "]"}]}], 
            RowBox[{"Gamma", "[", 
             RowBox[{"n", "+", 
              RowBox[{"3", "/", "2"}]}], "]"}]]}], ";"}], 
         "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"a", ",", "0", ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"NNMAX", "-", "n"}], ")"}], "/", "2"}]}], "}"}]}], "]"}],
        "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"l", ",", 
         RowBox[{"-", "n"}], ",", "n"}], "}"}]}], "]"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", "NNMAX"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.801483781358558*^9, 3.801483861061363*^9}, {
   3.801483892266141*^9, 3.801484046177003*^9}, {3.8014840998496323`*^9, 
   3.801484101849668*^9}, {3.801491568949215*^9, 3.801491580251293*^9}, {
   3.8014916741950665`*^9, 3.801491703597096*^9}, {3.80149217005377*^9, 
   3.801492171929135*^9}, 3.80149307131983*^9, {3.8014932889821844`*^9, 
   3.8014932895965414`*^9}, {3.801493349000366*^9, 3.801493351914562*^9}, {
   3.801493461388981*^9, 3.801493463849347*^9}, {3.801494152695257*^9, 
   3.8014941653367057`*^9}, {3.801494322068739*^9, 3.8014943225194855`*^9}, 
   3.8281795281924686`*^9, {3.90903883978197*^9, 3.909038848996833*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"b45c4542-1141-49df-9886-4f1a4cb7942a"],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"2", "!"}], " ", 
   RowBox[{"Gamma", "[", 
    RowBox[{"0", "+", "2", "+", 
     RowBox[{"3", "/", "2"}]}], "]"}]}], 
  RowBox[{"Gamma", "[", 
   RowBox[{"0", "+", 
    RowBox[{"3", "/", "2"}]}], "]"}]]], "Input",
 CellChangeTimes->{{3.8248398702291875`*^9, 3.824839892340123*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"ad6a48d7-886c-473d-beef-abaec61a9c78"],

Cell[BoxData[
 FractionBox["15", "2"]], "Output",
 CellChangeTimes->{{3.8248398783137035`*^9, 3.824839893026379*^9}, 
   3.825004883339221*^9, 3.825005236954102*^9, 3.828178686947466*^9, 
   3.828431135821845*^9, 3.828454160721645*^9, 3.828454321057457*^9, 
   3.832081051374395*^9, 3.838373304814853*^9, 3.847194711119281*^9, 
   3.847256212829567*^9, 3.849172216924398*^9, 3.8605570919884424`*^9, 
   3.869902870214288*^9, 3.869903214776206*^9, 3.880717027813957*^9, 
   3.909038654984126*^9, 3.909038863972106*^9, 3.909682334713388*^9, 
   3.91008319086831*^9, 3.91028806366545*^9, 3.910288508843001*^9, 
   3.910298559701144*^9, 3.913718139849747*^9, 3.91381458181469*^9, 
   3.915010777700225*^9, 3.9151118191274195`*^9, 3.915173370626628*^9, 
   3.9169979210909357`*^9, 3.917005138146185*^9, 3.918532794827716*^9, 
   3.918903792754258*^9, 3.920004036220605*^9, 3.920134654261606*^9, 
   3.920541849574918*^9, 3.920541967603084*^9, 3.920719755815836*^9, 
   3.921390735612173*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"df16bad4-c4e6-4bdb-9b48-c2a7d294496c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Psi]PA", "[", 
  RowBox[{"x", ",", "y", ",", "z", ",", "0", ",", "0", ",", "1"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.918895796762452*^9, 3.918895809585159*^9}, {
  3.9188961562994823`*^9, 3.918896157355615*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"6bcb7cf7-6153-469f-951e-3d246e0f6a09"],

Cell[BoxData[
 RowBox[{
  FractionBox["3", "2"], "-", 
  FractionBox[
   SuperscriptBox["x", "2"], "2"], "-", 
  FractionBox[
   SuperscriptBox["y", "2"], "2"], "-", 
  FractionBox[
   SuperscriptBox["z", "2"], "2"]}]], "Output",
 CellChangeTimes->{3.918895810737337*^9, 3.918896158038349*^9, 
  3.918903792875248*^9, 3.9200040363631105`*^9, 3.920134654365739*^9, 
  3.920541849578954*^9, 3.920541967615329*^9, 3.920719755820627*^9, 
  3.9213907356161137`*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"e7e22e11-c2ad-4f17-a07b-124bb4af3785"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Psi]Factor", "[", 
   RowBox[{"1", ",", "1"}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"Norm\[Psi]A", "[", 
  RowBox[{"0", ",", "1"}], "]"}]}], "Input",
 CellChangeTimes->{{3.918895907639051*^9, 3.918895928995702*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"04d2285d-772b-44b0-bb8b-c12ab1f7cb6d"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.918895922298359*^9, 3.918895929822094*^9}, 
   3.918903793006363*^9, 3.920004036515062*^9, 3.920134654468093*^9, 
   3.920541849582767*^9, 3.920541967619232*^9, 3.9207197558274813`*^9, 
   3.921390735633931*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"52fe41f7-0b12-431b-85e8-3f5c450bc165"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.918895922298359*^9, 3.918895929822094*^9}, 
   3.918903793006363*^9, 3.920004036515062*^9, 3.920134654468093*^9, 
   3.920541849582767*^9, 3.920541967619232*^9, 3.9207197558274813`*^9, 
   3.921390735634448*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"fa74c20f-84a8-4b8a-a6b7-6de5f21ab5fd"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Psi]NormalizedA", "[", 
   RowBox[{"Cx_", ",", "Cy_", ",", "Cz_", ",", "n_", ",", "l_", ",", "a_"}], 
   "]"}], ":=", 
  RowBox[{
   RowBox[{"\[Psi]Factor", "[", 
    RowBox[{"n", ",", "l"}], "]"}], " ", 
   RowBox[{
    RowBox[{"\[Psi]PA", "[", 
     RowBox[{"Cx", ",", "Cy", ",", "Cz", ",", "n", ",", "l", ",", "a"}], 
     "]"}], "/", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"Norm\[Psi]A", "[", 
      RowBox[{"a", ",", "n"}], "]"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.918904897246618*^9, 3.918904923621237*^9}, {
  3.918904955881269*^9, 3.918904978438492*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"d7e19fa9-852e-4011-9504-8279f371d3b1"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Define general index maps ",
 Cell[BoxData[
  ButtonBox["\<\"Run Section\"\>",
   Appearance->Automatic,
   ButtonFunction:>(SelectionMove[
      EvaluationCell[], All, CellGroup]; FrontEndExecute[
      FrontEndToken["EvaluateCells"]]),
   Evaluator->Automatic,
   Method->"Preemptive"]], "Output",
  CellChangeTimes->{3.78223244855991*^9},ExpressionUUID->
  "44ff7e7f-cd69-4348-81ba-08c08551b7a2"]
}], "Section",
 CellChangeTimes->{{3.785819478459926*^9, 3.785819486355302*^9}, {
   3.786263559175673*^9, 3.786263565701863*^9}, {3.78629094045198*^9, 
   3.7862909494401045`*^9}, {3.787565852815752*^9, 3.787565853691145*^9}, {
   3.787565901809243*^9, 3.787565904077835*^9}, {3.787745009027326*^9, 
   3.787745025348254*^9}, {3.806405148350213*^9, 3.806405183834861*^9}, {
   3.815213094887334*^9, 3.815213115800107*^9}, {3.816076110274097*^9, 
   3.816076110941307*^9}, {3.822677700307963*^9, 3.8226777162539253`*^9}, 
   3.822677748290924*^9},ExpressionUUID->"ff575391-6d66-415c-8b34-\
30636ec75051"],

Cell[CellGroupData[{

Cell["\<\
The Theory will be a vector like {2,1,1,0,0}, giving for each entry the \
maximal a\
\>", "Subsubsection",
 CellChangeTimes->{{3.782232012882856*^9, 3.7822320189148817`*^9}, {
  3.7894294422251472`*^9, 3.789429452489951*^9}, {3.789754600128097*^9, 
  3.789754635670063*^9}, {3.789755022266953*^9, 3.789755029146384*^9}, {
  3.789755737145752*^9, 3.789755747900772*^9}, {3.7898894273517437`*^9, 
  3.789889436703219*^9}, {3.789976129257703*^9, 3.789976137447473*^9}, {
  3.791111171191302*^9, 3.791111181402476*^9}, {3.791118135170786*^9, 
  3.7911181787405047`*^9}, {3.797685457451344*^9, 3.7976854608622155`*^9}, {
  3.800777161996907*^9, 
  3.800777163184784*^9}},ExpressionUUID->"fce93876-ca66-4d8e-b781-\
36792e9888e1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"generateGetIDX", "[", "theory_", "]"}], " ", ":=", " ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"NN", "=", "0"}], ",", 
       RowBox[{"idx", "=", "0"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Do", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"Do", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"getIDX", "[", 
                 RowBox[{"NN", ",", "a", ",", "l"}], "]"}], " ", "=", " ", 
                "idx"}], ";", "\[IndentingNewLine]", 
               RowBox[{"idx", "=", 
                RowBox[{"idx", "+", "1"}]}], ";"}], "\[IndentingNewLine]", 
              ",", 
              RowBox[{"{", 
               RowBox[{"l", ",", 
                RowBox[{"-", "NN"}], ",", "NN"}], "}"}]}], "]"}], ";"}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"a", ",", "0", ",", "amax"}], "}"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"NN", "=", 
          RowBox[{"NN", "+", "1"}]}], ";"}], "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"amax", ",", "theory"}], "}"}]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"generateGetIDXfull10", "[", "]"}], " ", ":=", " ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"NN", "=", "0"}], ",", 
       RowBox[{"idx", "=", "0"}], ",", 
       RowBox[{"theory", "=", 
        RowBox[{"{", 
         RowBox[{
         "10", ",", "9", ",", "9", ",", "8", ",", "8", ",", "7", ",", "7", 
          ",", "6", ",", "6", ",", "5", ",", "5", ",", "4", ",", "4", ",", 
          "3", ",", "3", ",", "2", ",", "2", ",", "1", ",", "1", ",", "0", 
          ",", "0"}], "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Do", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"Do", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"getIDXfull10", "[", 
                 RowBox[{"NN", ",", "a", ",", "l"}], "]"}], " ", "=", " ", 
                "idx"}], ";", "\[IndentingNewLine]", 
               RowBox[{"idx", "=", 
                RowBox[{"idx", "+", "1"}]}], ";"}], "\[IndentingNewLine]", 
              ",", 
              RowBox[{"{", 
               RowBox[{"l", ",", 
                RowBox[{"-", "NN"}], ",", "NN"}], "}"}]}], "]"}], ";"}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"a", ",", "0", ",", "amax"}], "}"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"NN", "=", 
          RowBox[{"NN", "+", "1"}]}], ";"}], "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"amax", ",", "theory"}], "}"}]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"generateGetIDXfull10", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"generateReferenceMapToFull10", "[", "theory_", "]"}], " ", ":=", 
   " ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"NN", "=", "0"}], ",", 
       RowBox[{"idx", "=", "0"}]}], "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Clear", "[", "getReferenceToFull10", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Do", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"Do", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"getReferenceToFull10", "[", "idx", "]"}], " ", "=", 
                " ", 
                RowBox[{"getIDXfull10", "[", 
                 RowBox[{"NN", ",", "a", ",", "l"}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"idx", "=", 
                RowBox[{"idx", "+", "1"}]}], ";"}], "\[IndentingNewLine]", 
              ",", 
              RowBox[{"{", 
               RowBox[{"l", ",", 
                RowBox[{"-", "NN"}], ",", "NN"}], "}"}]}], "]"}], ";"}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"a", ",", "0", ",", "amax"}], "}"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"NN", "=", 
          RowBox[{"NN", "+", "1"}]}], ";"}], "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"amax", ",", "theory"}], "}"}]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"generateIDXset", "[", "theory_", "]"}], " ", ":=", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NN", "=", "0"}], ",", 
        RowBox[{"idx", "=", "0"}], ",", " ", 
        RowBox[{"IDXset", "=", 
         RowBox[{"{", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Clear", "[", "getIDX", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"generateGetIDX", "[", "theory", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"Do", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"Do", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"AppendTo", "[", 
                 RowBox[{"IDXset", ",", 
                  RowBox[{"{", 
                   RowBox[{"NN", ",", "a", ",", "l"}], "}"}]}], "]"}], ";"}], 
               "\[IndentingNewLine]", ",", 
               RowBox[{"{", 
                RowBox[{"l", ",", 
                 RowBox[{"-", "NN"}], ",", "NN"}], "}"}]}], "]"}], ";"}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"a", ",", "0", ",", "amax"}], "}"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"NN", "=", 
           RowBox[{"NN", "+", "1"}]}], ";"}], "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"amax", ",", "theory"}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", "IDXset"}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"theory", "\[LeftDoubleBracket]", "n", "\[RightDoubleBracket]"}],
      " ", "=", " ", 
     RowBox[{"amax", "[", "n", "]"}]}], ",", " ", 
    RowBox[{
     RowBox[{"Length", "[", "theory", "]"}], " ", "=", " ", "NMAX"}], ",", 
    " ", 
    RowBox[{
     RowBox[{"Max", "[", "theory", "]"}], "=", "AMAX"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"e", ".", "g", ".", " ", "theory"}], " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"3", ",", "3", ",", "2", ",", "2", ",", "1"}], "}"}]}], ";"}], 
   " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "From", " ", "the", " ", "chosen", " ", "theory", " ", "get", " ", "all", 
    " ", "combinations", " ", "that", " ", "contribute", " ", "to", " ", 
    "the", " ", "full", " ", "sum", 
    RowBox[{
     SubsuperscriptBox["\[Sum]", 
      RowBox[{"b", "=", "0"}], "AMAX"], " ", 
     RowBox[{
      SubsuperscriptBox["\[Sum]", 
       RowBox[{"c", "=", "0"}], "AMAX"], " ", 
      RowBox[{
       SubsuperscriptBox["\[Sum]", 
        RowBox[{"n1", "=", "0"}], "NMAX"], " ", 
       RowBox[{
        SubsuperscriptBox["\[Sum]", 
         RowBox[{"n2", "=", "0"}], "NMAX"], " ", 
        RowBox[{"for", " ", "each", " ", "tuple", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", ",", "a"}], ")"}], "."}]}]}]}]}]}]}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.791111152012912*^9, 3.791111155691098*^9}, {
   3.7911111999198017`*^9, 3.7911113253507833`*^9}, {3.791111669095378*^9, 
   3.791111676311426*^9}, {3.791111739833006*^9, 3.791111818159302*^9}, {
   3.791111891161269*^9, 3.791111979279878*^9}, {3.791112041092432*^9, 
   3.7911121272531557`*^9}, {3.791112804859998*^9, 3.791112813321915*^9}, {
   3.791113625652362*^9, 3.791113636626644*^9}, {3.791118115073872*^9, 
   3.7911181213198338`*^9}, {3.791118188233492*^9, 3.79111818898402*^9}, 
   3.791198045026047*^9, {3.7924888821027308`*^9, 3.7924889420368*^9}, {
   3.792488994812839*^9, 3.792489021598979*^9}, {3.792489160096096*^9, 
   3.7924891678827457`*^9}, {3.847214968312122*^9, 3.847214979231797*^9}, {
   3.8472150124775686`*^9, 3.847215100469116*^9}, {3.8472151794569983`*^9, 
   3.8472152753621883`*^9}, 3.8472153217083187`*^9},
 CellLabel->"In[29]:=",ExpressionUUID->"6f32c501-a4e8-4fbb-a4b0-b16a5e79c07e"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Test Normalization of chosen Scalar product ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"<", "p"}], ",", 
    RowBox[{
     RowBox[{"q", ">"}], " ", ":=", 
     OverscriptBox[
      RowBox[{"Sqrt", "[", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"2", "\[Pi]"}], ")"}], "3"], "]"}], "1"]}]}], 
   TraditionalForm]],ExpressionUUID->"bbd9011c-38c0-4431-9910-1caa188922a1"],
 "\[Integral] p[v] q[v] ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["e", 
    RowBox[{"-", 
     RowBox[{"c", "^", "2"}]}]], TraditionalForm]],ExpressionUUID->
  "ee7f4c00-2073-4e65-98e4-a05699ab4c93"],
 "\[DifferentialD]v ",
 Cell[BoxData[
  ButtonBox["\<\"Run Section\"\>",
   Appearance->Automatic,
   ButtonFunction:>(SelectionMove[
      EvaluationCell[], All, CellGroup]; FrontEndExecute[
      FrontEndToken["EvaluateCells"]]),
   Evaluator->Automatic,
   Method->"Preemptive"]], "Output",
  CellChangeTimes->{3.78223244855991*^9},ExpressionUUID->
  "f4fbac7d-5e6e-4f63-87f6-df8d6de1b5fe"]
}], "Section",
 InitializationCell->True,
 CellChangeTimes->{{3.7632694779966516`*^9, 3.763269481816036*^9}, {
   3.780297895318678*^9, 3.7802978972996616`*^9}, 3.780299790583475*^9, {
   3.782231290819748*^9, 3.782231302758502*^9}, {3.789976001565669*^9, 
   3.789976002655592*^9}, {3.7899760337285547`*^9, 3.789976050003244*^9}, {
   3.79111105574878*^9, 3.791111072244892*^9}, {3.791199115237878*^9, 
   3.791199129058989*^9}, 3.8219981840788407`*^9, {3.828450605806928*^9, 
   3.8284506127609315`*^9}, {3.918901058307112*^9, 3.91890107557518*^9}, {
   3.9189012466681275`*^9, 3.918901405690606*^9}, {3.918904195528728*^9, 
   3.918904223314581*^9}},ExpressionUUID->"b320702a-3074-41f8-a07b-\
3174101f9f90"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Step", " ", "2"}], ":", " ", 
     RowBox[{
     "Copy", " ", "the", " ", "above", " ", "expression", " ", "and", " ", 
      "simplify", " ", "it", " ", "knowing", " ", "that", " ", "a"}]}], ",", 
    "b", ",", 
    RowBox[{
    "c", " ", "will", " ", "be", " ", "zero", " ", "or", " ", "whole", " ", 
     RowBox[{"numbers", ":"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"getMonomialCoefficient", "[", 
     RowBox[{"a_", ",", "b_", ",", "c_"}], "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"EvenQ", "[", "a", "]"}], " ", "&&", " ", 
       RowBox[{"EvenQ", "[", "b", "]"}], " ", "&&", " ", 
       RowBox[{"EvenQ", "[", "c", "]"}]}], ",", 
      FractionBox[
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "6"}], "+", "a", "+", "b", "+", "c"}], ")"}]}]], " ", 
        RowBox[{"(", "2", ")"}], " ", 
        RowBox[{"(", "2", ")"}], " ", 
        RowBox[{"(", "2", ")"}], " ", 
        RowBox[{"Gamma", "[", 
         FractionBox[
          RowBox[{"1", "+", "a"}], "2"], "]"}], " ", 
        RowBox[{"Gamma", "[", 
         FractionBox[
          RowBox[{"1", "+", "b"}], "2"], "]"}], " ", 
        RowBox[{"Gamma", "[", 
         FractionBox[
          RowBox[{"1", "+", "c"}], "2"], "]"}]}], 
       SuperscriptBox["\[Pi]", 
        RowBox[{"3", "/", "2"}]]], ",", "0"}], "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.918901659691388*^9, 3.9189016763215632`*^9}, {
  3.918901708903778*^9, 3.918901786035883*^9}, {3.9189018190085583`*^9, 
  3.9189018467346635`*^9}, {3.91890404507772*^9, 3.918904047076049*^9}, {
  3.918904242574823*^9, 3.918904275281971*^9}, {3.9189044250699563`*^9, 
  3.9189044311343575`*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"d547f2ea-1928-460e-b257-a378759d492b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Step", " ", "3"}], ":", " ", 
     RowBox[{"Define", " ", "a", " ", "function"}]}], ",", " ", 
    RowBox[{
    "that", " ", "uses", " ", "the", " ", "above", " ", "expression", " ", 
     "for", " ", "monomials", " ", "and", " ", "multiplies", " ", "them", " ",
      "with", " ", "a", " ", "fitting", " ", "set", " ", "of", " ", 
     "normalization", " ", 
     RowBox[{"coefficients", ":"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"getBasisproductWeight", "[", 
     RowBox[{"a_", ",", "n_", ",", "l_", ",", "b_", ",", "n1_", ",", "l1_"}], 
     "]"}], ":=", 
    RowBox[{
     RowBox[{"\[Psi]Factor", "[", 
      RowBox[{"n", ",", "l"}], "]"}], 
     RowBox[{"\[Psi]Factor", "[", 
      RowBox[{"n1", ",", "l1"}], "]"}], 
     RowBox[{
      RowBox[{"Total", "[", 
       RowBox[{
        RowBox[{"CoefficientRules", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Psi]PA", "[", 
            RowBox[{
            "vx", ",", "vy", ",", "vz", ",", "n", ",", "l", ",", "a"}], "]"}], 
           RowBox[{"\[Psi]PA", "[", 
            RowBox[{
            "vx", ",", "vy", ",", "vz", ",", "n1", ",", "l1", ",", "b"}], 
            "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"vx", ",", "vy", ",", "vz"}], "}"}]}], "]"}], "/.", " ", 
        RowBox[{
         RowBox[{"Rule", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"aa_", ",", "bb_", ",", "cc_"}], "}"}], ",", "factor_"}], 
          "]"}], " ", "\[RuleDelayed]", "  ", 
         RowBox[{"factor", " ", 
          RowBox[{"getMonomialCoefficient", "[", 
           RowBox[{"aa", ",", "bb", ",", "cc"}], "]"}]}]}]}], "]"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Sqrt", "[", 
         RowBox[{"Norm\[Psi]A", "[", 
          RowBox[{"a", ",", "n"}], "]"}], "]"}], 
        RowBox[{"Sqrt", "[", 
         RowBox[{"Norm\[Psi]A", "[", 
          RowBox[{"b", ",", "n1"}], "]"}], "]"}]}], ")"}]}]}]}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.9189018555702486`*^9, 3.918902038721314*^9}, {
   3.9189021031155367`*^9, 3.918902106448808*^9}, 3.9189039592705784`*^9, {
   3.918904439791716*^9, 3.918904460733127*^9}, {3.918904607111336*^9, 
   3.9189046277193465`*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"3f25d2d7-e68b-4f6f-b2a6-c58b97d4a041"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Determine weights for Initial Distribution (Note: l=0 only, since all other \
cases are 0)  ",
 Cell[BoxData[
  ButtonBox["\<\"Run Section\"\>",
   Appearance->Automatic,
   ButtonFunction:>(SelectionMove[
      EvaluationCell[], All, CellGroup]; FrontEndExecute[
      FrontEndToken["EvaluateCells"]]),
   Evaluator->Automatic,
   Method->"Preemptive"]], "Output",
  CellChangeTimes->{3.78223244855991*^9},ExpressionUUID->
  "46bcc855-81e9-4ef9-8c97-f4e07159ea43"]
}], "Section",
 CellChangeTimes->{{3.619842257633191*^9, 3.619842264441731*^9}, {
  3.619842509238817*^9, 3.619842514084055*^9}, {3.7861761004759855`*^9, 
  3.786176134199703*^9}, {3.787238861446561*^9, 3.787238862833744*^9}, {
  3.79050297118994*^9, 3.790502972114197*^9}, {3.8284493766356387`*^9, 
  3.828449402846883*^9}, {3.828451054069398*^9, 3.828451056807163*^9}, {
  3.8383717734401484`*^9, 3.838371774001643*^9}, {3.909052803619813*^9, 
  3.909052807241439*^9}},ExpressionUUID->"fc631935-8a27-46a4-8f71-\
5821408a536a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"p0", "[", "vz_", "]"}], "=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"vz", "+", "1"}], ")"}], "^", "10"}], " ", ")"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"densitydist", " ", "[", 
      RowBox[{"vx_", ",", "vy_", ",", "vz_"}], "]"}], "=", "  ", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"vx", " ", "-", "3"}], ")"}], "2"], " ", "+", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"vy", "+", "5"}], ")"}], "2"], " ", "+", " ", 
           SuperscriptBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{"vz", "+", "1"}], ")"}], " "}], "2"]}], ")"}]}], "/", 
        "2"}], "]"}], 
      RowBox[{"(", 
       RowBox[{"(", 
        RowBox[{"p0", "[", "vz", "]"}], ")"}], ")"}]}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"densitydist", " ", "[", 
      RowBox[{"vx_", ",", "vy_", ",", "vz_"}], "]"}], "=", 
     RowBox[{"0.0897936", "*", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"vz", " ", "+", " ", "1.22474"}], ",", "2"}], ")"}], 
             "2"], " ", "+", " ", 
            SuperscriptBox["vy", "2"], " ", "+", " ", 
            SuperscriptBox[
             RowBox[{"vx", " "}], "2"]}], ")"}]}], "]"}], "+", " ", 
        RowBox[{"Exp", "[", 
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"vz", " ", "-", " ", "1.22474"}], ",", "2"}], ")"}], 
             "2"], " ", "+", " ", 
            SuperscriptBox["vy", "2"], " ", "+", " ", 
            SuperscriptBox[
             RowBox[{"vx", " "}], "2"]}], ")"}]}], "]"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Rho]0", " ", "=", " ", 
     RowBox[{"Integrate", "[", " ", 
      RowBox[{
       RowBox[{"densitydist", "[", 
        RowBox[{"vx", ",", "vy", ",", "vz"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"vx", ",", 
         RowBox[{"-", "Infinity"}], ",", " ", "Infinity"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"vy", ",", 
         RowBox[{"-", "Infinity"}], ",", " ", "Infinity"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"vz", ",", 
         RowBox[{"-", "Infinity"}], ",", " ", "Infinity"}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vmean", "=", 
     RowBox[{"Integrate", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"{", 
          RowBox[{"vx", ",", "vy", ",", "vz"}], "}"}], ")"}], 
        RowBox[{
         RowBox[{"densitydist", "[", 
          RowBox[{"vx", ",", "vy", ",", "vz"}], "]"}], "/", "\[Rho]0"}]}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"vx", ",", 
         RowBox[{"-", "Infinity"}], ",", " ", "Infinity"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"vy", ",", 
         RowBox[{"-", "Infinity"}], ",", " ", "Infinity"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"vz", ",", 
         RowBox[{"-", "Infinity"}], ",", " ", "Infinity"}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"f0", "[", 
      RowBox[{"vx_", ",", "vy_", ",", "vz_"}], "]"}], " ", "=", " ", 
     RowBox[{
      RowBox[{"densitydist", "[", 
       RowBox[{
        RowBox[{"vx", "+", 
         RowBox[{"vmean", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", 
        RowBox[{"vy", "+", 
         RowBox[{"vmean", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", 
        RowBox[{"vz", "+", 
         RowBox[{"vmean", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}]}], "]"}], "/", 
      RowBox[{"(", "\[Rho]0", ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kk", "=", 
     RowBox[{"Integrate", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"(", " ", 
         RowBox[{
          RowBox[{"1", "/", "3"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["vx", "2"], "+", 
            SuperscriptBox["vy", "2"], "+", 
            SuperscriptBox["vz", "2"]}], ")"}]}], ")"}], 
        RowBox[{"f0", "[", 
         RowBox[{"vx", ",", "vy", ",", "vz"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"vx", ",", 
         RowBox[{"-", "Infinity"}], ",", " ", "Infinity"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"vy", ",", 
         RowBox[{"-", "Infinity"}], ",", " ", "Infinity"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"vz", ",", 
         RowBox[{"-", "Infinity"}], ",", " ", "Infinity"}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ff0", "[", 
      RowBox[{"vx_", ",", "vy_", ",", "vz_"}], "]"}], "=", 
     RowBox[{
      SuperscriptBox["kk", 
       RowBox[{"3", "/", "2"}]], " ", 
      RowBox[{
       RowBox[{"densitydist", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox["kk", 
            RowBox[{"1", "/", "2"}]], " ", 
           RowBox[{"(", "vx", ")"}]}], "+", 
          RowBox[{"vmean", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{
           SuperscriptBox["kk", 
            RowBox[{"1", "/", "2"}]], " ", 
           RowBox[{"(", "vy", ")"}]}], "+", 
          RowBox[{"vmean", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{
           SuperscriptBox["kk", 
            RowBox[{"1", "/", "2"}]], " ", 
           RowBox[{"(", "vz", ")"}]}], "+", 
          RowBox[{"vmean", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}]}], "]"}], "/", "\[Rho]0"}]}]}], 
    ";"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.909134635410757*^9, 3.909134640326226*^9}, 
   3.909135049423489*^9, {3.909135081283708*^9, 3.9091350880924196`*^9}, {
   3.909224427439926*^9, 3.9092244446559095`*^9}, {3.9092245199275093`*^9, 
   3.909224523551257*^9}, {3.9092247337010603`*^9, 3.909224753416008*^9}, {
   3.909224810526659*^9, 3.909224845529717*^9}, {3.909224968723265*^9, 
   3.9092249835634623`*^9}, {3.909225514819577*^9, 3.9092255173633194`*^9}, {
   3.909239232033763*^9, 3.909239263237988*^9}, {3.90923941374088*^9, 
   3.9092394963385344`*^9}, {3.909239785699565*^9, 3.9092397875228605`*^9}, {
   3.9170010748757505`*^9, 3.917001143056775*^9}, {3.917002537655397*^9, 
   3.9170025920217657`*^9}, {3.917002871234514*^9, 3.917002883827044*^9}, {
   3.9170034179577913`*^9, 3.917003533851349*^9}, {3.917003565028609*^9, 
   3.9170035656023016`*^9}, {3.917003920943815*^9, 3.917003938798851*^9}, {
   3.9170040150464697`*^9, 3.917004047210782*^9}, {3.917004190440183*^9, 
   3.917004218916067*^9}, {3.9185328438536263`*^9, 3.91853285309391*^9}, {
   3.9185329151600647`*^9, 3.918532924976689*^9}, 3.92072044176087*^9, {
   3.920720483242519*^9, 3.920720501865775*^9}, {3.921161380001577*^9, 
   3.9211613954560013`*^9}, {3.921164711324176*^9, 3.921164714528133*^9}, {
   3.921392360591851*^9, 3.921392376268342*^9}},
 CellLabel->
  "In[145]:=",ExpressionUUID->"afa61b89-9901-42e6-aa59-1497b7ea0446"],

Cell[CellGroupData[{

Cell[BoxData["vmean"], "Input",
 CellChangeTimes->{{3.917002716212682*^9, 3.917002718141856*^9}},
 CellLabel->
  "In[145]:=",ExpressionUUID->"ea9ed237-4002-49c5-9b71-5fb3351e0e1f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.917002719107245*^9, 3.917002923778528*^9, 
  3.917003614969185*^9, 3.917004125822508*^9, 3.917005226135919*^9, 
  3.920004064462218*^9, 3.920134680378195*^9, 3.920542023128133*^9, 
  3.9207199213306217`*^9, 3.920720511713144*^9, 3.921390873467292*^9, 
  3.921392386641315*^9},
 CellLabel->
  "Out[145]=",ExpressionUUID->"288ee43f-d08a-4d33-a3e5-6ab5d8672e27"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"ff0", "[", 
    RowBox[{"0", ",", "0", ",", "vz"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"vz", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9090542883121214`*^9, 3.909054296555608*^9}, 
   3.909057704217328*^9, {3.909057887777197*^9, 3.909057925467902*^9}, {
   3.909057976200138*^9, 3.909057994907751*^9}, {3.909239303304226*^9, 
   3.90923932317293*^9}, {3.909239803714486*^9, 3.9092398054768515`*^9}, {
   3.917003850254036*^9, 3.91700387964654*^9}, {3.917003955989467*^9, 
   3.9170039785801153`*^9}, 3.917004096507179*^9},
 CellLabel->
  "In[146]:=",ExpressionUUID->"7f39e42d-679f-4c68-8d00-7a7f4a2242aa"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1: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
VZfiDP/v/0+k////p/8D6j9/fA==
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    StyleBox[
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1: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
VZfiDP/v/0+k////p/8D6j9/fA==
              "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{-3, 3}, {0., 0.09001953810116926}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           Plot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, 
          "PlotRange" -> {{-3, 3}, {0., 0.09001953810116926}}, 
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}],
     Selectable->False]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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
VZfiDP/v/0+k////p/8D6j9/fA==
          "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PanelPlotLayout" -> <||>, 
       "PlotRange" -> {{-3, 3}, {0., 0.09001953810116926}}, 
       "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
       "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-3, 3}, {0., 0.09001953810116926}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.909054298039503*^9, {3.909057697961478*^9, 3.909057705210027*^9}, {
   3.9090578611906457`*^9, 3.909057926403144*^9}, {3.90905797721818*^9, 
   3.909057995867742*^9}, 3.909058181044428*^9, 3.909058261012438*^9, 
   3.909058326917162*^9, 3.909128139162285*^9, {3.9091281870081353`*^9, 
   3.909128209519893*^9}, 3.9091282439552393`*^9, 3.909128285103849*^9, 
   3.909128611137305*^9, 3.909128756933609*^9, 3.909129613063007*^9, {
   3.909130789305578*^9, 3.909130839837774*^9}, 3.909131102381779*^9, 
   3.909131161565475*^9, 3.90913163344928*^9, 3.909131752204588*^9, 
   3.909132336618666*^9, 3.909132409899255*^9, {3.909134656160219*^9, 
   3.909134670812721*^9}, 3.9091350941125293`*^9, 3.909231860409453*^9, {
   3.909239307065646*^9, 3.909239324115741*^9}, 3.9092395432703342`*^9, {
   3.909239799055333*^9, 3.909239806603086*^9}, 3.9100833485507746`*^9, 
   3.9102985726907907`*^9, 3.9138145930985575`*^9, 3.9150107827010236`*^9, 
   3.9151118264718485`*^9, 3.915173376782547*^9, 3.917002678545727*^9, {
   3.917003798988372*^9, 3.9170038200341177`*^9}, {3.917003854875344*^9, 
   3.917003880746809*^9}, {3.917003966057471*^9, 3.917003979481061*^9}, 
   3.9170040913726416`*^9, 3.917004128082671*^9, 3.917004279128053*^9, 
   3.9170052291568165`*^9, 3.918532880396061*^9, 3.918532947172974*^9, 
   3.920004065304911*^9, 3.920134680898012*^9, 3.920542023168606*^9, 
   3.92071992136646*^9, 3.920720511776333*^9, 3.921390873515856*^9, 
   3.9213923866776*^9},
 CellLabel->
  "Out[146]=",ExpressionUUID->"9171cd0a-932c-4952-aaca-b10d4dc7582f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"ff0", "[", 
    RowBox[{"0", ",", "vz", ",", "1.5"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"vz", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.909132484470792*^9, 3.909132489365788*^9}, {
  3.909132539930149*^9, 3.909132542136178*^9}, {3.909239331747577*^9, 
  3.909239347839304*^9}, {3.909239811297323*^9, 3.909239813164728*^9}, {
  3.910298641310781*^9, 3.91029864204046*^9}},
 CellLabel->
  "In[147]:=",ExpressionUUID->"102cf5a1-259a-404a-9226-66bd8ab5005d"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1: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
/t/5J+T/zz/9DyrPpB4=
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    StyleBox[
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1: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
/t/5J+T/zz/9DyrPpB4=
              "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{-3, 3}, {0., 0.08329520965221945}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           Plot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, 
          "PlotRange" -> {{-3, 3}, {0., 0.08329520965221945}}, 
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}],
     Selectable->False]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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
/t/5J+T/zz/9DyrPpB4=
          "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PanelPlotLayout" -> <||>, 
       "PlotRange" -> {{-3, 3}, {0., 0.08329520965221945}}, 
       "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
       "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-3, 3}, {0., 0.08329520965221945}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.9091324907843847`*^9, 3.909132543089711*^9, {3.909239340154398*^9, 
   3.909239348876218*^9}, 3.909239547201944*^9, 3.909239814489216*^9, 
   3.910083348866774*^9, 3.91029857284079*^9, 3.9102986435708933`*^9, 
   3.913814593404827*^9, 3.9150107828663096`*^9, 3.915111826584839*^9, 
   3.915173376945718*^9, 3.917004134672757*^9, 3.9170042841815996`*^9, 
   3.9170052334109507`*^9, 3.9185328970863676`*^9, 3.9185329523528457`*^9, 
   3.920004065703643*^9, 3.920134681220047*^9, 3.920542023200069*^9, 
   3.920719921404522*^9, 3.92072051185646*^9, 3.921390873585799*^9, 
   3.921392386750099*^9},
 CellLabel->
  "Out[147]=",ExpressionUUID->"7fd3df0c-b837-4006-8128-c8f2ea407ee9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Integrate", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"(", " ", 
      RowBox[{
       RowBox[{"1", "/", "3"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["vx", "2"], "+", 
         SuperscriptBox["vy", "2"], "+", 
         SuperscriptBox["vz", "2"]}], ")"}]}], ")"}], 
     RowBox[{"ff0", "[", 
      RowBox[{"vx", ",", "vy", ",", "vz"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"vx", ",", 
      RowBox[{"-", "Infinity"}], ",", " ", "Infinity"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"vy", ",", 
      RowBox[{"-", "Infinity"}], ",", " ", "Infinity"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"vz", ",", 
      RowBox[{"-", "Infinity"}], ",", " ", "Infinity"}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.9103008865702457`*^9, 3.91030089923321*^9}},
 CellLabel->
  "In[148]:=",ExpressionUUID->"77259a72-3ea0-49dd-82b6-b6e5c7358f8b"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.9103009006870394`*^9, 3.91381459585233*^9, 
  3.915010784573718*^9, 3.915111828270077*^9, 3.915173378693098*^9, 
  3.917004148802698*^9, 3.917004288814515*^9, 3.9170052415438538`*^9, 
  3.9185328893777366`*^9, 3.918532956884389*^9, 3.920004068288701*^9, 
  3.920134683356684*^9, 3.920542025365534*^9, 3.920719923326398*^9, 
  3.920720513618491*^9, 3.921390875247775*^9, 3.921392388503745*^9},
 CellLabel->
  "Out[148]=",ExpressionUUID->"77c5ca3b-fda8-46d4-b1d6-6175fa13e7f0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Integrate", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"vx", ",", "vy", ",", "vz"}], "}"}], 
     RowBox[{"ff0", "[", 
      RowBox[{"vx", ",", "vy", ",", "vz"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"vx", ",", 
      RowBox[{"-", "Infinity"}], ",", " ", "Infinity"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"vy", ",", 
      RowBox[{"-", "Infinity"}], ",", " ", "Infinity"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"vz", ",", 
      RowBox[{"-", "Infinity"}], ",", " ", "Infinity"}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.918533092012766*^9, 3.918533100952976*^9}},
 CellLabel->
  "In[149]:=",ExpressionUUID->"14a9e679-d170-4ff7-ab0a-375351f64741"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.918533104640674*^9, 3.9200040712892017`*^9, 
  3.920134685780207*^9, 3.920542026637843*^9, 3.920719924571546*^9, 
  3.92072051712833*^9, 3.9213908784948683`*^9, 3.92139239187251*^9},
 CellLabel->
  "Out[149]=",ExpressionUUID->"aec2d558-8409-4a3d-9fdb-6a2f847fc346"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Get projection Rules \[Integral] Psi[v] f[v] \[DifferentialD]v ",
 Cell[BoxData[
  ButtonBox["\<\"Run Section\"\>",
   Appearance->Automatic,
   ButtonFunction:>(SelectionMove[
      EvaluationCell[], All, CellGroup]; FrontEndExecute[
      FrontEndToken["EvaluateCells"]]),
   Evaluator->Automatic,
   Method->"Preemptive"]], "Output",
  CellChangeTimes->{3.78223244855991*^9},ExpressionUUID->
  "d9a78c9c-837c-43f0-adf2-f52acdf70a7a"]
}], "Section",
 CellChangeTimes->{{3.7632694779966516`*^9, 3.763269481816036*^9}, {
   3.780297895318678*^9, 3.7802978972996616`*^9}, 3.780299790583475*^9, {
   3.782231290819748*^9, 3.782231302758502*^9}, {3.789976001565669*^9, 
   3.789976002655592*^9}, {3.7899760337285547`*^9, 3.789976050003244*^9}, {
   3.79111105574878*^9, 3.791111072244892*^9}, {3.791199115237878*^9, 
   3.791199129058989*^9}, 3.82199818407884*^9, {3.828450605806928*^9, 
   3.8284506127609315`*^9}, {3.918901058307112*^9, 3.91890107557518*^9}, {
   3.9189012466681275`*^9, 3.918901282757897*^9}, 
   3.9189013899433107`*^9},ExpressionUUID->"d2d7fb3d-bd7c-48ca-8d94-\
7dbd7ea8c417"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getProjectionCoeff", "[", 
    RowBox[{"a_", ",", "b_", ",", "c_"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"EvenQ", "[", "a", "]"}], " ", "&&", " ", 
      RowBox[{"EvenQ", "[", "b", "]"}], " ", "&&", " ", 
      RowBox[{"EvenQ", "[", "c", "]"}]}], ",", 
     FractionBox[
      RowBox[{
       SuperscriptBox["2", 
        RowBox[{
         FractionBox["1", "2"], "+", 
         FractionBox["a", "2"], "+", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"5", "+", "b", "+", "c"}], ")"}]}]}]], " ", 
       SuperscriptBox["3", 
        RowBox[{
         FractionBox["1", "2"], "+", 
         FractionBox["a", "2"], "+", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "7"}], "+", "b", "+", "c"}], ")"}]}]}]], " ", 
       SuperscriptBox["13", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], "-", 
         FractionBox["a", "2"], "+", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "b", "-", "c"}], ")"}]}]}]], " ", 
       RowBox[{"(", "2", ")"}], " ", 
       RowBox[{"(", "2", ")"}], " ", 
       RowBox[{"Gamma", "[", 
        FractionBox[
         RowBox[{"3", "+", "a"}], "2"], "]"}], " ", 
       RowBox[{"Gamma", "[", 
        FractionBox[
         RowBox[{"1", "+", "b"}], "2"], "]"}], " ", 
       RowBox[{"Gamma", "[", 
        FractionBox[
         RowBox[{"11", "+", "c"}], "2"], "]"}], " ", 
       RowBox[{"(", "2", ")"}]}], 
      RowBox[{"35", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "a"}], ")"}], " ", 
       SuperscriptBox["\[Pi]", 
        RowBox[{"3", "/", "2"}]]}]], ",", "0"}], "]"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{3.917004561437174*^9},
 CellLabel->"In[53]:=",ExpressionUUID->"cd3327d1-bf80-403c-8a3e-c857ce1f9874"],

Cell[BoxData[
 RowBox[{
  RowBox[{"getProjectionWeight", "[", 
   RowBox[{"a_", ",", "n_", ",", "l_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"EvenQ", "[", "n", "]"}], ",", 
    RowBox[{
     RowBox[{"\[Psi]Factor", "[", 
      RowBox[{"n", ",", "l"}], "]"}], 
     RowBox[{
      RowBox[{"Total", "[", 
       RowBox[{
        RowBox[{"CoefficientRules", "[", 
         RowBox[{
          RowBox[{"\[Psi]ProjA", "[", 
           RowBox[{"vx", ",", "vy", ",", "vz", ",", "n", ",", "l", ",", "a"}],
            "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"vx", ",", "vy", ",", "vz"}], "}"}]}], "]"}], "/.", " ", 
        RowBox[{
         RowBox[{"Rule", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"aa_", ",", "bb_", ",", "cc_"}], "}"}], ",", "factor_"}], 
          "]"}], " ", "\[RuleDelayed]", "  ", 
         RowBox[{"factor", " ", 
          RowBox[{"getProjectionCoeff", "[", 
           RowBox[{"aa", ",", "bb", ",", "cc"}], "]"}]}]}]}], "]"}], "/", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"Norm\[Psi]A", "[", 
        RowBox[{"a", ",", "n"}], "]"}], "]"}]}]}], ",", "0"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8284495904879045`*^9, 3.828449612557005*^9}, {
  3.82845209261204*^9, 3.828452107757055*^9}, {3.8284521468471594`*^9, 
  3.8284522001567607`*^9}, {3.828452357042237*^9, 3.828452377148936*^9}, {
  3.828453506023486*^9, 3.828453523784315*^9}, {3.828453889749899*^9, 
  3.82845392133724*^9}, {3.828454393558558*^9, 3.828454394692914*^9}, {
  3.828454479221937*^9, 3.828454510458991*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"191b234b-922a-41d4-8ce1-a8fb1a082088"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Define generation of the text file for the intial f ",
 Cell[BoxData[
  ButtonBox["\<\"Run Section\"\>",
   Appearance->Automatic,
   ButtonFunction:>(SelectionMove[
      EvaluationCell[], All, CellGroup]; FrontEndExecute[
      FrontEndToken["EvaluateCells"]]),
   Evaluator->Automatic,
   Method->"Preemptive"]], "Output",
  CellChangeTimes->{3.78223244855991*^9},ExpressionUUID->
  "22314972-f972-4f88-b561-8a84b0a17e86"]
}], "Section",
 CellChangeTimes->{{3.7632694779966516`*^9, 3.763269481816036*^9}, {
   3.780297895318678*^9, 3.7802978972996616`*^9}, 3.780299790583475*^9, {
   3.782231290819748*^9, 3.782231302758502*^9}, {3.789976001565669*^9, 
   3.789976002655592*^9}, {3.7899760337285547`*^9, 3.789976050003244*^9}, {
   3.79111105574878*^9, 3.791111072244892*^9}, {3.791199115237878*^9, 
   3.791199129058989*^9}, 3.8219981840788407`*^9, {3.828450605806928*^9, 
   3.8284506127609315`*^9}},ExpressionUUID->"98f8be1c-b57f-4c80-9693-\
60a3ef05ced8"],

Cell[CellGroupData[{

Cell["Generate the text file for the intial f", "Subsubsection",
 CellChangeTimes->{{3.782232012882856*^9, 3.7822320189148817`*^9}, {
  3.7894294422251472`*^9, 3.789429452489951*^9}, {3.789754600128097*^9, 
  3.789754635670063*^9}, {3.789755022266953*^9, 3.789755029146384*^9}, {
  3.789755737145752*^9, 3.789755747900772*^9}, {3.7898894273517437`*^9, 
  3.789889436703219*^9}, {3.789976129257703*^9, 3.789976137447473*^9}, {
  3.791111343582466*^9, 3.791111346382479*^9}, {3.791199087489431*^9, 
  3.791199092212901*^9}},ExpressionUUID->"e71b3fe2-c9b0-4fdd-a5f0-\
7ec141906b78"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Pick", " ", "an", " ", "initial", " ", "f", " ", "and", " ", "extract", 
    " ", "the", " ", "coefficients", " ", "for", " ", "Andreas", " ", "Basis",
     " ", "and", " ", "recover", " ", "the", " ", "projected", " ", 
    "function", " ", "from", " ", "the", " ", "coefficients"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"getCoeffsA", "[", "theory_", "]"}], " ", ":=", " ", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "combs", ",", " ", "weights", ",", " ", "a", ",", "n", ",", "l"}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"combs", " ", "=", " ", 
         RowBox[{"generateIDXset", "[", "theory", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"weights", " ", "=", " ", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"0", ",", 
           RowBox[{"Length", "[", "combs", "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"n", " ", "=", " ", 
            RowBox[{
            "comb", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
           ";", 
           RowBox[{"a", " ", "=", " ", 
            RowBox[{
            "comb", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
           ";", 
           RowBox[{"l", " ", "=", " ", 
            RowBox[{
            "comb", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"weights", "\[LeftDoubleBracket]", 
             RowBox[{
              RowBox[{"getIDX", "[", 
               RowBox[{"n", ",", "a", ",", "l"}], "]"}], "+", "1"}], 
             "\[RightDoubleBracket]"}], "=", 
            RowBox[{"getProjectionWeight", "[", 
             RowBox[{"a", ",", "n", ",", "l"}], "]"}]}], ";"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"comb", ",", "combs"}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", "weights"}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"getCoeffsForFileA", "[", "theory_", "]"}], " ", ":=", " ", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "combs", ",", " ", "weights", ",", " ", "a", ",", "n", ",", "l"}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"combs", " ", "=", " ", 
         RowBox[{"generateIDXset", "[", "theory", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"weights", " ", "=", " ", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"0", ",", 
           RowBox[{"Length", "[", "combs", "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"n", " ", "=", " ", 
            RowBox[{
            "comb", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
           ";", 
           RowBox[{"a", " ", "=", " ", 
            RowBox[{
            "comb", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
           ";", 
           RowBox[{"l", " ", "=", " ", 
            RowBox[{
            "comb", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"weights", "\[LeftDoubleBracket]", 
             RowBox[{
              RowBox[{"getIDX", "[", 
               RowBox[{"n", ",", "a", ",", "l"}], "]"}], "+", "1"}], 
             "\[RightDoubleBracket]"}], "=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"n", ",", "a", ",", "l"}], "}"}], ",", 
              RowBox[{"getProjectionWeight", "[", 
               RowBox[{"a", ",", "n", ",", "l"}], "]"}]}], "}"}]}], ";"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"comb", ",", "combs"}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", "weights"}]}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"getInputForFileFromCoeffsA", "[", 
      RowBox[{"theory_", ",", "weights_"}], "]"}], " ", ":=", " ", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "combs", ",", " ", "input", ",", " ", "a", ",", "n", ",", "l"}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"combs", " ", "=", " ", 
         RowBox[{"generateIDXset", "[", "theory", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"input", " ", "=", " ", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"0", ",", 
           RowBox[{"Length", "[", "combs", "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"n", " ", "=", " ", 
            RowBox[{
            "comb", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
           ";", 
           RowBox[{"a", " ", "=", " ", 
            RowBox[{
            "comb", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
           ";", 
           RowBox[{"l", " ", "=", " ", 
            RowBox[{
            "comb", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"input", "\[LeftDoubleBracket]", 
             RowBox[{
              RowBox[{"getIDX", "[", 
               RowBox[{"n", ",", "a", ",", "l"}], "]"}], "+", "1"}], 
             "\[RightDoubleBracket]"}], "=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"n", ",", "a", ",", "l"}], "}"}], ",", 
              RowBox[{"weights", "\[LeftDoubleBracket]", 
               RowBox[{
                RowBox[{"getIDX", "[", 
                 RowBox[{"n", ",", "a", ",", "l"}], "]"}], "+", "1"}], 
               "\[RightDoubleBracket]"}]}], "}"}]}], ";"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"comb", ",", "combs"}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", "input"}]}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"buildFfromCoeffsA", "[", 
      RowBox[{
      "theory_", ",", "weights_", ",", "xx_", ",", "yy_", ",", "zz_", ",", 
       "Cx_", ",", "Cy_", ",", "Cz_"}], " ", "]"}], " ", ":=", " ", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"combs", ",", " ", "a", ",", "n", ",", "l"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"combs", " ", "=", " ", 
         RowBox[{"generateIDXset", "[", "theory", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], " ", ":=", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"weights", "\[LeftDoubleBracket]", 
             RowBox[{
              RowBox[{"getIDX", "[", 
               RowBox[{
                RowBox[{
                "comb", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}], ",", 
                RowBox[{
                "comb", "\[LeftDoubleBracket]", "2", 
                 "\[RightDoubleBracket]"}], ",", 
                RowBox[{
                "comb", "\[LeftDoubleBracket]", "3", 
                 "\[RightDoubleBracket]"}]}], "]"}], "+", "1"}], 
             "\[RightDoubleBracket]"}], 
            RowBox[{"\[Psi]Factor", "[", 
             RowBox[{
              RowBox[{
              "comb", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              ",", 
              RowBox[{
              "comb", "\[LeftDoubleBracket]", "3", 
               "\[RightDoubleBracket]"}]}], "]"}], 
            FractionBox["1", 
             SqrtBox[
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"2", " ", "\[Pi]"}], ")"}], "3"]]], 
            SqrtBox[
             FractionBox["1", 
              RowBox[{" ", 
               RowBox[{"Norm\[Psi]A", "[", 
                RowBox[{
                 RowBox[{
                 "comb", "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{
                 "comb", "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}]}], "]"}]}]]], 
            RowBox[{"\[Psi]ProjA", "[", 
             RowBox[{"x", ",", "y", ",", "z", ",", 
              RowBox[{
              "comb", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              ",", 
              RowBox[{
              "comb", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
              ",", 
              RowBox[{
              "comb", "\[LeftDoubleBracket]", "2", 
               "\[RightDoubleBracket]"}]}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"comb", ",", "combs"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Simplify", "[", 
         RowBox[{
          RowBox[{"f", "[", 
           RowBox[{
            RowBox[{"xx", "-", "Cx"}], ",", 
            RowBox[{"yy", "-", "Cy"}], ",", 
            RowBox[{"zz", "-", "Cz"}]}], "]"}], 
          RowBox[{"Exp", "[", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"xx", "-", "Cx"}], ")"}], "2"], " ", "+", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"yy", "-", "Cy"}], ")"}], "2"], " ", "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"zz", "-", "Cz"}], ")"}], "2"], " "}], "2"]}], 
           "]"}]}], "]"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.79248764315683*^9, 3.792487717118259*^9}, {
   3.792487899307736*^9, 3.792487942361342*^9}, {3.792488197812105*^9, 
   3.792488259304467*^9}, {3.792488306784181*^9, 3.792488323501669*^9}, {
   3.792488591281996*^9, 3.792488759277603*^9}, {3.792489198310378*^9, 
   3.792489245031975*^9}, {3.792489293093035*^9, 3.792489345820257*^9}, {
   3.792489400506679*^9, 3.792489477035879*^9}, {3.792489547501329*^9, 
   3.792489582310923*^9}, {3.792489619080523*^9, 3.792489844018323*^9}, {
   3.792490177479341*^9, 3.792490185021806*^9}, {3.792490501200588*^9, 
   3.792490512372445*^9}, {3.792491023598308*^9, 3.792491063322599*^9}, {
   3.792491106986128*^9, 3.7924911103689404`*^9}, {3.792492780300156*^9, 
   3.792492799515176*^9}, {3.793545219955638*^9, 3.793545223392667*^9}, {
   3.793545758902785*^9, 3.793545761766394*^9}, {3.793545869828284*^9, 
   3.793545909951202*^9}, {3.7935464881946087`*^9, 3.793546496992507*^9}, {
   3.793546560885504*^9, 3.793546561206175*^9}, {3.793546752585251*^9, 
   3.7935467586719*^9}, {3.793546961098002*^9, 3.793547009758381*^9}, {
   3.793547072304697*^9, 3.793547091372148*^9}, {3.793547169692333*^9, 
   3.793547342233162*^9}, {3.793547784909184*^9, 3.7935478038572*^9}, {
   3.793547834777135*^9, 3.793547990681559*^9}, {3.793548031104065*^9, 
   3.793548050890218*^9}, {3.793548161789283*^9, 3.793548186371229*^9}, {
   3.793548222709368*^9, 3.7935482812046022`*^9}, 3.793548343355983*^9, {
   3.793618279197137*^9, 3.793618328574285*^9}, {3.793618377582462*^9, 
   3.7936184187481003`*^9}, {3.793618494676409*^9, 3.793618505554425*^9}, {
   3.7936186253049183`*^9, 3.7936186369810457`*^9}, {3.793620339109416*^9, 
   3.793620388694432*^9}, {3.793622070648525*^9, 3.793622077109415*^9}, {
   3.79362213230544*^9, 3.793622220492735*^9}, {3.793622258210713*^9, 
   3.7936222744956*^9}, 3.79362305071261*^9, {3.793623474175156*^9, 
   3.793623490003729*^9}, {3.793623529289273*^9, 3.793623622099556*^9}, 
   3.793623796545315*^9, {3.793624121668923*^9, 3.793624159790093*^9}, {
   3.793624230254331*^9, 3.793624240762555*^9}, {3.793624383835719*^9, 
   3.793624405739894*^9}, {3.793624451433591*^9, 3.793624554541709*^9}, {
   3.793624599238737*^9, 3.793624604551124*^9}, {3.793984786097134*^9, 
   3.793984842771058*^9}, {3.79398492398615*^9, 3.793984936318605*^9}, {
   3.794577708809482*^9, 3.794577751799024*^9}, {3.794748973032102*^9, 
   3.794749061113229*^9}, {3.794751657600748*^9, 3.794751769174323*^9}, 
   3.794751826482944*^9, {3.794752329530467*^9, 3.7947523382315054`*^9}, {
   3.794752406363028*^9, 3.794752407782328*^9}, {3.7947525759745054`*^9, 
   3.794752591589149*^9}, {3.794752678577387*^9, 3.794752690883381*^9}, 
   3.794752724137594*^9, {3.79475276677096*^9, 3.79475280140472*^9}, {
   3.7947528630484667`*^9, 3.7947529193901367`*^9}, {3.794752968602835*^9, 
   3.794752982661803*^9}, {3.794753025762905*^9, 3.794753096255533*^9}, {
   3.794753208025023*^9, 3.794753213583109*^9}, {3.794753279034611*^9, 
   3.794753281881686*^9}, {3.794753314188245*^9, 3.794753350716492*^9}, 
   3.794753746104816*^9, {3.797680982621173*^9, 3.797680986946291*^9}, {
   3.7976838184058876`*^9, 3.797683932817356*^9}, {3.797684225593319*^9, 
   3.797684225835646*^9}, {3.797685759127687*^9, 3.797685778071779*^9}, {
   3.7976858661677346`*^9, 3.797685901792517*^9}, {3.797687506466734*^9, 
   3.797687507338439*^9}, {3.7976876330241957`*^9, 3.7976876502901897`*^9}, {
   3.797687709583521*^9, 3.797687766597636*^9}, 3.797687898747154*^9, {
   3.7976879332583203`*^9, 3.797687965251313*^9}, {3.797707319632862*^9, 
   3.797707370548753*^9}, {3.797707419731367*^9, 3.79770748435936*^9}, {
   3.797707619122999*^9, 3.797707622493631*^9}, {3.797707661816712*^9, 
   3.797707662210675*^9}, {3.79770780831798*^9, 3.7977078132942457`*^9}, {
   3.800781062617735*^9, 3.8007810750870495`*^9}, {3.800781105867916*^9, 
   3.80078111840168*^9}, {3.8007811526973934`*^9, 3.800781154140509*^9}, {
   3.800781188132553*^9, 3.800781210196604*^9}, {3.800781295871057*^9, 
   3.8007813650496044`*^9}, {3.8007816152402*^9, 3.800781615543353*^9}, {
   3.800781661342738*^9, 3.800781706051343*^9}, {3.80078198958346*^9, 
   3.800782006886835*^9}, 3.800782040808551*^9, {3.801916943881814*^9, 
   3.8019169445105*^9}, {3.8019170130566387`*^9, 3.8019170300427*^9}, {
   3.805018703646764*^9, 3.80501873474317*^9}, {3.8050204454930067`*^9, 
   3.805020506697908*^9}, {3.805020609244876*^9, 3.805020635195768*^9}, {
   3.8050209378060913`*^9, 3.8050209435233397`*^9}, 3.805023489401431*^9, {
   3.805025031588258*^9, 3.8050250565460043`*^9}, {3.80502519202549*^9, 
   3.805025209083207*^9}, {3.805025552087181*^9, 3.8050255528687706`*^9}, {
   3.8050255950170097`*^9, 3.805025666963866*^9}, {3.805025835608604*^9, 
   3.805025859315204*^9}, {3.8050264028346424`*^9, 3.805026463373618*^9}, {
   3.8050270005426455`*^9, 3.8050270192368064`*^9}, {3.8050270628135595`*^9, 
   3.805027074729477*^9}, {3.805027383967955*^9, 3.8050275333190713`*^9}, {
   3.805027563413683*^9, 3.805027743410923*^9}, {3.8050279574181957`*^9, 
   3.8050279640129676`*^9}, {3.8050507109006386`*^9, 3.805050796808324*^9}, {
   3.805050853372447*^9, 3.8050508576721106`*^9}, {3.805101454223711*^9, 
   3.805101454792161*^9}, 3.805103298686384*^9, {3.806404614791654*^9, 
   3.806404615415299*^9}, {3.8064046776071186`*^9, 3.806404755111944*^9}, {
   3.8064047910626097`*^9, 3.806404796366907*^9}, {3.8064048277783475`*^9, 
   3.8064048457699986`*^9}, {3.806404880342933*^9, 3.80640490342833*^9}, {
   3.806404940810408*^9, 3.806404984866733*^9}, 3.806405015922737*^9, 
   3.806476630806974*^9, {3.806476778377059*^9, 3.806476786223259*^9}, {
   3.806476867498362*^9, 3.806476883481623*^9}, {3.806649744302498*^9, 
   3.806649788478348*^9}, {3.806650120517798*^9, 3.806650126437043*^9}, {
   3.80735000587931*^9, 3.807350012500245*^9}, {3.8073599403042154`*^9, 
   3.807359972326954*^9}, {3.807360142955988*^9, 3.807360153189988*^9}, 
   3.807360264196528*^9, {3.8074257212750435`*^9, 3.807425733178379*^9}, {
   3.8074263772046795`*^9, 3.807426384037472*^9}, {3.807427406566222*^9, 
   3.8074274096430964`*^9}, {3.807427821511038*^9, 3.807427841231775*^9}, {
   3.8074411939103713`*^9, 3.807441196043426*^9}, 3.807441405264273*^9, {
   3.807441739696556*^9, 3.807441748528213*^9}, {3.807443243712683*^9, 
   3.807443293812611*^9}, {3.8074433743154173`*^9, 3.807443518049858*^9}, {
   3.8074435553229456`*^9, 3.8074435837283735`*^9}, {3.807443630315624*^9, 
   3.807443699956617*^9}, {3.807445919831716*^9, 3.80744594272935*^9}, {
   3.807446062644207*^9, 3.807446122035807*^9}, {3.807446179461222*^9, 
   3.807446185245409*^9}, {3.8074462967660756`*^9, 3.807446297338579*^9}, 
   3.807519933101871*^9, 3.807519983285568*^9, {3.807531437801152*^9, 
   3.8075314392895083`*^9}, {3.807991794852631*^9, 3.807991818880878*^9}, {
   3.808033714978407*^9, 3.808033722134506*^9}, {3.8080350958826475`*^9, 
   3.8080351073510838`*^9}, {3.8080352321936913`*^9, 
   3.8080352450247555`*^9}, {3.8080359968374596`*^9, 
   3.8080360351178365`*^9}, {3.808131000094448*^9, 3.808131000292875*^9}, {
   3.808131036510872*^9, 3.808131070467537*^9}, {3.8081311167162876`*^9, 
   3.808131153715095*^9}, 3.808133981208984*^9, {3.808135031076072*^9, 
   3.8081350378568044`*^9}, 3.821998000393261*^9, {3.82844963842861*^9, 
   3.828449650361691*^9}, {3.828449794561881*^9, 3.828449857753659*^9}, {
   3.8284498912798777`*^9, 3.828449923205927*^9}, {3.828452424021329*^9, 
   3.828452467340897*^9}, {3.828452757651314*^9, 3.8284527942613773`*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"fc626fdd-1751-4989-b553-a7d73d1fcf30"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"getMediumVelocity", "[", "f_", "]"}], " ", ":=", " ", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"cx", ",", "cy", ",", "cz", ",", " ", "ff"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Clear", "[", 
      RowBox[{"x", ",", "y", ",", "z"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"cx", " ", "=", 
      RowBox[{
       SubsuperscriptBox["\[Integral]", 
        RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], " ", 
       RowBox[{
        SubsuperscriptBox["\[Integral]", 
         RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
        RowBox[{
         SubsuperscriptBox["\[Integral]", 
          RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
         RowBox[{"x", " ", 
          RowBox[{"f", "[", 
           RowBox[{"x", ",", "y", ",", "z"}], "]"}], 
          RowBox[{"\[DifferentialD]", "x"}], 
          RowBox[{"\[DifferentialD]", "y"}], 
          RowBox[{"\[DifferentialD]", "z"}]}]}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"cy", " ", "=", 
      RowBox[{
       SubsuperscriptBox["\[Integral]", 
        RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], " ", 
       RowBox[{
        SubsuperscriptBox["\[Integral]", 
         RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
        RowBox[{
         SubsuperscriptBox["\[Integral]", 
          RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
         RowBox[{"y", " ", 
          RowBox[{"f", "[", 
           RowBox[{"x", ",", "y", ",", "z"}], "]"}], 
          RowBox[{"\[DifferentialD]", "x"}], 
          RowBox[{"\[DifferentialD]", "y"}], 
          RowBox[{"\[DifferentialD]", "z"}]}]}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"cz", " ", "=", 
      RowBox[{
       SubsuperscriptBox["\[Integral]", 
        RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], " ", 
       RowBox[{
        SubsuperscriptBox["\[Integral]", 
         RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
        RowBox[{
         SubsuperscriptBox["\[Integral]", 
          RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
         RowBox[{"z", " ", 
          RowBox[{"f", "[", 
           RowBox[{"x", ",", "y", ",", "z"}], "]"}], 
          RowBox[{"\[DifferentialD]", "x"}], 
          RowBox[{"\[DifferentialD]", "y"}], 
          RowBox[{"\[DifferentialD]", "z"}]}]}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ff", " ", "=", " ", 
      RowBox[{
       SubsuperscriptBox["\[Integral]", 
        RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], " ", 
       RowBox[{
        SubsuperscriptBox["\[Integral]", 
         RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
        RowBox[{
         SubsuperscriptBox["\[Integral]", 
          RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], " ", 
         RowBox[{
          RowBox[{"f", "[", 
           RowBox[{"x", ",", "y", ",", "z"}], "]"}], 
          RowBox[{"\[DifferentialD]", "x"}], 
          RowBox[{"\[DifferentialD]", "y"}], 
          RowBox[{"\[DifferentialD]", "z"}]}]}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"cx", "/", "ff"}], ",", 
       RowBox[{"cy", "/", "ff"}], ",", 
       RowBox[{"cz", "/", "ff"}]}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"getMediumVelocity2", "[", 
   RowBox[{
   "f_", ",", " ", "offsetx_", ",", " ", "offsety_", ",", " ", "offsetz_"}], 
   "]"}], " ", ":=", " ", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"cx", ",", "cy", ",", "cz", ",", " ", "ff"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Clear", "[", 
      RowBox[{"x", ",", "y", ",", "z"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"cx", " ", "=", 
      RowBox[{
       SubsuperscriptBox["\[Integral]", 
        RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], " ", 
       RowBox[{
        SubsuperscriptBox["\[Integral]", 
         RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
        RowBox[{
         SubsuperscriptBox["\[Integral]", 
          RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"x", "+", "offsetx"}], ")"}], " ", 
          RowBox[{"f", "[", 
           RowBox[{
            RowBox[{"x", "+", "offsetx"}], ",", 
            RowBox[{"y", "+", "offsety"}], ",", 
            RowBox[{"z", "+", "offsetz"}]}], "]"}], 
          RowBox[{"\[DifferentialD]", "x"}], 
          RowBox[{"\[DifferentialD]", "y"}], 
          RowBox[{"\[DifferentialD]", "z"}]}]}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"cy", " ", "=", 
      RowBox[{
       SubsuperscriptBox["\[Integral]", 
        RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], " ", 
       RowBox[{
        SubsuperscriptBox["\[Integral]", 
         RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
        RowBox[{
         SubsuperscriptBox["\[Integral]", 
          RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"y", " ", "+", "offsety"}], ")"}], " ", 
          RowBox[{"f", "[", 
           RowBox[{
            RowBox[{"x", "+", "offsetx"}], ",", 
            RowBox[{"y", "+", "offsety"}], ",", 
            RowBox[{"z", "+", "offsetz"}]}], "]"}], 
          RowBox[{"\[DifferentialD]", "x"}], 
          RowBox[{"\[DifferentialD]", "y"}], 
          RowBox[{"\[DifferentialD]", "z"}]}]}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"cz", " ", "=", 
      RowBox[{
       SubsuperscriptBox["\[Integral]", 
        RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], " ", 
       RowBox[{
        SubsuperscriptBox["\[Integral]", 
         RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
        RowBox[{
         SubsuperscriptBox["\[Integral]", 
          RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"z", "+", "offsetz"}], ")"}], " ", 
          RowBox[{"f", "[", 
           RowBox[{
            RowBox[{"x", "+", "offsetx"}], ",", 
            RowBox[{"y", "+", "offsety"}], ",", 
            RowBox[{"z", "+", "offsetz"}]}], "]"}], 
          RowBox[{"\[DifferentialD]", "x"}], 
          RowBox[{"\[DifferentialD]", "y"}], 
          RowBox[{"\[DifferentialD]", "z"}]}]}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ff", " ", "=", " ", 
      RowBox[{
       SubsuperscriptBox["\[Integral]", 
        RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], " ", 
       RowBox[{
        SubsuperscriptBox["\[Integral]", 
         RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
        RowBox[{
         SubsuperscriptBox["\[Integral]", 
          RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], " ", 
         RowBox[{
          RowBox[{"f", "[", 
           RowBox[{
            RowBox[{"x", "+", "offsetx"}], ",", 
            RowBox[{"y", "+", "offsety"}], ",", 
            RowBox[{"z", "+", "offsetz"}]}], "]"}], 
          RowBox[{"\[DifferentialD]", "x"}], 
          RowBox[{"\[DifferentialD]", "y"}], 
          RowBox[{"\[DifferentialD]", "z"}]}]}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"cx", "/", "ff"}], ",", 
       RowBox[{"cy", "/", "ff"}], ",", 
       RowBox[{"cz", "/", "ff"}]}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"getMediumVelocity", "[", 
   RowBox[{
   "f_", ",", " ", "offsetx_", ",", " ", "offsety_", ",", " ", "offsetz_"}], 
   "]"}], " ", ":=", " ", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"cx", ",", "cy", ",", "cz", ",", " ", "ff"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Clear", "[", 
      RowBox[{"x", ",", "y", ",", "z"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"cx", " ", "=", 
      RowBox[{
       SubsuperscriptBox["\[Integral]", 
        RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], " ", 
       RowBox[{
        SubsuperscriptBox["\[Integral]", 
         RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
        RowBox[{
         SubsuperscriptBox["\[Integral]", 
          RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
         RowBox[{
          RowBox[{"(", "x", ")"}], " ", 
          RowBox[{"f", "[", 
           RowBox[{
            RowBox[{"x", "+", "offsetx"}], ",", 
            RowBox[{"y", "+", "offsety"}], ",", 
            RowBox[{"z", "+", "offsetz"}]}], "]"}], 
          RowBox[{"\[DifferentialD]", "x"}], 
          RowBox[{"\[DifferentialD]", "y"}], 
          RowBox[{"\[DifferentialD]", "z"}]}]}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"cy", " ", "=", 
      RowBox[{
       SubsuperscriptBox["\[Integral]", 
        RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], " ", 
       RowBox[{
        SubsuperscriptBox["\[Integral]", 
         RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
        RowBox[{
         SubsuperscriptBox["\[Integral]", 
          RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
         RowBox[{
          RowBox[{"(", "y", " ", ")"}], " ", 
          RowBox[{"f", "[", 
           RowBox[{
            RowBox[{"x", "+", "offsetx"}], ",", 
            RowBox[{"y", "+", "offsety"}], ",", 
            RowBox[{"z", "+", "offsetz"}]}], "]"}], 
          RowBox[{"\[DifferentialD]", "x"}], 
          RowBox[{"\[DifferentialD]", "y"}], 
          RowBox[{"\[DifferentialD]", "z"}]}]}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"cz", " ", "=", 
      RowBox[{
       SubsuperscriptBox["\[Integral]", 
        RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], " ", 
       RowBox[{
        SubsuperscriptBox["\[Integral]", 
         RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
        RowBox[{
         SubsuperscriptBox["\[Integral]", 
          RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
         RowBox[{
          RowBox[{"(", "z", ")"}], " ", 
          RowBox[{"f", "[", 
           RowBox[{
            RowBox[{"x", "+", "offsetx"}], ",", 
            RowBox[{"y", "+", "offsety"}], ",", 
            RowBox[{"z", "+", "offsetz"}]}], "]"}], 
          RowBox[{"\[DifferentialD]", "x"}], 
          RowBox[{"\[DifferentialD]", "y"}], 
          RowBox[{"\[DifferentialD]", "z"}]}]}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ff", " ", "=", " ", 
      RowBox[{
       SubsuperscriptBox["\[Integral]", 
        RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], " ", 
       RowBox[{
        SubsuperscriptBox["\[Integral]", 
         RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
        RowBox[{
         SubsuperscriptBox["\[Integral]", 
          RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], " ", 
         RowBox[{
          RowBox[{"f", "[", 
           RowBox[{
            RowBox[{"x", "+", "offsetx"}], ",", 
            RowBox[{"y", "+", "offsety"}], ",", 
            RowBox[{"z", "+", "offsetz"}]}], "]"}], 
          RowBox[{"\[DifferentialD]", "x"}], 
          RowBox[{"\[DifferentialD]", "y"}], 
          RowBox[{"\[DifferentialD]", "z"}]}]}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"cx", "/", "ff"}], "+", "offsetx"}], ",", 
       RowBox[{
        RowBox[{"cy", "/", "ff"}], "+", "offsety"}], ",", 
       RowBox[{
        RowBox[{"cz", "/", "ff"}], "+", "offsetz"}]}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.79248764315683*^9, 3.792487717118259*^9}, {
   3.792487899307736*^9, 3.792487942361342*^9}, {3.792488197812105*^9, 
   3.792488259304467*^9}, {3.792488306784181*^9, 3.792488323501669*^9}, {
   3.792488591281996*^9, 3.792488759277603*^9}, {3.792489198310378*^9, 
   3.792489245031975*^9}, {3.792489293093035*^9, 3.792489345820257*^9}, {
   3.792489400506679*^9, 3.792489477035879*^9}, {3.792489547501329*^9, 
   3.792489582310923*^9}, {3.792489619080523*^9, 3.792489844018323*^9}, {
   3.792490177479341*^9, 3.792490185021806*^9}, {3.792490501200588*^9, 
   3.792490512372445*^9}, {3.792491023598308*^9, 3.792491063322599*^9}, {
   3.792491106986128*^9, 3.7924911103689404`*^9}, {3.792492780300156*^9, 
   3.792492799515176*^9}, {3.793545219955638*^9, 3.793545223392667*^9}, {
   3.793545758902785*^9, 3.793545761766394*^9}, {3.793545869828284*^9, 
   3.793545909951202*^9}, {3.7935464881946087`*^9, 3.793546496992507*^9}, {
   3.793546560885504*^9, 3.793546561206175*^9}, {3.793546752585251*^9, 
   3.7935467586719*^9}, {3.793546961098002*^9, 3.793547009758381*^9}, {
   3.793547072304697*^9, 3.793547091372148*^9}, {3.793547169692333*^9, 
   3.793547342233162*^9}, {3.793547784909184*^9, 3.7935478038572*^9}, {
   3.793547834777135*^9, 3.793547990681559*^9}, {3.793548031104065*^9, 
   3.793548050890218*^9}, {3.793548161789283*^9, 3.793548186371229*^9}, {
   3.793548222709368*^9, 3.7935482812046022`*^9}, 3.793548343355983*^9, {
   3.793618279197137*^9, 3.793618328574285*^9}, {3.793618377582462*^9, 
   3.7936184187481003`*^9}, {3.793618494676409*^9, 3.793618505554425*^9}, {
   3.7936186253049183`*^9, 3.7936186369810457`*^9}, {3.793620339109416*^9, 
   3.793620388694432*^9}, {3.793622070648525*^9, 3.793622077109415*^9}, {
   3.79362213230544*^9, 3.793622220492735*^9}, {3.793622258210713*^9, 
   3.7936222744956*^9}, 3.79362305071261*^9, {3.793623474175156*^9, 
   3.793623490003729*^9}, {3.793623529289273*^9, 3.793623622099556*^9}, 
   3.793623796545315*^9, {3.793624121668923*^9, 3.793624159790093*^9}, {
   3.793624230254331*^9, 3.793624240762555*^9}, {3.793624383835719*^9, 
   3.793624405739894*^9}, {3.793624451433591*^9, 3.793624554541709*^9}, {
   3.793624599238737*^9, 3.793624604551124*^9}, {3.793984786097134*^9, 
   3.793984842771058*^9}, {3.79398492398615*^9, 3.793984936318605*^9}, {
   3.794577708809482*^9, 3.794577751799024*^9}, {3.794748973032102*^9, 
   3.794749061113229*^9}, {3.794751657600748*^9, 3.794751769174323*^9}, 
   3.794751826482944*^9, {3.794752329530467*^9, 3.7947523382315054`*^9}, {
   3.794752406363028*^9, 3.794752407782328*^9}, {3.7947525759745054`*^9, 
   3.794752591589149*^9}, {3.794752678577387*^9, 3.794752690883381*^9}, 
   3.794752724137594*^9, {3.79475276677096*^9, 3.79475280140472*^9}, {
   3.7947528630484667`*^9, 3.7947529193901367`*^9}, {3.794752968602835*^9, 
   3.794752982661803*^9}, {3.794753025762905*^9, 3.794753096255533*^9}, {
   3.794753208025023*^9, 3.794753213583109*^9}, {3.794753279034611*^9, 
   3.794753281881686*^9}, {3.794753314188245*^9, 3.794753350716492*^9}, 
   3.794753746104816*^9, {3.79603725752847*^9, 3.796037273362418*^9}, {
   3.796038695199299*^9, 3.796038747786515*^9}, {3.7960387801484284`*^9, 
   3.7960387986838913`*^9}, {3.796046517103631*^9, 3.79604655090291*^9}, 
   3.796048096519883*^9, {3.796048205364588*^9, 3.796048205646148*^9}, {
   3.79604839183348*^9, 3.796048445051444*^9}, {3.796048664439632*^9, 
   3.796048667161275*^9}, {3.796397472241918*^9, 3.796397515266552*^9}, {
   3.796397548914814*^9, 3.796397592004645*^9}, {3.796398195576459*^9, 
   3.796398205085312*^9}, {3.828449678880059*^9, 3.828449683029643*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"cfd51b3d-a650-46e2-b0ef-97fd2a26f3d6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{
    RowBox[{"generateIDXset", "[", "theory", "]"}], "[", 
    RowBox[{"[", "1118", "]"}], "]"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.828454835193153*^9, 3.828454846436998*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"7e48dc76-e27a-43fb-891f-90a7952d4af2"],

Cell[BoxData[
 TemplateBox[{
  "Do", "iterb", 
   "\"Iterator \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"amax\\\", \\\",\\\", \
\\\"theory\\\"}], \\\"}\\\"}]\\) does not have appropriate bounds.\"", 2, 62, 
   1, 26156190818396134281, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.921391251128837*^9},
 CellLabel->
  "During evaluation of \
In[62]:=",ExpressionUUID->"fe14c37c-c0ab-4426-9224-ebc9b0a879d0"],

Cell[BoxData[
 TemplateBox[{
  "Do", "iterb", 
   "\"Iterator \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"amax\\\", \\\",\\\", \
\\\"theory\\\"}], \\\"}\\\"}]\\) does not have appropriate bounds.\"", 2, 62, 
   2, 26156190818396134281, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.921391251138996*^9},
 CellLabel->
  "During evaluation of \
In[62]:=",ExpressionUUID->"b0160b21-7129-4901-bc20-f29dc5ee155f"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"1118\\\"}]\\) of \\!\\(\\*RowBox[{\\\"{\\\", \
\\\"}\\\"}]\\) does not exist.\"", 2, 62, 3, 26156190818396134281, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.92139125114216*^9},
 CellLabel->
  "During evaluation of \
In[62]:=",ExpressionUUID->"5559f6cf-2f54-45f9-9c75-f031d28e17f0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", "}"}], "\[LeftDoubleBracket]", "1118", 
  "\[RightDoubleBracket]"}]], "Output",
 CellChangeTimes->{3.8284548472579*^9, 3.832081069530867*^9, 
  3.8605585179750443`*^9, 3.909053574707344*^9, 3.9138146079843297`*^9, 
  3.9150107947436028`*^9, 3.917004402971124*^9, 3.917004625713041*^9, 
  3.917005314809622*^9, 3.9200040977683706`*^9, 3.920134691359765*^9, 
  3.920541862519324*^9, 3.920542081210532*^9, 3.920719961274128*^9, 
  3.92139125114501*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"6715ec6f-4281-4490-aa1c-70729f137388"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Generate the text file for the intial f ",
 Cell[BoxData[
  ButtonBox["\<\"Run Section\"\>",
   Appearance->Automatic,
   ButtonFunction:>(SelectionMove[
      EvaluationCell[], All, CellGroup]; FrontEndExecute[
      FrontEndToken["EvaluateCells"]]),
   Evaluator->Automatic,
   Method->"Preemptive"]], "Output",
  CellChangeTimes->{3.78223244855991*^9},ExpressionUUID->
  "9fa0bfb5-e659-4dba-b700-72c96bcaadff"]
}], "Section",
 CellChangeTimes->{{3.7632694779966516`*^9, 3.763269481816036*^9}, {
   3.780297895318678*^9, 3.7802978972996616`*^9}, 3.780299790583475*^9, {
   3.782231290819748*^9, 3.782231302758502*^9}, {3.789976001565669*^9, 
   3.789976002655592*^9}, {3.7899760337285547`*^9, 3.789976050003244*^9}, {
   3.79111105574878*^9, 3.791111072244892*^9}, {3.791199115237878*^9, 
   3.791199129058989*^9}, 
   3.8219981840788417`*^9},ExpressionUUID->"30dcbd12-f50f-46d2-a30a-\
735f46e1b353"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.828453296535017*^9, 3.828453297328469*^9}},
 CellLabel->
  "In[229]:=",ExpressionUUID->"d85251e8-e819-4e41-8124-7935adcc1058"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NotebookDirectory", "[", "]"}]], "Input",
 CellChangeTimes->{{3.8284508427776756`*^9, 3.828450851415454*^9}},
 CellLabel->
  "In[230]:=",ExpressionUUID->"8e2e207c-7f57-4463-a93c-65400ce810de"],

Cell[BoxData["\<\"/Users/amat/Documents/Privat/Uni/Semester5/ACoM/dergeraet/\
AnjaMathematica/\"\>"], "Output",
 CellChangeTimes->{3.828450851967802*^9, 3.909053961342303*^9, 
  3.920542104411625*^9, 3.920719976716352*^9},
 CellLabel->
  "Out[230]=",ExpressionUUID->"48f67ebb-1d19-4268-a3ef-56a2f38b2f9f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"distname", "=", "\"\<PztimesgaussianTest\>\""}]], "Input",
 CellChangeTimes->{{3.9090536557525635`*^9, 3.909053679836567*^9}, {
  3.917004640217662*^9, 3.917004641723925*^9}},
 CellLabel->
  "In[231]:=",ExpressionUUID->"784352eb-3dca-4e57-838c-2c9676eb8e74"],

Cell[BoxData["\<\"PztimesgaussianTest\"\>"], "Output",
 CellChangeTimes->{3.909053791291075*^9, 3.913814608165331*^9, 
  3.91501082026505*^9, 3.917004643759954*^9, 3.9170053202331676`*^9, 
  3.920542104417966*^9, 3.9207199767296143`*^9},
 CellLabel->
  "Out[231]=",ExpressionUUID->"0fbe3b46-6398-4ff7-bb12-906153b31792"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"theory", "=", 
    RowBox[{"{", 
     RowBox[{"2", ",", "1", ",", "1", ",", "0", ",", "0"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"theory", " ", "=", " ", 
     RowBox[{"{", "10", "}"}]}], ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"generatefFile", "[", 
  RowBox[{"theory", ",", 
   RowBox[{"getCoeffsForFileA", "[", "theory", "]"}], ",", 
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], " ", "<>", " ", "\"\<finit\>\"", 
    "<>", "distname", "<>", "\"\<_Full2\>\""}]}], " ", "]"}]}], "Input",
 CellChangeTimes->{{3.828450765821228*^9, 3.82845093884812*^9}, {
   3.8284525426750736`*^9, 3.828452546040963*^9}, {3.82845260673518*^9, 
   3.828452618408886*^9}, {3.82845272109331*^9, 3.8284527276213055`*^9}, {
   3.828454583009755*^9, 3.8284545848959703`*^9}, 3.828455105983458*^9, 
   3.832081080468549*^9, {3.909053685344385*^9, 3.909053692261134*^9}},
 CellLabel->
  "In[232]:=",ExpressionUUID->"99fb9024-c3be-409e-80b5-aad10256776e"],

Cell[BoxData["\<\"0 1.\\n1 0\\n2 -0.4213250442\\n3 0\\n4 0\\n5 0\\n6 0\\n7 \
0\\n8 0\\n9 0\\n10 0\\n11 1.332346775\\n12 0\\n13 0\\n14 0\\n15 0\\n16 \
1.259991852\\n17 0\\n18 0\\n19 0\\n20 0\\n21 0\\n22 0\\n23 0\\n24 0\\n25 \
0\\n26 0\\n27 0\\n28 0\\n29 0\\n30 0.4157680784\\n31 0\\n32 0\\n33 0\\n34 \
0\\n\"\>"], "Output",
 CellChangeTimes->{
  3.832081083658303*^9, 3.909053620470834*^9, {3.909053786353385*^9, 
   3.909053793745539*^9}, 3.909054634370077*^9, 3.909054679585824*^9, {
   3.9090575150021515`*^9, 3.909057528879968*^9}, 3.909057787300676*^9, 
   3.909058418793388*^9, 3.9092397448178453`*^9, 3.909239923466695*^9, 
   3.913814641544267*^9, 3.915010823416588*^9, 3.917004650397199*^9, 
   3.917005327401539*^9, 3.920542104795472*^9, 3.92071997674935*^9},
 CellLabel->
  "Out[233]=",ExpressionUUID->"a52e2d77-d3df-418c-885d-2f12a6e7f39b"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"theory", "=", 
    RowBox[{"{", 
     RowBox[{
     "10", ",", "9", ",", "9", ",", "8", ",", "8", ",", "7", ",", "7", ",", 
      "6", ",", "6", ",", "5", ",", "5", ",", "4", ",", "4", ",", "3", ",", 
      "3", ",", "2", ",", "2", ",", "1", ",", "1", ",", "0", ",", "0"}], 
     "}"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"theory", " ", "=", " ", 
     RowBox[{"{", "10", "}"}]}], ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"generatefFile", "[", 
   RowBox[{"theory", ",", 
    RowBox[{"getCoeffsForFileA", "[", "theory", "]"}], ",", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], " ", "<>", " ", "\"\<finit\>\"",
      "<>", "distname", "<>", "\"\<_Full10\>\""}]}], " ", "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.828450765821228*^9, 3.82845093884812*^9}, {
   3.8284525426750736`*^9, 3.828452546040963*^9}, {3.82845260673518*^9, 
   3.828452618408886*^9}, {3.828454574879232*^9, 3.828454577917627*^9}, 
   3.828455111053261*^9, 3.909053704606615*^9, 3.913814608710213*^9},
 CellLabel->
  "In[234]:=",ExpressionUUID->"ec95ea2b-2176-4ef7-9584-a26830aeda77"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"theory", "=", 
    RowBox[{"{", 
     RowBox[{
     "3", ",", "3", ",", "3", ",", "3", ",", "3", ",", "3", ",", "3"}], 
     "}"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"theory", " ", "=", " ", 
     RowBox[{"{", "10", "}"}]}], ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"generatefFile", "[", 
   RowBox[{"theory", ",", 
    RowBox[{"getCoeffsForFileA", "[", "theory", "]"}], ",", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], " ", "<>", " ", "\"\<finit\>\"",
      "<>", "distname", "<>", "\"\<_3333333\>\""}]}], " ", "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.915010798713681*^9, 3.915010813848222*^9}},
 CellLabel->
  "In[236]:=",ExpressionUUID->"7950cad9-4da6-4c8b-a288-ab548e8d2ce6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"theory", "=", 
    RowBox[{"{", 
     RowBox[{
     "4", ",", "4", ",", "4", ",", "4", ",", "4", ",", "4", ",", "4", ",", 
      "4", ",", "4"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"theory", " ", "=", " ", 
     RowBox[{"{", "10", "}"}]}], ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"generatefFile", "[", 
   RowBox[{"theory", ",", 
    RowBox[{"getCoeffsForFileA", "[", "theory", "]"}], ",", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], " ", "<>", " ", "\"\<finit\>\"",
      "<>", "distname", "<>", "\"\<_444444444\>\""}]}], " ", "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.913814617004052*^9, 3.91381463131046*^9}},
 CellLabel->
  "In[238]:=",ExpressionUUID->"6502be29-ca23-4034-b2c7-a1b78d083c0c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Alternative", " ", "projection", " ", "space"}], ",", " ", 
    RowBox[{
    "since", " ", "all", " ", "uneven", " ", "n", " ", "are", " ", "0", " ", 
     RowBox[{"anyway", ":"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"theory", "=", 
     RowBox[{"{", 
      RowBox[{
      "10", ",", "0", ",", "9", ",", "0", ",", "8", ",", "0", ",", "7", ",", 
       "0", ",", "6", ",", "0", ",", "5", ",", "0", ",", "4", ",", "0", ",", 
       "3", ",", "0", ",", "2", ",", "0", ",", "1", ",", "0", ",", "0"}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"theory", " ", "=", " ", 
      RowBox[{"{", "10", "}"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"generatefFile", "[", 
     RowBox[{"theory", ",", 
      RowBox[{"getCoeffsForFileA", "[", "theory", "]"}], ",", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], " ", "<>", " ", 
       "\"\<finit\>\"", "<>", "distname", "<>", "\"\<_OnlyEvenN10\>\""}]}], 
     " ", "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.828450765821228*^9, 3.82845093884812*^9}, {
   3.8284525426750736`*^9, 3.828452546040963*^9}, {3.82845260673518*^9, 
   3.828452618408886*^9}, {3.828454574879232*^9, 3.828454577917627*^9}, {
   3.828454977590608*^9, 3.828455001720283*^9}, {3.8284550387488403`*^9, 
   3.8284550925024548`*^9}, {3.8284551507299185`*^9, 3.8284551528119955`*^9}, 
   3.909053709491209*^9},
 CellLabel->
  "In[240]:=",ExpressionUUID->"bbca885d-432f-4c82-9666-f373b8a75464"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"theoryStrings", "=", " ", 
    RowBox[{"{", 
     RowBox[{
     "\"\<5\>\"", ",", "\"\<6\>\"", ",", "\"\<7\>\"", ",", "\"\<8\>\"", ",", 
      "\"\<9\>\"", ",", "\"\<10\>\"", ",", "\"\<5 4 4 3 3 2 2 1 1 0 0\>\"", 
      ",", "\"\<5 5 4 4 3 3 2 2 1 1 0 0\>\"", ",", 
      "\"\<6 5 5 4 4 3 3 2 2 1 1 0 0\>\"", ",", 
      "\"\<6 6 5 5 4 4 3 3 2 2 1 1 0 0\>\"", ",", 
      "\"\<7 6 6 5 5 4 4 3 3 2 2 1 1 0 0\>\"", ",", 
      "\"\<7 7 6 6 5 5 4 4 3 3 2 2 1 1 0 0\>\"", ",", 
      "\"\<8 7 7 6 6 5 5 4 4 3 3 2 2 1 1 0 0\>\"", ",", 
      "\"\<8 8 7 7 6 6 5 5 4 4 3 3 2 2 1 1 0 0\>\"", ",", 
      "\"\<9 8 8 7 7 6 6 5 5 4 4 3 3 2 2 1 1 0 0\>\"", ",", 
      "\"\<9 9 8 8 7 7 6 6 5 5 4 4 3 3 2 2 1 1 0 0\>\"", ",", 
      "\"\<10 9 9 8 8 7 7 6 6 5 5 4 4 3 3 2 2 1 1 0 0\>\""}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"theory", "=", 
      RowBox[{"Flatten", "@", 
       RowBox[{"ToExpression", "@", 
        RowBox[{"StringSplit", "[", 
         RowBox[{"theoryString", ",", "\"\< \>\""}], "]"}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", "theory", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"generatefFile", "[", 
      RowBox[{"theory", ",", 
       RowBox[{"getCoeffsForFileA", "[", "theory", "]"}], ",", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], " ", "<>", " ", 
        "\"\<finit\>\"", "<>", "distname", "<>", " ", 
        RowBox[{"StringDelete", "[", 
         RowBox[{"theoryString", ",", "\"\< \>\""}], "]"}]}]}], " ", "]"}], 
     ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"theoryString", ",", "theoryStrings"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{
  3.8320810198475833`*^9, {3.832081135058779*^9, 3.832081135248871*^9}, {
   3.909053717774091*^9, 3.909053720410235*^9}},
 CellLabel->
  "In[242]:=",ExpressionUUID->"56eefd4c-2579-4f73-b5b9-17a1c83b25a6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", "5", "}"}]], "Print",
 CellChangeTimes->{{3.832081112773703*^9, 3.832081136837104*^9}, 
   3.909061004838763*^9, 3.909239968598981*^9, 3.92054210749942*^9, 
   3.9207199802392893`*^9},
 CellLabel->
  "During evaluation of \
In[242]:=",ExpressionUUID->"153e9815-2ecd-489e-b8b8-db7e8f7aab5f"],

Cell[BoxData[
 RowBox[{"{", "6", "}"}]], "Print",
 CellChangeTimes->{{3.832081112773703*^9, 3.832081136837104*^9}, 
   3.909061004838763*^9, 3.909239968598981*^9, 3.92054210749942*^9, 
   3.920719980250637*^9},
 CellLabel->
  "During evaluation of \
In[242]:=",ExpressionUUID->"65b3790d-b1ce-47cf-9c0e-ffbbcf1794be"],

Cell[BoxData[
 RowBox[{"{", "7", "}"}]], "Print",
 CellChangeTimes->{{3.832081112773703*^9, 3.832081136837104*^9}, 
   3.909061004838763*^9, 3.909239968598981*^9, 3.92054210749942*^9, 
   3.92071998027498*^9},
 CellLabel->
  "During evaluation of \
In[242]:=",ExpressionUUID->"0642ea8f-afc9-431a-b79d-d5a11c23e57f"],

Cell[BoxData[
 RowBox[{"{", "8", "}"}]], "Print",
 CellChangeTimes->{{3.832081112773703*^9, 3.832081136837104*^9}, 
   3.909061004838763*^9, 3.909239968598981*^9, 3.92054210749942*^9, 
   3.920719980296468*^9},
 CellLabel->
  "During evaluation of \
In[242]:=",ExpressionUUID->"d338b836-1b64-4e8c-a104-d06173865cdf"],

Cell[BoxData[
 RowBox[{"{", "9", "}"}]], "Print",
 CellChangeTimes->{{3.832081112773703*^9, 3.832081136837104*^9}, 
   3.909061004838763*^9, 3.909239968598981*^9, 3.92054210749942*^9, 
   3.920719980318385*^9},
 CellLabel->
  "During evaluation of \
In[242]:=",ExpressionUUID->"f6810f55-5e70-4415-b0f2-872cfb65bcc7"],

Cell[BoxData[
 RowBox[{"{", "10", "}"}]], "Print",
 CellChangeTimes->{{3.832081112773703*^9, 3.832081136837104*^9}, 
   3.909061004838763*^9, 3.909239968598981*^9, 3.92054210749942*^9, 
   3.920719980349133*^9},
 CellLabel->
  "During evaluation of \
In[242]:=",ExpressionUUID->"f544cb69-2caa-4ac2-a4c4-cd69644e73c3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "5", ",", "4", ",", "4", ",", "3", ",", "3", ",", "2", ",", "2", ",", "1", 
   ",", "1", ",", "0", ",", "0"}], "}"}]], "Print",
 CellChangeTimes->{{3.832081112773703*^9, 3.832081136837104*^9}, 
   3.909061004838763*^9, 3.909239968598981*^9, 3.92054210749942*^9, 
   3.920719980391056*^9},
 CellLabel->
  "During evaluation of \
In[242]:=",ExpressionUUID->"7d4699cb-6493-4467-9f75-bb34874fc86b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "5", ",", "5", ",", "4", ",", "4", ",", "3", ",", "3", ",", "2", ",", "2", 
   ",", "1", ",", "1", ",", "0", ",", "0"}], "}"}]], "Print",
 CellChangeTimes->{{3.832081112773703*^9, 3.832081136837104*^9}, 
   3.909061004838763*^9, 3.909239968598981*^9, 3.92054210749942*^9, 
   3.920719980477646*^9},
 CellLabel->
  "During evaluation of \
In[242]:=",ExpressionUUID->"583e0332-af7a-4fe6-98d2-58d5583f3a65"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "6", ",", "5", ",", "5", ",", "4", ",", "4", ",", "3", ",", "3", ",", "2", 
   ",", "2", ",", "1", ",", "1", ",", "0", ",", "0"}], "}"}]], "Print",
 CellChangeTimes->{{3.832081112773703*^9, 3.832081136837104*^9}, 
   3.909061004838763*^9, 3.909239968598981*^9, 3.92054210749942*^9, 
   3.920719980567219*^9},
 CellLabel->
  "During evaluation of \
In[242]:=",ExpressionUUID->"d760c85a-029a-4ee5-809e-48985a473aa6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "6", ",", "6", ",", "5", ",", "5", ",", "4", ",", "4", ",", "3", ",", "3", 
   ",", "2", ",", "2", ",", "1", ",", "1", ",", "0", ",", "0"}], 
  "}"}]], "Print",
 CellChangeTimes->{{3.832081112773703*^9, 3.832081136837104*^9}, 
   3.909061004838763*^9, 3.909239968598981*^9, 3.92054210749942*^9, 
   3.920719980744028*^9},
 CellLabel->
  "During evaluation of \
In[242]:=",ExpressionUUID->"c03f1b11-b769-4d63-8717-81f1b2979dc9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "7", ",", "6", ",", "6", ",", "5", ",", "5", ",", "4", ",", "4", ",", "3", 
   ",", "3", ",", "2", ",", "2", ",", "1", ",", "1", ",", "0", ",", "0"}], 
  "}"}]], "Print",
 CellChangeTimes->{{3.832081112773703*^9, 3.832081136837104*^9}, 
   3.909061004838763*^9, 3.909239968598981*^9, 3.92054210749942*^9, 
   3.9207199809196463`*^9},
 CellLabel->
  "During evaluation of \
In[242]:=",ExpressionUUID->"1970d19e-9c90-418a-877e-7e8be846b33c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "7", ",", "7", ",", "6", ",", "6", ",", "5", ",", "5", ",", "4", ",", "4", 
   ",", "3", ",", "3", ",", "2", ",", "2", ",", "1", ",", "1", ",", "0", ",", 
   "0"}], "}"}]], "Print",
 CellChangeTimes->{{3.832081112773703*^9, 3.832081136837104*^9}, 
   3.909061004838763*^9, 3.909239968598981*^9, 3.92054210749942*^9, 
   3.920719981246264*^9},
 CellLabel->
  "During evaluation of \
In[242]:=",ExpressionUUID->"a67d1a53-9810-4c74-91f0-a93c489ca3e8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "8", ",", "7", ",", "7", ",", "6", ",", "6", ",", "5", ",", "5", ",", "4", 
   ",", "4", ",", "3", ",", "3", ",", "2", ",", "2", ",", "1", ",", "1", ",", 
   "0", ",", "0"}], "}"}]], "Print",
 CellChangeTimes->{{3.832081112773703*^9, 3.832081136837104*^9}, 
   3.909061004838763*^9, 3.909239968598981*^9, 3.92054210749942*^9, 
   3.9207199815845757`*^9},
 CellLabel->
  "During evaluation of \
In[242]:=",ExpressionUUID->"0b1e1c39-8560-4041-afca-781eb222d9a4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "8", ",", "8", ",", "7", ",", "7", ",", "6", ",", "6", ",", "5", ",", "5", 
   ",", "4", ",", "4", ",", "3", ",", "3", ",", "2", ",", "2", ",", "1", ",", 
   "1", ",", "0", ",", "0"}], "}"}]], "Print",
 CellChangeTimes->{{3.832081112773703*^9, 3.832081136837104*^9}, 
   3.909061004838763*^9, 3.909239968598981*^9, 3.92054210749942*^9, 
   3.9207199821676893`*^9},
 CellLabel->
  "During evaluation of \
In[242]:=",ExpressionUUID->"6fe00427-3f13-4794-b4f5-87002709ab78"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "9", ",", "8", ",", "8", ",", "7", ",", "7", ",", "6", ",", "6", ",", "5", 
   ",", "5", ",", "4", ",", "4", ",", "3", ",", "3", ",", "2", ",", "2", ",", 
   "1", ",", "1", ",", "0", ",", "0"}], "}"}]], "Print",
 CellChangeTimes->{{3.832081112773703*^9, 3.832081136837104*^9}, 
   3.909061004838763*^9, 3.909239968598981*^9, 3.92054210749942*^9, 
   3.920719982758827*^9},
 CellLabel->
  "During evaluation of \
In[242]:=",ExpressionUUID->"ae2aa4a2-2071-4822-a10f-d034034de70e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "9", ",", "9", ",", "8", ",", "8", ",", "7", ",", "7", ",", "6", ",", "6", 
   ",", "5", ",", "5", ",", "4", ",", "4", ",", "3", ",", "3", ",", "2", ",", 
   "2", ",", "1", ",", "1", ",", "0", ",", "0"}], "}"}]], "Print",
 CellChangeTimes->{{3.832081112773703*^9, 3.832081136837104*^9}, 
   3.909061004838763*^9, 3.909239968598981*^9, 3.92054210749942*^9, 
   3.92071998373181*^9},
 CellLabel->
  "During evaluation of \
In[242]:=",ExpressionUUID->"0afe1b7c-9b0a-4404-88d9-72d61b92f4af"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "10", ",", "9", ",", "9", ",", "8", ",", "8", ",", "7", ",", "7", ",", "6", 
   ",", "6", ",", "5", ",", "5", ",", "4", ",", "4", ",", "3", ",", "3", ",", 
   "2", ",", "2", ",", "1", ",", "1", ",", "0", ",", "0"}], "}"}]], "Print",
 CellChangeTimes->{{3.832081112773703*^9, 3.832081136837104*^9}, 
   3.909061004838763*^9, 3.909239968598981*^9, 3.92054210749942*^9, 
   3.9207199847009773`*^9},
 CellLabel->
  "During evaluation of \
In[242]:=",ExpressionUUID->"41561791-8c1e-4156-872d-e7db1e9cff30"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"theoryStrings", "=", " ", 
    RowBox[{"{", 
     RowBox[{
     "\"\<5 -1 4 -1 3 -1 2 -1 1 -1 0\>\"", ",", 
      "\"\<5 -1 4 -1 3 -1 2 -1 1 -1 0 -1\>\"", ",", 
      "\"\<6 -1 5 -1 4 -1 3 -1 2 -1 1 -1 0\>\"", ",", 
      "\"\<6 -1 5 -1 4 -1 3 -1 2 -1 1 -1 0 -1\>\"", ",", 
      "\"\<7 -1 6 -1 5 -1 4 -1 3 -1 2 -1 1 -1 0\>\"", ",", 
      "\"\<7 -1 6 -1 5 -1 4 -1 3 -1 2 -1 1 -1 0 -1\>\"", ",", 
      "\"\<8 -1 7 -1 6 -1 5 -1 4 -1 3 -1 2 -1 1 -1 0\>\"", ",", 
      "\"\<8 -1 7 -1 6 -1 5 -1 4 -1 3 -1 2 -1 1 -1 0 -1\>\"", ",", 
      "\"\<9 -1 8 -1 7 -1 6 -1 5 -1 4 -1 3 -1 2 -1 1 -1 0\>\"", ",", 
      "\"\<9 -1 8 -1 7 -1 6 -1 5 -1 4 -1 3 -1 2 -1 1 -1 0 -1\>\"", ",", 
      "\"\<10 -1 9 -1 8 -1 7 -1 6 -1 5 -1 4 -1 3 -1 2 -1 1 -1 0\>\""}], 
     "}"}]}], ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"theory", "=", 
      RowBox[{"Flatten", "@", 
       RowBox[{"ToExpression", "@", 
        RowBox[{"StringSplit", "[", 
         RowBox[{"theoryString", ",", "\"\< \>\""}], "]"}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", "theory", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"generatefFile", "[", 
      RowBox[{"theory", ",", 
       RowBox[{"getCoeffsForFileA", "[", "theory", "]"}], ",", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], " ", "<>", " ", 
        "\"\<finit\>\"", "<>", "distname", "<>", " ", 
        RowBox[{"StringDelete", "[", 
         RowBox[{
          RowBox[{"StringReplace", "[", 
           RowBox[{"theoryString", ",", 
            RowBox[{"\"\<-1\>\"", "\[Rule]", "\"\<n\>\""}]}], "]"}], ",", 
          RowBox[{"{", "\"\< \>\"", "}"}]}], "]"}]}]}], " ", "]"}], ";"}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"theoryString", ",", "theoryStrings"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.832081370988727*^9, 3.832081384513574*^9}, {
   3.832081563653741*^9, 3.8320817893313274`*^9}, {3.832081836658516*^9, 
   3.8320818502733774`*^9}, {3.832081981057542*^9, 3.832081985415167*^9}, {
   3.8320821875323024`*^9, 3.832082200388485*^9}, 3.832082235795939*^9, {
   3.909053730396878*^9, 3.909053734347974*^9}},
 CellLabel->
  "In[244]:=",ExpressionUUID->"3c48a82b-619c-4123-9d57-cdf90d71b152"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5", ",", 
   RowBox[{"-", "1"}], ",", "4", ",", 
   RowBox[{"-", "1"}], ",", "3", ",", 
   RowBox[{"-", "1"}], ",", "2", ",", 
   RowBox[{"-", "1"}], ",", "1", ",", 
   RowBox[{"-", "1"}], ",", "0"}], "}"}]], "Print",
 CellChangeTimes->{3.832082208583231*^9, 3.8320822595702477`*^9, 
  3.920542112382335*^9, 3.9207199863036137`*^9},
 CellLabel->
  "During evaluation of \
In[244]:=",ExpressionUUID->"e5016491-ebc1-4357-93d7-f0bcf27ea075"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5", ",", 
   RowBox[{"-", "1"}], ",", "4", ",", 
   RowBox[{"-", "1"}], ",", "3", ",", 
   RowBox[{"-", "1"}], ",", "2", ",", 
   RowBox[{"-", "1"}], ",", "1", ",", 
   RowBox[{"-", "1"}], ",", "0", ",", 
   RowBox[{"-", "1"}]}], "}"}]], "Print",
 CellChangeTimes->{3.832082208583231*^9, 3.8320822595702477`*^9, 
  3.920542112382335*^9, 3.9207199863839817`*^9},
 CellLabel->
  "During evaluation of \
In[244]:=",ExpressionUUID->"481ba11b-f2bb-41d2-bf27-8281279a1299"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"6", ",", 
   RowBox[{"-", "1"}], ",", "5", ",", 
   RowBox[{"-", "1"}], ",", "4", ",", 
   RowBox[{"-", "1"}], ",", "3", ",", 
   RowBox[{"-", "1"}], ",", "2", ",", 
   RowBox[{"-", "1"}], ",", "1", ",", 
   RowBox[{"-", "1"}], ",", "0"}], "}"}]], "Print",
 CellChangeTimes->{3.832082208583231*^9, 3.8320822595702477`*^9, 
  3.920542112382335*^9, 3.920719986472046*^9},
 CellLabel->
  "During evaluation of \
In[244]:=",ExpressionUUID->"837bbcf7-c3d4-403c-994b-ab2d8f13aff7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"6", ",", 
   RowBox[{"-", "1"}], ",", "5", ",", 
   RowBox[{"-", "1"}], ",", "4", ",", 
   RowBox[{"-", "1"}], ",", "3", ",", 
   RowBox[{"-", "1"}], ",", "2", ",", 
   RowBox[{"-", "1"}], ",", "1", ",", 
   RowBox[{"-", "1"}], ",", "0", ",", 
   RowBox[{"-", "1"}]}], "}"}]], "Print",
 CellChangeTimes->{3.832082208583231*^9, 3.8320822595702477`*^9, 
  3.920542112382335*^9, 3.920719986640101*^9},
 CellLabel->
  "During evaluation of \
In[244]:=",ExpressionUUID->"6c2f7967-70e2-4dd3-a3b3-4b9157505913"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"7", ",", 
   RowBox[{"-", "1"}], ",", "6", ",", 
   RowBox[{"-", "1"}], ",", "5", ",", 
   RowBox[{"-", "1"}], ",", "4", ",", 
   RowBox[{"-", "1"}], ",", "3", ",", 
   RowBox[{"-", "1"}], ",", "2", ",", 
   RowBox[{"-", "1"}], ",", "1", ",", 
   RowBox[{"-", "1"}], ",", "0"}], "}"}]], "Print",
 CellChangeTimes->{3.832082208583231*^9, 3.8320822595702477`*^9, 
  3.920542112382335*^9, 3.920719986809897*^9},
 CellLabel->
  "During evaluation of \
In[244]:=",ExpressionUUID->"7ec3d9a8-f347-4ac6-8154-1d2c65df0ef5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"7", ",", 
   RowBox[{"-", "1"}], ",", "6", ",", 
   RowBox[{"-", "1"}], ",", "5", ",", 
   RowBox[{"-", "1"}], ",", "4", ",", 
   RowBox[{"-", "1"}], ",", "3", ",", 
   RowBox[{"-", "1"}], ",", "2", ",", 
   RowBox[{"-", "1"}], ",", "1", ",", 
   RowBox[{"-", "1"}], ",", "0", ",", 
   RowBox[{"-", "1"}]}], "}"}]], "Print",
 CellChangeTimes->{3.832082208583231*^9, 3.8320822595702477`*^9, 
  3.920542112382335*^9, 3.920719987130114*^9},
 CellLabel->
  "During evaluation of \
In[244]:=",ExpressionUUID->"20ddab67-768b-49f0-a50e-3eae01ffbc50"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"8", ",", 
   RowBox[{"-", "1"}], ",", "7", ",", 
   RowBox[{"-", "1"}], ",", "6", ",", 
   RowBox[{"-", "1"}], ",", "5", ",", 
   RowBox[{"-", "1"}], ",", "4", ",", 
   RowBox[{"-", "1"}], ",", "3", ",", 
   RowBox[{"-", "1"}], ",", "2", ",", 
   RowBox[{"-", "1"}], ",", "1", ",", 
   RowBox[{"-", "1"}], ",", "0"}], "}"}]], "Print",
 CellChangeTimes->{3.832082208583231*^9, 3.8320822595702477`*^9, 
  3.920542112382335*^9, 3.920719987451003*^9},
 CellLabel->
  "During evaluation of \
In[244]:=",ExpressionUUID->"04768c09-599c-414a-a661-ee1dca690c01"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"8", ",", 
   RowBox[{"-", "1"}], ",", "7", ",", 
   RowBox[{"-", "1"}], ",", "6", ",", 
   RowBox[{"-", "1"}], ",", "5", ",", 
   RowBox[{"-", "1"}], ",", "4", ",", 
   RowBox[{"-", "1"}], ",", "3", ",", 
   RowBox[{"-", "1"}], ",", "2", ",", 
   RowBox[{"-", "1"}], ",", "1", ",", 
   RowBox[{"-", "1"}], ",", "0", ",", 
   RowBox[{"-", "1"}]}], "}"}]], "Print",
 CellChangeTimes->{3.832082208583231*^9, 3.8320822595702477`*^9, 
  3.920542112382335*^9, 3.920719988050241*^9},
 CellLabel->
  "During evaluation of \
In[244]:=",ExpressionUUID->"63ab404d-79db-4c2b-b159-657de42571e0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"9", ",", 
   RowBox[{"-", "1"}], ",", "8", ",", 
   RowBox[{"-", "1"}], ",", "7", ",", 
   RowBox[{"-", "1"}], ",", "6", ",", 
   RowBox[{"-", "1"}], ",", "5", ",", 
   RowBox[{"-", "1"}], ",", "4", ",", 
   RowBox[{"-", "1"}], ",", "3", ",", 
   RowBox[{"-", "1"}], ",", "2", ",", 
   RowBox[{"-", "1"}], ",", "1", ",", 
   RowBox[{"-", "1"}], ",", "0"}], "}"}]], "Print",
 CellChangeTimes->{3.832082208583231*^9, 3.8320822595702477`*^9, 
  3.920542112382335*^9, 3.9207199886116753`*^9},
 CellLabel->
  "During evaluation of \
In[244]:=",ExpressionUUID->"4d0127b1-2b24-48b4-a3d9-b81984666dcf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"9", ",", 
   RowBox[{"-", "1"}], ",", "8", ",", 
   RowBox[{"-", "1"}], ",", "7", ",", 
   RowBox[{"-", "1"}], ",", "6", ",", 
   RowBox[{"-", "1"}], ",", "5", ",", 
   RowBox[{"-", "1"}], ",", "4", ",", 
   RowBox[{"-", "1"}], ",", "3", ",", 
   RowBox[{"-", "1"}], ",", "2", ",", 
   RowBox[{"-", "1"}], ",", "1", ",", 
   RowBox[{"-", "1"}], ",", "0", ",", 
   RowBox[{"-", "1"}]}], "}"}]], "Print",
 CellChangeTimes->{3.832082208583231*^9, 3.8320822595702477`*^9, 
  3.920542112382335*^9, 3.9207199895638647`*^9},
 CellLabel->
  "During evaluation of \
In[244]:=",ExpressionUUID->"d5d6327a-e5bf-49cf-8ffd-34c9aa3d4e67"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"10", ",", 
   RowBox[{"-", "1"}], ",", "9", ",", 
   RowBox[{"-", "1"}], ",", "8", ",", 
   RowBox[{"-", "1"}], ",", "7", ",", 
   RowBox[{"-", "1"}], ",", "6", ",", 
   RowBox[{"-", "1"}], ",", "5", ",", 
   RowBox[{"-", "1"}], ",", "4", ",", 
   RowBox[{"-", "1"}], ",", "3", ",", 
   RowBox[{"-", "1"}], ",", "2", ",", 
   RowBox[{"-", "1"}], ",", "1", ",", 
   RowBox[{"-", "1"}], ",", "0"}], "}"}]], "Print",
 CellChangeTimes->{3.832082208583231*^9, 3.8320822595702477`*^9, 
  3.920542112382335*^9, 3.9207199905209103`*^9},
 CellLabel->
  "During evaluation of \
In[244]:=",ExpressionUUID->"a3c7120d-bf4e-4056-8872-25b1a3e3094b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StringDelete", "[", 
  RowBox[{
   RowBox[{"StringReplace", "[", 
    RowBox[{"theoryStrings", ",", 
     RowBox[{"\"\<-1\>\"", "\[Rule]", "\"\<n\>\""}]}], "]"}], ",", 
   RowBox[{"{", "\"\< \>\"", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.832081865105097*^9, 3.832081886553582*^9}, {
  3.832082019397083*^9, 3.832082071533598*^9}, {3.832082114103137*^9, 
  3.832082141909778*^9}, {3.832082284890871*^9, 3.832082285898041*^9}},
 CellLabel->
  "In[246]:=",ExpressionUUID->"1f88c6e1-ad21-4835-b382-487139995d3d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"5n4n3n2n1n0\"\>", ",", "\<\"5n4n3n2n1n0n\"\>", 
   ",", "\<\"6n5n4n3n2n1n0\"\>", ",", "\<\"6n5n4n3n2n1n0n\"\>", 
   ",", "\<\"7n6n5n4n3n2n1n0\"\>", ",", "\<\"7n6n5n4n3n2n1n0n\"\>", 
   ",", "\<\"8n7n6n5n4n3n2n1n0\"\>", ",", "\<\"8n7n6n5n4n3n2n1n0n\"\>", 
   ",", "\<\"9n8n7n6n5n4n3n2n1n0\"\>", ",", "\<\"9n8n7n6n5n4n3n2n1n0n\"\>", 
   ",", "\<\"10n9n8n7n6n5n4n3n2n1n0\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.832081903432086*^9, {3.8320820201982574`*^9, 3.832082037058894*^9}, 
   3.832082072405053*^9, 3.832082142925173*^9, 3.832082354749358*^9, 
   3.920542116915607*^9, 3.92071999213573*^9},
 CellLabel->
  "Out[246]=",ExpressionUUID->"87514f12-7c52-4045-970a-63a052b13aa0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"generateIDXset", "[", 
  RowBox[{"{", 
   RowBox[{"5", ",", 
    RowBox[{"-", "1"}], ",", "4", ",", 
    RowBox[{"-", "1"}], ",", "3", ",", 
    RowBox[{"-", "1"}], ",", "2", ",", 
    RowBox[{"-", "1"}], ",", "1", ",", 
    RowBox[{"-", "1"}], ",", "0"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.83208147766979*^9, 3.832081503040649*^9}},
 CellLabel->
  "In[247]:=",ExpressionUUID->"ed74b008-6e96-4886-b8fe-320a734299a2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "3", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "4", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "5", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "0", ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "0", ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "0", ",", 
     RowBox[{"-", "4"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "0", ",", 
     RowBox[{"-", "3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "0", ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "0", ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "0", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "0", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1", ",", 
     RowBox[{"-", "4"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1", ",", 
     RowBox[{"-", "3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1", ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1", ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "2", ",", 
     RowBox[{"-", "4"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "2", ",", 
     RowBox[{"-", "3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "2", ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "2", ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "2", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3", ",", 
     RowBox[{"-", "4"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3", ",", 
     RowBox[{"-", "3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3", ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3", ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "0", ",", 
     RowBox[{"-", "6"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "0", ",", 
     RowBox[{"-", "5"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "0", ",", 
     RowBox[{"-", "4"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "0", ",", 
     RowBox[{"-", "3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "0", ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "0", ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "0", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "0", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "0", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "0", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "1", ",", 
     RowBox[{"-", "6"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "1", ",", 
     RowBox[{"-", "5"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "1", ",", 
     RowBox[{"-", "4"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "1", ",", 
     RowBox[{"-", "3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "1", ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "1", ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "1", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "2", ",", 
     RowBox[{"-", "6"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "2", ",", 
     RowBox[{"-", "5"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "2", ",", 
     RowBox[{"-", "4"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "2", ",", 
     RowBox[{"-", "3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "2", ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "2", ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "2", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "2", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "0", ",", 
     RowBox[{"-", "8"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "0", ",", 
     RowBox[{"-", "7"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "0", ",", 
     RowBox[{"-", "6"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "0", ",", 
     RowBox[{"-", "5"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "0", ",", 
     RowBox[{"-", "4"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "0", ",", 
     RowBox[{"-", "3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "0", ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "0", ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "0", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "0", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "0", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "0", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "0", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "0", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "1", ",", 
     RowBox[{"-", "8"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "1", ",", 
     RowBox[{"-", "7"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "1", ",", 
     RowBox[{"-", "6"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "1", ",", 
     RowBox[{"-", "5"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "1", ",", 
     RowBox[{"-", "4"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "1", ",", 
     RowBox[{"-", "3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "1", ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "1", ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "1", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "1", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "1", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "0", ",", 
     RowBox[{"-", "10"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "0", ",", 
     RowBox[{"-", "9"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "0", ",", 
     RowBox[{"-", "8"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "0", ",", 
     RowBox[{"-", "7"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "0", ",", 
     RowBox[{"-", "6"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "0", ",", 
     RowBox[{"-", "5"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "0", ",", 
     RowBox[{"-", "4"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "0", ",", 
     RowBox[{"-", "3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "0", ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "0", ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "0", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "0", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "0", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "0", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "0", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "0", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "0", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "0", ",", "10"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.832081514211238*^9, 3.920542116928945*^9, 
  3.92071999215889*^9},
 CellLabel->
  "Out[247]=",ExpressionUUID->"e529dd33-16a7-4882-95e0-c87707898a19"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"theory", "=", 
     RowBox[{"Flatten", "@", 
      RowBox[{"ToExpression", "@", 
       RowBox[{"StringSplit", "[", 
        RowBox[{"theoryString", ",", "\"\< \>\""}], "]"}]}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Print", "[", "theory", "]"}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"weights", "=", 
     RowBox[{"getCoeffsForFileA", "[", "theory", "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Do", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"weight", "[", 
          RowBox[{"[", "2", "]"}], "]"}], " ", "\[NotEqual]", "0"}], ",", " ", 
        RowBox[{"Print", "[", "weight", "]"}]}], "]"}], "\[IndentingNewLine]",
       ",", 
      RowBox[{"{", 
       RowBox[{"weight", ",", "weights"}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"theoryString", ",", 
     RowBox[{"theoryStrings", "[", 
      RowBox[{"[", 
       RowBox[{"7", ";;", "17", ";;", "4"}], "]"}], "]"}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9090575514803143`*^9, 3.90905755739518*^9}},
 CellLabel->
  "In[248]:=",ExpressionUUID->"48506aab-9ebb-4780-a561-9fade93d2a74"],

Cell[BoxData[
 TemplateBox[{
  "Part", "take", 
   "\"Cannot take positions \\!\\(\\*RowBox[{\\\"7\\\"}]\\) through \
\\!\\(\\*RowBox[{\\\"17\\\"}]\\) in \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"\\\\\\\"5 -1 4 -1 3 -1 2 -1 1 -1 0\\\\\\\"\\\", \\\",\\\", \\\"\\\
\\\\\"5 -1 4 -1 3 -1 2 -1 1 -1 0 -1\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"6 -1 \
5 -1 4 -1 3 -1 2 -1 1 -1 0\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"6 -1 5 -1 4 -1 \
3 -1 2 -1 1 -1 0 -1\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"7 -1 6 -1 5 -1 4 -1 3 \
-1 2 -1 1 -1 0\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"7 -1 6 -1 5 -1 4 -1 3 -1 2 \
-1 1 -1 0 -1\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"8 -1 7 -1 6 -1 5 -1 4 -1 3 \
-1 2 -1 1 -1 0\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"8 -1 7 -1 6 -1 5 -1 4 -1 3 \
-1 2 -1 1 -1 0 -1\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"9 -1 8 -1 7 -1 6 -1 5 \
-1 4 -1 3 -1 2 -1 1 -1 0\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"9 -1 8 -1 7 -1 6 \
-1 5 -1 4 -1 3 -1 2 -1 1 -1 0 -1\\\\\\\"\\\", \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}]\\).\
\"", 2, 248, 1, 26151279431651227092, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.920542116986593*^9, 3.920719992220002*^9},
 CellLabel->
  "During evaluation of \
In[248]:=",ExpressionUUID->"a71d3791-b400-4e95-8672-18862ee2050c"],

Cell[BoxData[
 TemplateBox[{
  "Do", "iterb", 
   "\"Iterator \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"theoryString\\\", \
\\\",\\\", RowBox[{\\\"theoryStrings\\\", \\\"\[LeftDoubleBracket]\\\", \
RowBox[{\\\"7\\\", \\\";;\\\", \\\"17\\\", \\\";;\\\", \\\"4\\\"}], \\\"\
\[RightDoubleBracket]\\\"}]}], \\\"}\\\"}]\\) does not have appropriate \
bounds.\"", 2, 248, 2, 26151279431651227092, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.920542116986593*^9, 3.920719992249335*^9},
 CellLabel->
  "During evaluation of \
In[248]:=",ExpressionUUID->"59f7e815-0bbc-4f0d-96ad-55165f71b263"],

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"theory", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"ToExpression", "[", 
       RowBox[{"StringSplit", "[", 
        RowBox[{"theoryString", ",", "\<\" \"\>"}], "]"}], "]"}], "]"}]}], 
    ";", 
    RowBox[{"Print", "[", "theory", "]"}], ";", 
    RowBox[{"weights", "=", 
     RowBox[{"getCoeffsForFileA", "[", "theory", "]"}]}], ";", 
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
         "weight", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
         "\[NotEqual]", "0"}], ",", 
        RowBox[{"Print", "[", "weight", "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"weight", ",", "weights"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"theoryString", ",", 
     RowBox[{"theoryStrings", "\[LeftDoubleBracket]", 
      RowBox[{"7", ";;", "17", ";;", "4"}], "\[RightDoubleBracket]"}]}], 
    "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.920542116991219*^9, 3.920719992256239*^9},
 CellLabel->
  "Out[248]=",ExpressionUUID->"9fd5410b-1b44-467e-b8ee-634f0bd5d803"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Test projection accuracy ",
 Cell[BoxData[
  ButtonBox["\<\"Run Section\"\>",
   Appearance->Automatic,
   ButtonFunction:>(SelectionMove[
      EvaluationCell[], All, CellGroup]; FrontEndExecute[
      FrontEndToken["EvaluateCells"]]),
   Evaluator->Automatic,
   Method->"Preemptive"]], "Output",
  CellChangeTimes->{3.78223244855991*^9},ExpressionUUID->
  "e05cf600-f6e7-4f8f-81f0-431af3a1c70a"]
}], "Section",
 CellChangeTimes->{{3.7632694779966516`*^9, 3.763269481816036*^9}, {
   3.780297895318678*^9, 3.7802978972996616`*^9}, 3.780299790583475*^9, {
   3.782231290819748*^9, 3.782231302758502*^9}, {3.789976001565669*^9, 
   3.789976002655592*^9}, {3.7899760337285547`*^9, 3.789976050003244*^9}, {
   3.79111105574878*^9, 3.791111072244892*^9}, {3.791199115237878*^9, 
   3.791199129058989*^9}, 3.8219981840788407`*^9, {3.9200034897535768`*^9, 
   3.920003507792298*^9}},ExpressionUUID->"1d1df919-ad46-47a0-a9f9-\
90533f5e629b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"buildFfromCoeffsAnormalized", "[", 
    RowBox[{"theory_", ",", "weights_", ",", "xx_", ",", "yy_", ",", "zz_"}], 
    "]"}], " ", ":=", " ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"combs", ",", " ", "a", ",", "n", ",", "l"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"combs", " ", "=", " ", 
       RowBox[{"generateIDXset", "[", "theory", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], " ", ":=", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"weights", "\[LeftDoubleBracket]", 
           RowBox[{
            RowBox[{"getIDX", "[", 
             RowBox[{
              RowBox[{
              "comb", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              ",", 
              RowBox[{
              "comb", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
              ",", 
              RowBox[{
              "comb", "\[LeftDoubleBracket]", "3", 
               "\[RightDoubleBracket]"}]}], "]"}], "+", "1"}], 
           "\[RightDoubleBracket]"}], 
          RowBox[{"\[Psi]Factor", "[", 
           RowBox[{
            RowBox[{
            "comb", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
            ",", 
            RowBox[{
            "comb", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
           "]"}], 
          FractionBox["1", 
           SqrtBox[
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"2", " ", "\[Pi]"}], ")"}], "3"]]], 
          SqrtBox[
           FractionBox["1", 
            RowBox[{" ", 
             RowBox[{"Norm\[Psi]A", "[", 
              RowBox[{
               RowBox[{
               "comb", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
                ",", 
               RowBox[{
               "comb", "\[LeftDoubleBracket]", "1", 
                "\[RightDoubleBracket]"}]}], "]"}]}]]], 
          RowBox[{"\[Psi]ProjA", "[", 
           RowBox[{"x", ",", "y", ",", "z", ",", 
            RowBox[{
            "comb", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
            ",", 
            RowBox[{
            "comb", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
            ",", 
            RowBox[{
            "comb", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
           "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"comb", ",", "combs"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Simplify", "[", 
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"xx", ",", "yy", ",", "zz"}], "]"}], 
        RowBox[{"Exp", "[", 
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", "xx", ")"}], "2"], " ", "+", " ", 
            SuperscriptBox[
             RowBox[{"(", "yy", ")"}], "2"], " ", "+", 
            SuperscriptBox[
             RowBox[{"(", "zz", ")"}], "2"], " "}], "2"]}], "]"}]}], 
       "]"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.920004448384214*^9, 3.9200044764405065`*^9}},
 CellLabel->
  "In[150]:=",ExpressionUUID->"80f705a5-0177-4564-8359-f9e0e2989b28"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"buildFfromCoeffsAshifted", "[", 
    RowBox[{
    "theory_", ",", "weights_", ",", "xx_", ",", "yy_", ",", "zz_", ",", 
     "\[Rho]0_", ",", " ", "vmean_", ",", " ", "kk_"}], " ", "]"}], " ", ":=",
    " ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"combs", ",", " ", "a", ",", "n", ",", "l"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"combs", " ", "=", " ", 
       RowBox[{"generateIDXset", "[", "theory", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], " ", ":=", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"weights", "\[LeftDoubleBracket]", 
           RowBox[{
            RowBox[{"getIDX", "[", 
             RowBox[{
              RowBox[{
              "comb", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              ",", 
              RowBox[{
              "comb", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
              ",", 
              RowBox[{
              "comb", "\[LeftDoubleBracket]", "3", 
               "\[RightDoubleBracket]"}]}], "]"}], "+", "1"}], 
           "\[RightDoubleBracket]"}], 
          RowBox[{"\[Psi]Factor", "[", 
           RowBox[{
            RowBox[{
            "comb", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
            ",", 
            RowBox[{
            "comb", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
           "]"}], 
          FractionBox["1", 
           SqrtBox[
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"2", " ", "\[Pi]"}], ")"}], "3"]]], 
          SqrtBox[
           FractionBox["1", 
            RowBox[{" ", 
             RowBox[{"Norm\[Psi]A", "[", 
              RowBox[{
               RowBox[{
               "comb", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
                ",", 
               RowBox[{
               "comb", "\[LeftDoubleBracket]", "1", 
                "\[RightDoubleBracket]"}]}], "]"}]}]]], 
          RowBox[{"\[Psi]ProjA", "[", 
           RowBox[{"x", ",", "y", ",", "z", ",", 
            RowBox[{
            "comb", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
            ",", 
            RowBox[{
            "comb", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
            ",", 
            RowBox[{
            "comb", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
           "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"comb", ",", "combs"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Cx", ",", "Cy", ",", "Cz"}], "}"}], "=", "vmean"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Simplify", "[", 
       RowBox[{"\[Rho]0", " ", 
        SuperscriptBox["kk", 
         RowBox[{
          RowBox[{"-", "3"}], "/", "2"}]], 
        RowBox[{"f", "[", 
         RowBox[{
          RowBox[{
           SuperscriptBox["kk", 
            RowBox[{
             RowBox[{"-", "1"}], "/", "2"}]], 
           RowBox[{"(", 
            RowBox[{"xx", "-", "Cx"}], ")"}]}], ",", 
          RowBox[{
           SuperscriptBox["kk", 
            RowBox[{
             RowBox[{"-", "1"}], "/", "2"}]], 
           RowBox[{"(", 
            RowBox[{"yy", "-", "Cy"}], ")"}]}], ",", 
          RowBox[{
           SuperscriptBox["kk", 
            RowBox[{
             RowBox[{"-", "1"}], "/", "2"}]], 
           RowBox[{"(", 
            RowBox[{"zz", "-", "Cz"}], ")"}]}]}], "]"}], 
        RowBox[{"Exp", "[", 
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["kk", 
                RowBox[{
                 RowBox[{"-", "1"}], "/", "2"}]], " ", 
               RowBox[{"(", 
                RowBox[{"xx", "-", "Cx"}], ")"}]}], ")"}], "2"], " ", "+", 
            " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["kk", 
                RowBox[{
                 RowBox[{"-", "1"}], "/", "2"}]], 
               RowBox[{"(", 
                RowBox[{"yy", "-", "Cy"}], ")"}]}], ")"}], "2"], " ", "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["kk", 
                RowBox[{
                 RowBox[{"-", "1"}], "/", "2"}]], 
               RowBox[{"(", 
                RowBox[{"zz", "-", "Cz"}], ")"}]}], ")"}], "2"], " "}], 
           "2"]}], "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.920003742363075*^9, {3.920004283848439*^9, 3.920004352030881*^9}, {
   3.920004495743277*^9, 3.920004510090969*^9}, {3.92000454111134*^9, 
   3.9200046306943192`*^9}, {3.920004684107421*^9, 3.920004713608252*^9}, {
   3.920004745994343*^9, 3.920004748711078*^9}, 3.9200051725632563`*^9, {
   3.920013487997505*^9, 3.92001352724456*^9}},
 CellLabel->
  "In[151]:=",ExpressionUUID->"d05813ea-57d3-4c6b-bad6-54b45def6caf"],

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"vx", ",", "vy", ",", "vz"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"theory", "=", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "1", ",", "0", ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"theory", "=", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3", ",", "3", ",", "3", ",", "3", ",", "3", ",", "3"}],
     "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fapproxFull2", "[", 
    RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], " ", "=", " ", 
   RowBox[{"buildFfromCoeffsAshifted", "[", 
    RowBox[{"theory", ",", 
     RowBox[{"getCoeffsA", "[", "theory", "]"}], ",", "x", ",", "y", ",", "z",
      ",", "\[Rho]0", ",", " ", "vmean", ",", " ", "kk"}], " ", "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{
  3.920003742363075*^9, {3.920004283848439*^9, 3.920004352030881*^9}, {
   3.920004495743277*^9, 3.920004510090969*^9}, {3.92000454111134*^9, 
   3.9200046306943192`*^9}, {3.920004684107421*^9, 3.920004713608252*^9}, {
   3.920004745994343*^9, 3.920004748711078*^9}, 3.9200051725632563`*^9, {
   3.92000552988301*^9, 3.920005539856517*^9}, {3.920720177191918*^9, 
   3.920720188492773*^9}},
 CellLabel->
  "In[152]:=",ExpressionUUID->"cdc38b65-f49c-4656-a856-897161945b76"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fapproxFull2", "[", 
  RowBox[{"x", ",", "y", ",", "z"}], "]"}]], "Input",
 CellChangeTimes->{{3.920134721469616*^9, 3.920134730266176*^9}},
 CellLabel->
  "In[156]:=",ExpressionUUID->"1d01676c-e4ac-454e-961c-9ad86dc1044f"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"379097578860", " ", 
    SqrtBox["2"], " ", 
    SuperscriptBox["\[Pi]", 
     RowBox[{"3", "/", "2"}]]}]], 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["x", "2"]}], "-", 
       SuperscriptBox["y", "2"], "-", 
       SuperscriptBox["z", "2"]}], ")"}]}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "48789185445"}], "+", 
     RowBox[{"244950", " ", 
      SuperscriptBox["x", "12"]}], "+", 
     RowBox[{"244950", " ", 
      SuperscriptBox["y", "12"]}], "+", 
     RowBox[{"1028345818500", " ", 
      SuperscriptBox["z", "2"]}], "-", 
     RowBox[{"36439146315", " ", 
      SuperscriptBox["z", "4"]}], "-", 
     RowBox[{"16989994990", " ", 
      SuperscriptBox["z", "6"]}], "+", 
     RowBox[{"948599150", " ", 
      SuperscriptBox["z", "8"]}], "+", 
     RowBox[{"10995648", " ", 
      SuperscriptBox["z", "10"]}], "-", 
     RowBox[{"783840", " ", 
      SuperscriptBox["z", "12"]}], "+", 
     RowBox[{"18", " ", 
      SuperscriptBox["x", "10"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1733522"}], "+", 
        RowBox[{"81650", " ", 
         SuperscriptBox["y", "2"]}], "-", 
        RowBox[{"204125", " ", 
         SuperscriptBox["z", "2"]}]}], ")"}]}], "-", 
     RowBox[{"18", " ", 
      SuperscriptBox["y", "10"], " ", 
      RowBox[{"(", 
       RowBox[{"1733522", "+", 
        RowBox[{"204125", " ", 
         SuperscriptBox["z", "2"]}]}], ")"}]}], "-", 
     RowBox[{"25", " ", 
      SuperscriptBox["y", "8"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "50643017"}], "-", 
        RowBox[{"13306032", " ", 
         SuperscriptBox["z", "2"]}], "+", 
        RowBox[{"264546", " ", 
         SuperscriptBox["z", "4"]}]}], ")"}]}], "+", 
     RowBox[{"5", " ", 
      SuperscriptBox["y", "6"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "4048551938"}], "-", 
        RowBox[{"2060177045", " ", 
         SuperscriptBox["z", "2"]}], "+", 
        RowBox[{"90861276", " ", 
         SuperscriptBox["z", "4"]}], "+", 
        RowBox[{"774042", " ", 
         SuperscriptBox["z", "6"]}]}], ")"}]}], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox["y", "4"], " ", 
      RowBox[{"(", 
       RowBox[{"41297998170", "+", 
        RowBox[{"44567601710", " ", 
         SuperscriptBox["z", "2"]}], "-", 
        RowBox[{"2881482575", " ", 
         SuperscriptBox["z", "4"]}], "-", 
        RowBox[{"67719192", " ", 
         SuperscriptBox["z", "6"]}], "+", 
        RowBox[{"3625260", " ", 
         SuperscriptBox["z", "8"]}]}], ")"}]}], "+", 
     RowBox[{
      SuperscriptBox["y", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "211343482350"}], "-", 
        RowBox[{"689069150055", " ", 
         SuperscriptBox["z", "2"]}], "+", 
        RowBox[{"47643808830", " ", 
         SuperscriptBox["z", "4"]}], "+", 
        RowBox[{"3871112075", " ", 
         SuperscriptBox["z", "6"]}], "-", 
        RowBox[{"282614112", " ", 
         SuperscriptBox["z", "8"]}], "+", 
        RowBox[{"3527280", " ", 
         SuperscriptBox["z", "10"]}]}], ")"}]}], "+", 
     RowBox[{"5", " ", 
      SuperscriptBox["x", "8"], " ", 
      RowBox[{"(", 
       RowBox[{"253215085", "+", 
        RowBox[{"734850", " ", 
         SuperscriptBox["y", "4"]}], "+", 
        RowBox[{"66530160", " ", 
         SuperscriptBox["z", "2"]}], "-", 
        RowBox[{"1322730", " ", 
         SuperscriptBox["z", "4"]}], "-", 
        RowBox[{"18", " ", 
         SuperscriptBox["y", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"1733522", "+", 
           RowBox[{"204125", " ", 
            SuperscriptBox["z", "2"]}]}], ")"}]}]}], ")"}]}], "+", 
     RowBox[{"5", " ", 
      SuperscriptBox["x", "6"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "4048551938"}], "+", 
        RowBox[{"979800", " ", 
         SuperscriptBox["y", "6"]}], "-", 
        RowBox[{"2060177045", " ", 
         SuperscriptBox["z", "2"]}], "+", 
        RowBox[{"90861276", " ", 
         SuperscriptBox["z", "4"]}], "+", 
        RowBox[{"774042", " ", 
         SuperscriptBox["z", "6"]}], "-", 
        RowBox[{"36", " ", 
         SuperscriptBox["y", "4"], " ", 
         RowBox[{"(", 
          RowBox[{"1733522", "+", 
           RowBox[{"204125", " ", 
            SuperscriptBox["z", "2"]}]}], ")"}]}], "-", 
        RowBox[{"20", " ", 
         SuperscriptBox["y", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "50643017"}], "-", 
           RowBox[{"13306032", " ", 
            SuperscriptBox["z", "2"]}], "+", 
           RowBox[{"264546", " ", 
            SuperscriptBox["z", "4"]}]}], ")"}]}]}], ")"}]}], "+", 
     RowBox[{"3", " ", 
      SuperscriptBox["x", "4"], " ", 
      RowBox[{"(", 
       RowBox[{"41297998170", "+", 
        RowBox[{"1224750", " ", 
         SuperscriptBox["y", "8"]}], "+", 
        RowBox[{"44567601710", " ", 
         SuperscriptBox["z", "2"]}], "-", 
        RowBox[{"2881482575", " ", 
         SuperscriptBox["z", "4"]}], "-", 
        RowBox[{"67719192", " ", 
         SuperscriptBox["z", "6"]}], "+", 
        RowBox[{"3625260", " ", 
         SuperscriptBox["z", "8"]}], "-", 
        RowBox[{"60", " ", 
         SuperscriptBox["y", "6"], " ", 
         RowBox[{"(", 
          RowBox[{"1733522", "+", 
           RowBox[{"204125", " ", 
            SuperscriptBox["z", "2"]}]}], ")"}]}], "-", 
        RowBox[{"50", " ", 
         SuperscriptBox["y", "4"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "50643017"}], "-", 
           RowBox[{"13306032", " ", 
            SuperscriptBox["z", "2"]}], "+", 
           RowBox[{"264546", " ", 
            SuperscriptBox["z", "4"]}]}], ")"}]}], "+", 
        RowBox[{"5", " ", 
         SuperscriptBox["y", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "4048551938"}], "-", 
           RowBox[{"2060177045", " ", 
            SuperscriptBox["z", "2"]}], "+", 
           RowBox[{"90861276", " ", 
            SuperscriptBox["z", "4"]}], "+", 
           RowBox[{"774042", " ", 
            SuperscriptBox["z", "6"]}]}], ")"}]}]}], ")"}]}], "+", 
     RowBox[{
      SuperscriptBox["x", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "211343482350"}], "+", 
        RowBox[{"1469700", " ", 
         SuperscriptBox["y", "10"]}], "-", 
        RowBox[{"689069150055", " ", 
         SuperscriptBox["z", "2"]}], "+", 
        RowBox[{"47643808830", " ", 
         SuperscriptBox["z", "4"]}], "+", 
        RowBox[{"3871112075", " ", 
         SuperscriptBox["z", "6"]}], "-", 
        RowBox[{"282614112", " ", 
         SuperscriptBox["z", "8"]}], "+", 
        RowBox[{"3527280", " ", 
         SuperscriptBox["z", "10"]}], "-", 
        RowBox[{"90", " ", 
         SuperscriptBox["y", "8"], " ", 
         RowBox[{"(", 
          RowBox[{"1733522", "+", 
           RowBox[{"204125", " ", 
            SuperscriptBox["z", "2"]}]}], ")"}]}], "-", 
        RowBox[{"100", " ", 
         SuperscriptBox["y", "6"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "50643017"}], "-", 
           RowBox[{"13306032", " ", 
            SuperscriptBox["z", "2"]}], "+", 
           RowBox[{"264546", " ", 
            SuperscriptBox["z", "4"]}]}], ")"}]}], "+", 
        RowBox[{"15", " ", 
         SuperscriptBox["y", "4"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "4048551938"}], "-", 
           RowBox[{"2060177045", " ", 
            SuperscriptBox["z", "2"]}], "+", 
           RowBox[{"90861276", " ", 
            SuperscriptBox["z", "4"]}], "+", 
           RowBox[{"774042", " ", 
            SuperscriptBox["z", "6"]}]}], ")"}]}], "+", 
        RowBox[{"6", " ", 
         SuperscriptBox["y", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"41297998170", "+", 
           RowBox[{"44567601710", " ", 
            SuperscriptBox["z", "2"]}], "-", 
           RowBox[{"2881482575", " ", 
            SuperscriptBox["z", "4"]}], "-", 
           RowBox[{"67719192", " ", 
            SuperscriptBox["z", "6"]}], "+", 
           RowBox[{"3625260", " ", 
            SuperscriptBox["z", "8"]}]}], ")"}]}]}], ")"}]}]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{3.92013473121528*^9, 3.920541901203193*^9, 
  3.920542134521945*^9, 3.92054231004659*^9, 3.920542544086378*^9, 
  3.920719999669632*^9, 3.9207202015803146`*^9, 3.920721146096326*^9, 
  3.921391297343684*^9, 3.921391396348497*^9, 3.92139221766143*^9, 
  3.92139225143589*^9, 3.921392402168775*^9},
 CellLabel->
  "Out[156]=",ExpressionUUID->"687b2e58-c196-468d-b4ae-1d56a2497feb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"vvx", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vvy", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"fapproxFull2", "[", 
      RowBox[{"vvx", ",", "vvy", ",", "cz"}], "]"}], ",", 
     RowBox[{"densitydist", " ", "[", 
      RowBox[{"vvx", ",", "vvy", ",", "cz"}], "]"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"cz", ",", 
     RowBox[{"-", "20"}], ",", "10"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", " ", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.920004792528084*^9, 3.920004877136634*^9}, {
  3.920004935130319*^9, 3.920004938032538*^9}, {3.920005026619863*^9, 
  3.920005049221328*^9}, {3.920005343632653*^9, 3.920005407369996*^9}, {
  3.920005445870245*^9, 3.920005447484123*^9}, {3.920005479108104*^9, 
  3.9200054807118125`*^9}, {3.920005545381838*^9, 3.92000555185863*^9}, {
  3.921390710187286*^9, 3.921390724482175*^9}},
 CellLabel->
  "In[158]:=",ExpressionUUID->"d3d19867-d802-4955-8b03-d087d95c0008"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1:eJwUV3c81t8Xt/d4HnvzIGWXMlKe+8mKSKRCdogUGUWRPSOyydcOWdlkPZ/P
zeZBSGUko0hSyIgKP7+/7uu8zj3nvs859577PoQbdy87UVFQUNykpaD4/5rj
1rJ1cHASXuL9N2or1lW18nH4d+HeSWglSnhag/RVnTH8uqv/9yScmyi8Xaww
VDUuw7WfvH0SGjh2X3CKe1fFseRGd+zHSVghgnNu31yoirpB4DWePAlp5oMT
1qrpqj3MotXy6k9Cz1UWq3PvzlefO3fNH7l1EgoeqDb/SO2t7optWBjtUoKh
ljYibknjNbgbKSOn5ZUg3k/coZY0VBvMUc+Um34CDnEtDVmPNdSNnE4/dm3r
OBThemq3ZlJSv7Sy2zNnfRxWVcbiQm+FNryWRzICvRXhQfUwmVPfsfGfMtsZ
lRMKMNp6pMn+idqrzqtTs2k08lBrYcT07MbWKyMHReP/UFl43O5qG+fP5qab
0aHtevEy8ODby39xqc7NvfZmb345SEOF1c3etRTGlpVjdUWI2DHY1RPmVZFZ
3ZJDzxak+ksKTuHFQcDGuVb82CphtOwIdHwV5T115V3r0BVT21u3JOGPTbu8
/95YtSnOXLFrcZSErTc51vq1bdsSbl2zZ7aThIsSVbdcftu1mQZaOLy8Jglf
Uplcz9h1aBt/Yeu8riUJdz6LFzS9uN029+f23YcikhAetdr5bu/XtpkXHvT4
rQQU6rgpHpqY3nZVNjJ4ckgC3gIElr9Bz9oaG6JCZPslIMsEZnIh7b+2B/0x
YYNQArLFLKk+l8hr29tIiMJXSkBWg7wPrfjiNrrz2U+fRUvAwB6PynuP69ti
PZ4nT9+XgBIHF7zTNlrbcJml6QQHCehac653dq+9zVOyPMPLRgKWDCa2UwV3
to1WVjzrsJCA390+M58T625L6aj6z8lYAuJqyOv3Ovvaro3XZtOfl4DvaNSL
2Q4G2/h/NOSWakjAP3/yFJe8R9ounKaFwScloHSjbvHc07E2v4grs2bSEhDv
I3XQqzLeVjbynEJRVALyd8k6mgd/bJsU3hCj45aArfksb0Q7Z9t+dQjUrLNL
wDE7X7k2hfk2JlfNc9NMEtBnd+ax46vPbeI415FeWgn4UTHY6LHdQtuZxkT7
egoJ+HIu1HdA7mvbFavm9dy/4rDo0TMPWtFvbXeo5kJit8Wh0ji1qo7697Ys
o+MFN1bE4ehPQQrz3dW2+k0zJaOv4rBC2V3f4PJ620BmUPvpeXEYMgtnPnX8
avuCvLh8ZFoclgQx8BSabrbtLQ7N48bFIcKcLkVLs93GE7ft9W9UHArcbczP
+vC7TeGkCPXSoDi8T2gRPj2y22YT5CaBdYjD1ZAbeR8099t8jqTWlaHiUFcw
g3nYjoIUT27TSmsWh1vnPmxStlCSij2/vA2pF4eVSU8bmRWpSRgvi6NblTjk
KxIdEm2nIY2TTm6al4nDl7S/uLLu05HWHCzDtYvEYYIgSsVqyEASqy4rFPxP
HNIOeNPt3WEhqV0bPUWfJg5FzPq+5pDYSMb/djt/JYjD9JfuVa9zcCSXAsLV
T7HiUFCnZkluB08K0dNf6IsUh1ZMNC0sbpykzJ8e9xtCxOGL92NGYQdcpNqU
DNr8R+JQR9WW+LGGhzQ/+/XIAy9xGJd167ROsADpTyR7o4ObOHyiOnxqPF+I
xCGvqnvJRRxWCZ6rvf5ThCTz1ua9uoM4LDTv3XxSL0bSfBh5U8pGHLKPvzoz
wiROui5auY23EIcpp9mC5v0lSF5d7yL3TMXhODdN3CDjEdJz/JEXY/riUDtc
bkgm4hip7ZWhKtQWh/YE8nyErwxpzPpeTzkQh8d1pIaTEuRIK9RZZunqh/WN
8E5C3iqQaMo6voYqi8MLj0aHr+cfJwkZf/d1Py4O1T0mtqXXT5BObXMwXJcV
h53ruwmfrp8kOWreOHaCIA7Jbc8LlsJUSI+WHjcJCYlDRlP92ynn1Ugp8TV6
DLzisH20s/KDvDqp4tTE+AZe/PD+0gnpnT5L6pqkuDXDIg5Hhlkjyu8QSZ+C
j+320x/me6O/IMAJIW1LGT9upDrMZ/CLX3Xl50hS3rmlcTsE+MTfvUgzXJuU
xf12+s0GAbLlx4S67uuQOJvoODhWCdDsZZyXTPJ5Usx1dd0rywSo5s6EXNXW
J1HsufmlLRBg0CzX+EdOA5JPbn7l+CwB7ikwGY1RXyT9OPduXuAjAY605xx4
8lwiTUaeNcgdJcCNLKaF/96bkIylPYLmBglwuJyJoC9oSuohP6+T6CNAm1Kz
oECfKySi+4evTp0EuK1G2Hj97SqpHscsVIIRoFK1GVudjxlJpo5ovNxCgEXS
xOcsohakvKte4XKNBNiU8CKo+Mt1UlzmxEp1BQHard01TXtjQ6LRYCVsvCDA
e78/bOU8siP5zSBXlZ8TYEPH7ZKbhfaktZB7j31zCDAyTDvJafYG6aZkCan5
GQFeUOz7uXHCkfSxe2r9bwoBUqyfOhmc6UQyvcUuRUwgQN1pnFeCoDMJqfSJ
b48kwDty5UfH3FxJjcZl7TShBJgSfTM6XfMOSX5jels3gADnX3eLUqm6kwpT
8bKPHxBgnq89RYqUB0lATceW7E2AijRvnuZqeZISJh8ks94lQMbskbphby8S
fUBFzyVXAuy+Snzg3ORN2nzNeXzMjgAT6dzT5MJ9SK6O5x15rAhQxVbnmg7b
A9IcnX+GuRkBDtAXKf9X+5BkXlo5kHmZAO/2jJbOevmThgzmKaYvEqCEAWr7
2TiApP2TW1lUnwDp1VXn4oyCSC0J+rfstQkwK9GgdLMxmPTiXfXIgjoBhv/K
mNNgDSOJPPhCe0yFAEfPW6apXgsnpQjwqbueIMDp8nWD3voIEhPJwL1CjgDp
hhupjGWiSMG2QQU/jxKg7US0q3ZTNGmbsu79cQkCtDjQkVOyiyG5FS4yeYsQ
oPkZOl1U4gnp+reL3r+5CDAH2q44UCWQhmNDXpzGEaCXccQxZs5E0nmFhil/
ZgKcuaanckU5iYQOL7GjdASoTGnOdN01mXTKW0ibgooAq2hrWvXqUkhl3MYP
NPfEoFEXY5gNPo1EaAqrCN8Rg6+u+PSuRKST2PaWuRhXxeCkFT+PaFMmKTxX
RN9gWQwSVxzkhh9kkf6euxwQtyAGM55ruvBcyyF5fYmoeTMrBu0N2x9PHssj
LUU2L+A/ikENKY1jXSr5JBvpH/xXPohB4W0Zk96rBaQxsphR2qgY/JrtrbMW
+Zz0GhfdKNAnBgtdcpoUJYtJP4fmHv7uEIO9scMNFrUvSEJxZzTGUDE4pDf6
uNCylKRvkEpR0ywGTzDoF08Qykk+jKsdcfVi0Fl/PHCG7iWpsEcvyrVKDPYX
7Bu0slSRRiIKLpwvE4MCk3+8+zKrSXJU10Yo8sRgjbI+HfqvlnQdVqVMZ4pB
vYEo2x7DelJUIKN5S6oYPPKzmfVyXQOp/qyDYHqCGJxNuB8xeuIVaf5P2yfv
WDHorfLHeqyviYRr5ikwjhSDP0xCqv8+aiFp+Ho4yYeIQUYV/Vi6i22kjA2J
lUUfMfi0VQFXdASSumsCqjo8xeCZOk+/HuJr0sbdD155d8TgZkJf2C3XdpKY
wgmVAGcxeP9N1v1XpR0ko5WYXYsbYrBkdWFyda+T9KjsS5uKtRg0kWqLd3Tp
JpW6EIM5zcXgRdPcCf/lHhLNwjrd4EUxSPOkJS3jDJmk9Nygv1RPDFayxhRM
sQ6SbO2L4iK1xKCQ+Y4U2B8iPRE9MHYgikEknuqcSdQwqWXanAs5LQabZ3N7
g/NGSF//q/0gdOqwPqeqpFrJoySu6yz/7SqIwaBnQxrCTGOku+8xQp2kGPxk
XUhL6HpPykrhX3gqehj/adOzV7THSf2XvUvuCBzeNypP4tjUBGkHN3hbn1sM
3un+2CEYN0U68kZKUQonBs+5/wxttZgmXY4L/kXFLAarBjOcLLVmSMEGkw0z
tGLQcV/x63TRLKnhqeBDpd+ikMFpnIswO0/Csbw5+L4iCq3/vOxX5ftCco0O
jSyaF4URdCewVw4LpC4aFVbbcVFYwUJF19exSBIL+ZbMNyQKU+iWHhaeXiL5
72UJjHYc7k/4np/S/Y30/qFxfmyzKLw80JG/ffs76YnXq8r9QlHov8dC+kq7
Svr601W5KVMUXi9eLiIHrpE0b4u0eSaIwjHZrqW9x+uk7K8jmrKRolCjgafw
btEv0o5DRN8Xf1HY7SHqxzG6QTKdVTPO8RSFb44OWizgtkiVVivvzZxFYW2m
sMLWjW2Sw1XTL/2XReH03czn+jq7JHSE7na4nigUSi17sfnhD4nPqGVdgygK
v3wToioP/Uca0iUcVEuLwq3vL2fmOShQ6Y6xCFdRURhWV8yRgKNEw0E0iyS3
KFyiiF0+LUyFqqut8qdTiEKTVf3BHzdpUNV2n4jgbRG4qIXRjubSoqcM99du
rYhAqkT1Ty+W6VBFO9bes+Mi8DFXfLpICyMqt5xyUmpIBHpbvlabQphRmXtC
ueydIvBHoIta+zQLKhkt6zNfJQJP5I9JeiniUAJH3Ry5SAQ26S/FjovjUZEs
9YsN/4nA+EG6zEUJDpSvWl8yOkoEjqGW77+ZcKHc6iNPPQNEYLLJxUz3YG6U
o9P873VvETjy5jFLK8aDso47j8rbikCf/3TpztzjR5lurGrwXhWBR4zlsi9/
F0AZVnxKKQxEoIDXL8q/PkIoFUVk8FsVEbgsW/bacFgUPXjMutImd6h3lrUS
HRZD/3GmmhWLi0DKsQerpZ0EdPtoocJDNhH4/LrlGZb3EuhGjWzmDRoROF09
M6O1KYmunamjNfwjDIUafuUNEqTQ75faP4osCsMPvcnpWy+PoUsT+noMH4Xh
8uXfR9TZZNBFh5G69RFhqPDxqr5IiCw66zsb00kShju/fClCChTQaUqX7Zd1
wvBfc6njI+nj6GTsqn16qTDc9LNroWQ9gb7L3VdzTRWGYmL/UUrsKKGj0pGF
prHCcGgsk2+F4hQ6XMeK0wgRhuD6ETcLXmW0v0foK7ubMGS6fpSj564q2mNS
eHn3hjC8+ZggLV+nhnZOyaLz5sIQmjZkUdOro+iqemqDtjAUT533OPL5LNr6
sJ0iV10YZva/vc7nRkSbqC/ciT4uDAf8vpY70SJoHa+FlqWQMOQ6R2eT3H4O
rc6frdTmEIZz8krX5mo00UpZFwEFBmEoZc98lvqlFloCfNcpNoWgbqyz0Hqv
DlrUt2+1/E0IpmmWP5lf1kULTCN7384IwSHXMPUNAT00yzk1t5gsBOPXaAMo
Si6gz9aFmBNeC8GnjkOBV+gM0TT/Qp+Hr4SgR+4Wre/9i2ji07qLhs+FYG9i
WUSitjEaz3+mWfmZEPT6JuyQw2uCPnneLin6VOiQj1P/Ldg0QSNfjfxd9xOC
Rj5f54yGTFFE3bMq2lMIytX44QJbrqC7bTgHURchePcltdjX6qvonfZL/YZX
hSAb60w1LWqGSumsBnw2EIIocf528jtzdLYn/oSfphBMqM4rZd61QE0HBzNe
KArBwjP7X1OcrFAWYzdDopQQvB0do5lVZY12j7JQvBMSgmrnidT+9Lao+riB
MxWTEPxq7SJ+Z90OFfvcp2z9RRA6ZcnbT8k6opNOt75tTArCgeGavxQ4JzR5
iSE7ZkQQZp/CuTvtOaF0P8/TNKGCMKFYfQLZckahx9dXRg2CUCjnPvstiluo
30bk7YVyQXjz9JFKJR5X9MdO1yjHM0HoU5uyf8zhDlrs7xRZ+lQQbv5p6xD8
zw2126dRRyIFYezwedmzM+7oGLV2vpu3IHxrGMs03u2BtrC13+29KAidVw3b
xnq80XuJ9hK22oKQ0ir6RXbmPVSei/LDlrog/B6YkWF4/z6ax48QJY4JQhtn
QWir5Ytez5pZbxYRhG6xDzX1VR+gXKJBRcbcglAswMhB4tRDNEoSZQmkEoTE
r/5Wnfr+KPLCGnLtCkBRZRtjIYdH6B/pPe/yVQGoJ+PDHRUZgLornp0a/ygA
494mnOtZCUKvqLeUnnwlAF9/0OQezg1F2UgW1v0vBeBN2ppj/BZhaA/YxdkX
CkCTLwENVXzhqLqO2oP4RAE4RNEU4l0egW72fJA9Ei0AY+Y4jXcDI9GXF3xn
WgMF4L+FteIAiyhUzLhR99ttASgj8LVQTfIxOjl69U/QDQH4WGAeJXPFoMlX
t17yWAhAZ3tJJR7WWJTO8hS3tq4ABFkh3+O449AfTrWfc8QO/U+1y+V2JaBc
YjkNrjwCcMFuzS/qTiJ6dvJxlAqLALSK4Dad4ktCnxjZyw795oe9kam5xNBk
VEYV5703xA9RvceaJ/9LQy+v/9Xu6+SHQbrC5Fce6ahf+Vee1BZ+6PDazy7B
MAPtE8Va5Ir5oXHszMti3kzUhcGdyiqAHwru7Rxj289GE9otxo5688P/8Njm
NEMu+uqRTvGGCz+cNL20eJ01D6VbF7oQe4Uf3g+74jstnY8WTZATW2T5YU/f
v/Wj8c/RgeRXDpEEfrhYJClofLwQ3bz4XPkyLz+8uI/+EHhfiGq3+018o+KH
byr0Hz6RK0bny6QJ/JN8MBImMIrRlKJMTtwbX97wwSn8HkVpeymqJErZVd3F
B5sFK4SiwsvQkORxF70aPmiRRUPzE1+Bij2KqvaN5oMiNN/cXY2rUOuLC+C9
Ch8snnRIlRGqQ8PpR/AFcnwwyXlCIjSuDq143fbZTZwPxs+z0FMc1KH/lFOi
aNn4YF3N5dNNc/VopojWm1MLvHAh16LBKa8RbR9XyKeY4oWmJ1vPXWJ9hS4n
CXgPDPPCE15hbM8evEJP0//icWzjheScbS5x/SZ0fDXPJjmZF+oFumnN9zaj
bQWFD1hieGFjkM4TMYEWNO9qSVJEMC/0zm9Qi3ZuQcMZKir2fXihl3a4LFrd
grq0VnX7uvHCaxEszA5bLaihe93smgMv5C4pJnAqt6LHCa/+3LrOC22rxzRu
3m1FucZauD4b88IL/51NWn3eiu5GogpW53nh5jW/VI3RVvTT6Xa9dxq88O75
sbmJ3Va0faXrhtEpXug2Pc2lL9CGFuf2PeqR4YVKwVxVTCfb0JjLg2kI4TD+
obCNDK021J12pLqZlxdS0gf1uBi0oZebxvqV2HghXiYw6Zt+G6pye/xLOc1h
fq4piEQQ21ABkY/7kn95oFFWl0/usTZ0f3iGL2edB74LLCen0beh82GflXiX
eKDCqWjjjslWtFvlq2HCJx64VjIo4pvfipZ9W77J+I4Hppwe4t2/3orGZ/0M
DiXzwH1un55sulbU69KvzL+veaDcKdL51Oct6DWq7fp7TTywcGRJUvhEC3qm
YXfoRyUPlPCq13SubEbFXPaWbhbxwAlf//YcgWaURpCSevY/HjjoErD89V4T
ujRII2yRxAMZ5MzZ7NpeoQPBDKqj0Tyw5+nYA+G1RrT6JIuJQRAPLMkRN1Nk
b0RTFtlvd97ngX5uhUXZfA3og2ecERp3eKDqCWeRW8z1qJUhb27jDR7oUXFb
OnaxFkUOBJoVLXig0NHZoa2SGlSyVuRtySUemHPnbnmySTXK4CT+g6DLA6V+
JA0+RV+iK7xS9P+d5YHLrrwWH/PL0OF+aQLXyUM82naXGi68QOsD5M/ESfPA
5yxmlPWNz9GAz6fuBvEc2i+RSh5mpaM30tQe77DwQGkR+KplNA7V1T/73JOa
B/q7N7ZV5vmgbFVaHxzWuGEXZ3f/2VNxxF/259c/LnLDe4pvWi8XPyO+5zJg
vjbNDZ++M++9VV5AzPG7DPT6uWHIuspLLpsqYqj8NYvXkBsGTHk5EUXriDdn
LbzVX3HDX1VnP4eijUQFXfsXcoXcME2JihySgBI5dh1fF2Vyw/bIqH4Vh9fE
7XKXKZHEw/1mj+gXMzqIKN6DHR/IDc9bhpyFZr3Egk5v6Zh73HDrjZX8s/l+
YqSvrxb1bW4Id16xRcUOEo2mA323zLjht7bUizHZI8SZkriZiRPccJ69AjZx
jRNv3nL6FHqMG95afICGvpsgrkhrTMuKckPFq9BLtGSKuFO2MhnAwg3rvJNw
AeEzxMDbnRNS1NzwUsu5F497Zom0clnjb3a5IFcJrUHy+zkix0uD94SvXHBQ
eZKlnuMLMcNN4l3/NBe8LeA+q4QsEEUV/r71HuOCoc2ld8GDRaJcVdlI12su
WFw17dLH8I2oW8M4eCuLC9LX5b6Zrv5JHPCcI3Mkc8F3Wuu/aYXWiKZKzf2t
j7kgU/6NR1kLa0S7OpdeVl8u+Kzq2Evu2F/Ehw09HTUmXDDXs/a1EGGbSOGT
235djws+COE4/4znNzFSxfc1NeCC8VYUEkkcO8SkV1LYVTmuw/dwQklI5A+x
ojmiZZeOC34yl2gghO8Tlfysmwv2OGHcUmO0YOUBsVlduclgkxOOfHsefvku
Behu/dKQPccJ5wYmCgpKKcEMSavmXBsnXBJdscnQpgEc7ZQljz05YcuVonwL
BiaQETpRrOTCCeHPN7SpA0xAVKumaMqGE+oxKbbik5mBXKfdc3lDTuio+c1U
W4oV6HZjOSNSnPBsOBNf+nEceNgfkMr/kQNaCf+7rhrICdzb82t/j3BARs9n
W0fXOMGNlq4373o4YJyuQfsVey5woYyVKamOA2rWnA4JQ7gBseDEUY9SDnjK
t6aGrZIbnMy8qm2UywFJXJJ3l/h5gFBMdiBTLAc8o/qp6uF3HoALff3fUjAH
lPRLSC0w5gW0fgtN3T4csHxBrfJfLS/4eUt+I/QGB7xQLqVI484H5u1NcPbm
h+fJX1Ni7OYDHyzuywMjDvhquCXsJz8/gPok57+nOeC9jpbZz3X8oP7cXPiE
IgdMAuV8x3f5Qelp2oJXRzgg0XJnfkxNAOSckMZSBTngy1iym7OXAEiSvvjR
G88B46GM3sMiARBJ8Nw1oeeASkdPWmaMCAB//lSe43t4uHPN/4vRtgDwwDef
ZNvAw/LYKk8JTkHgyDhtvLKEh1os/tMZRwWBOSWle/8nPJQyHb2ocFIQXNyV
jC0Zw8MA1tqTtsqCQHNdrySyHw8v3HM2fC4vCFS+3elyhHi4uuNT6C4oCGTm
EuY1G/HwaZVK1ol9ASA6UX8gVoGHMZeVfpq/EwBcI+NCB/l4eIT/7quLeQKA
oe/f6el0PLzJURxy30YA/INiZq1xeBjB8OSSErsAWG/SvvcsDA9HrxPL52v4
wWK1S6LvQzzUj19pnNPhB5MlTyqv3sXDt2XvQVQ/HxjKqyafdMLDtjdNb48C
PtCRMbaEt8TD1tK2ca7nvKApYYd2zRgPRzDGkqwtHlARLSQxpIuHkj2s5Uwq
PCAvGEEqzuLhok2a/wsHbpD6wNE6Rukwvr53dM0BXCDGI9rP5RgeOtjfqQsN
4wSBLhXpuiJ4GJiYEKNzjwN42Q3XS3LhId7mriNyCQ+czTdHqJjwMMl0hrea
EweM9c6yYFs4WOSMydWUMwFtxE46+zsOsrKGD9AW0oPTauG6/nM42LMEJJhv
0QDxYwPBqoM4qCCf8q+y6A+RR2wtm7sDB1vnf/Z8XfpFZObjat1owkGQvdBf
57lA3KS32qoqxEHuiTaNFZWP6NJBEEd8Jg56bZytf1K2hk7/fq54JwEHB4R+
aar2/EG7v36/dewRDlpEGLqe0mXAWmbYo+i8cNBy6kZSsDAbVvnhZOEXZxzM
wnXZOApzYOk9/p/yTHGQ0PaxOLaYD9NreqUldwEH5XQsGhsWBLGdko2SVwgO
FtNtn3qtI4pdj7ntPSSPg2uRTomGyhIYs/+LcQtJHJTFPv09yXcEa7v9WWNB
AAc/bBjyxbMcxUQuWjL8o8fB3q2w3wEysliOv8IU2x47fIHbux5wRR6jsC4u
OrLMDvfnxdTaExSxTtE0ddNOdnjNP03bQUwJMyi671j5gB02KE+3nzqnilVE
/lDocmKH725n/1TIV8PYXJx2py4f+qNmDGhiUsdGZa7GM8qzw08nzMb8/5zF
rlefanKcY4PqF/7IMxWfw9oSK0L9h9jg1PmTjr/9NTERb8mLSa1skL1V7VPQ
NS1sTplrHktlg2n8tDgpfh3MpXWDWfACGzQyi8p9NqqH9Wfdfn9ClQ2+d+1b
PEfWx+QCP+fpSbLB7V/D+uSeC9gq8lbZZ58VmuQ+7VslG2I+3bW2I7WsMF8o
mf1bgDEWMeJZFyXICvnoCHZBX65gi7XfAnIYWKEm37/0Du+rmF6KvV7DFgt8
dzq6iIb6GsZiZjI9/4YFAqmNU6/EzLCUj8fpieEs0HUtreLbZQtsm1QycsWT
BSbr+Koc/2iBmeeKZd22YYFh4kGvihyuY4I3cCeeqbFAcT6DKeo7lljB19Xr
myvMkILrm6rKdWtsVpXixv1xZthHKC7ne2+NiUTjbm13MMMiK6/MGUMbzGpc
zMO3ihl+lru8z4HaYJnHTvjuZDJDE82/FirSttj4g3OBDyOZYbKNb0lvnC3G
02cS8ceTGd64c+Oi9ndb7Ar/jSf+1szwBeXX0KdidljSLa/kf3rM0P7i8orj
eTtsuDk0M+AUM2Rw9I4av2WHsTEl5++LMsPYMHfWnCg7zPD685Ig5kM8xivk
m3l2WExZXRXFbyZIUgjKmquzw3r/dDSGzDPBnI9Msy2v7TA6gzES1RATPENi
9svqs8O0//vSGdbMBO3PWA7Ik+2wkO+bZJoiJtje7FPH2W2HoWdo30YkMMGA
KKOwtWY77F8s9yTdIyZ41KiAxrHYDlP/eGQuypkJtnqteTHH2mEP5FSWGEyZ
4POJPb8QZzus8ZHu6mMiE7wX8ve0zRk7bHPg2jaTDBMMt7ikoUpnhykJO+/F
cjPB4LvMdOCpLebh5kvDSskEB4Pmtoz2bbBKUhRz/AojDGfZxrWY22ArrBkc
7OOM8KixE1N6tjUmY1PCn9DBCJ/8kYj+TbbCXCqbxPBVjDBnm1t2ad4SK97v
PZqUyQh/RNdneMxdx74YTShwRh7aJ1yMTO62wMRzvymneDLCl4ELXUaJ5pjd
6u5ZbmtGKO7UdeU/xAzLAUzaaXqMMEUCve329ir28amAAe8pRqiaJZ1Yr3cF
E5iVuZwhyggRt9oKy9zLmPnxMxb8zIxQxn1ZSP+9MZYWbGCXuc0AGZruZpPG
L2Jjw5bOgvMMsND/3MtNqI9d8nx0X7iZAZZICxjqtSHYk9dPHuUUMsDgFos7
DqmqWD8+O0w0gQGyuP5molGUwXRrSYkEZwboYRgdVfhUAoRTDWUUXGaAP76c
/yR+UgW0X/6UK0FkgOL7FesexecAcWP/5RFuBkgIEOf88+YSeKTF3lBMwQBV
VCRE55tMQUuyaNvRFXqotT36J7TFDKicQvqlO+jhW4pbP5/J2IF74cYjZZX0
sFcg18/7wQ1QO2Y3LptJDy+4a3ZcnHMECvdDFuU96aF4w2pgNZ0ruNOV+KPS
ih5agZNXEzrvgDLugk1FPXqIa9JzE827C6Qa26mUROmh2i+hvsAJLyD8m1pU
ZZAO7now7l94+RDk3Whb5Wmmg67/rF4FhPkD8aF78HchHbSt8AlPdg0Ax4oW
7Jsf0cH/Qld/mDYGgzJcjlKmCx0siOuyE+8MAfKPrlH7X6GDy4VThRRToUDJ
tKfwrBwdFFm8xR4lGQHq0aD7wnx08EzQvKm/WSRQlVHT3aemg/1eKgm8KVHg
LGXpV2yKFs4rvXWblIkBulUxMlqxtNAjWyXcefQp6BXQ+ivhSwsjmblcieUJ
wCDyL5nGgRaK7O5mFHslAmPrO27d6rTw95ZM7gA+GVxnNqrWX6aBjaZHuvaT
0sBHH7oQmfc0UCFqTTQ6JB3YzqMmzO008DZl8u2p+xnAsVlxY+AZDSxQCu9n
8sgEd53xKsb6NFCbo7sqqTwH/BrtozuhTAPv8kis3+/LBfeIoR/wBBrYfL5L
qc4nD/hxbzx4u0MNfz6+NAWf54PwjrHWayXUsHdRwMxPvBDQKcY9UU2hhoOK
dBsDfYXgcaaONV8wNWSXYTovf68IxHs27k+YUUP8pcFE/GgxyBDNOGdNTw0z
pK9tSdaWAoFYYw7iBhX0VP5OV+RZBrK3GT6LzFDB9S92B/ynykHB4MPw2UYq
SHh+tZX8ugJU+Fv2ONykgrmbRhpxB1Xg9QeRi65dlJBxepNXM7AOtJ2iryyq
pYS82Tmf2r/XgabEVba5XEp4TRj9rnu9HlQawGEzP0qYeP90KVBvAFmY/RUd
RUrYxyU1q0z7Cjx4UWgp9owCSjwsWg+ALcDq55Wxiol9rH14+Iy9zmtgWnIk
TaJ+HzuXKzXFFP4aXLixbZYZv48FLf81zWx/DVTfp09Fae1jP8yalo1BO+BA
J+dvvNzDmD80PXdQ6QB9cXbrfCH/MNmSlapj3F0Anj9R99TyH9aSyKjGcKkL
NFJS3adT+Ydt5t/4bBvdBQrvP9/ZWP6LWfJw81judoFg68WDoSt/sazukbGm
t91ARf4OW8SxPxjfU+HfEw69YKHTTX/4YBd72CmviaX2ghSru+GCH3axRuf/
ioO6e8GvWK8/NRG7mPDZnmd3JftAvsQ95T2rXeytI8fVeJM+YNx630Pv1C7m
1xsVeTOgD1QuP1j8NL+D8ZD1p8RH+oB1qB9BpmUH0xAV5/m90wdYBB5Z3U/c
wbLn5ncdRfuBq37QKDOyg/m83fZcde4H/HPBrGa8O1jGRwWtvcf9oPdBqF7B
z9/YgVqRelRZPzhaEoGqZf/Gyq7qfN9Y7AeHLHQ37N5vrJrVBvRRkUHkh+hT
bwx+Y4pHtn8dCJGB8t2YuwISvzH/qdihRGUy+EL3pMzpzzbGzdQ39MCQDJJz
4haqR7axzHUhqSp7MtBUeSr2r2QbowdGRMX7ZLA+mGB5Pngbe/qRpmUjkgzy
nJLSksy2sQ5xA5/faWRwaS95ZFphG9OkoHuiXEQG+ympLNJ025hUtYNJaQ0Z
vJRLP39vegsbzUAsjdrIwKozIxSr38KcVkMCxbrIgNkqk8T0ZAvzIDmNCA6Q
QcvGfztXHbawm996Ks6OkMGt2OyT+epbmOgXy5dBY2TAJ5HrvoLfwuLzJuvn
3pFBT0teqeq3TYwjQPK77aHsc7ngSyjcxBJ7r2G/R8ngyPJz0aH0TcwrYWyp
eIgMxkKKrvPf3cQ2bmq63O4lgzD+F6mOupvY1Ni9aC1IBko1JcNVwpsYImcy
I99IBnN6Zcx/Nzcwwv08I+kyMkiYLdfVHdjAhI+P0ShnkQF48DIk8fkGVlPZ
FmD8hAx+sle1ffTbwJI6jof5+5FB9ovq30cvb2BFicXyjTfJwBDUKnlLb2CC
WqQvFCZk8Pd9nRtKsYFx+7yytTpNBmXuDSWM47+wBsXFoj5RMmDMaRLJi/yF
eZuFaM0c1rtJucXiu/UvzMIDPRvb0w9cBltTVJR/YWW+ajrGxf2g+x/KNPh5
HQsJ3NE6btMP7qdAHb7WdUzV39XJRLUfSMq1BzskrWM/HK6tpLP1g1DLru1d
ZB3T9vn0r/BVHzix0X1Ch28dOzd/6fS9x31gNqb3TsLqGpa8qIv4WfQBYgt5
XipnDftrERoGNnvB5onC7Bfbq9h4Gc2aCXcvUDnqfKWkbBU7ntGiFDzdA3yF
ZJhLbVYxr6MXxy4U9oA/dNUPyrp/Ylo8pROD8j2A4mOr6cu0HxiN+aqf1olu
wBr5lrFO5Ts2yrMpY03RCYz802Dd8jJWQf1cv6ChAyR4WPjW5yxjvXaN2N6t
DsBlOfOlgW4Zc7zoHiY03A4Ejn/Hmt4vYVIiohHUya+B1CSVD+qziD33igu+
u0MCLm+65DCZRYzqslr8thEJlHZGf8Y+LWBNWrrNPwvbgFwVm8lr3QWMJqPH
LuZSK1AKF5Dr5PmCfWyP5ZjObwJAQWm+r3EOU/VkcMsyqgPBElsZ/a5z2PuJ
nEtVxbWgna/pEllkDitU3vbIPKgBOtRE0kDkLFZqLv7jcn01SKtOPp778hNW
9YLukrdZBaii6cgq+zGB/aY0epjVXwDM+h6blZlPYK8VpUunqvLBQZwxR1nH
OLbR99VL71keuMT7Kar02Qfs3eQ7vN+vLLAqvetVovMOO/LSyGNhPgWk/8Tk
S6rHsAD5p5q0O0kA1EUuvRAcwzKCcIRy3kTw9CyXzYv1UeyDwZU9ltUYoHhJ
Ub84exgb8z8idpvCH3zg3KYuZhjGVJ6UTRnCe2C/+mGAwdchLOzkeUMVBzeQ
05HiciF5AHv3ddQgwVof/DQU/6R/i4zhGhO5pi9pYsT3Vab6oB/bp63HFcvZ
YJ+W+ol633uwCAXTCQ03T0zBy7z+/OturJtk+2uExQcL/LsgfT69C4sqvoue
u++HDYV75+q6dWKKvzvltosCMRE2Sm5drQ7sxcu7/YqXQjD39PgYHf52TDly
c+GPQhiGiglR6KxCTJclTEjoVzhGuun+PkqFhJWFrQ55EaIx64ePX0fOt2DM
I+a/1OMeY3uxhRUR8U2YiatSQuBUDJadg6WHqzdirR9vDOJYnmAaNZOhYYt1
2HGXut5ekThsumPLLTSpBnN0+JYXwhmP/akg1FIFVGId87p+AsvxmPqoWTTF
u1KsZsAzzKfgKeb3O85mX64IyzKafUQUScBahDpP/QvPw7T4fdJYrBKwzbBN
7s3mdCybkfNcdkwC9i3rdfjM2yfYI0v9M8ulCdiYw6nWl873MFJTsvFqcwIm
6yWQ7DDuAVamtizKWhIw7sJ6D3WWWEDqMSIKViRgMfQ/Ywnv08B+pNUvrfgE
LOITXOXgzANm9zwfHLNPwLSbY/i5WwuBOvfUzJBkAkaTckWL16EUnCVuRQXW
PsU63UXc+JkrwedkkTT6vXisXfIeOc6iBlzVcNI3kY7HxDksZuNf1oE/O6y4
B6pxWOiBxtZTykaAqJxwyDr6BJtfEWdKvNoEmprmX8/vxmCak/SiSaUtQDMV
K/eufIwV9KycTN5rAy1WnzP9daIxqoYRvRQTDNy00dmTwSKxEyZTlf2jEHRT
B8k3CkZgcz0XT5P/vQY1Nv9cr1qGYYlE2EGW6gBE/owR7cAQ7FyDktGAcSd4
JKSXH80YhOUX8DoMFnaDr7fRhyz+Pli8LLWkzFIPyGL3Vlt66Ik9qv/5JVK2
D3hUmM+IeLpg5t1dN5Haw74uxCelwqmI6V6qOZq9NQCm8L4CO7gr4NR41tKu
2hA4Yn/lZLD/TcCwdbphwnYYZE+3GQ3feACCmqu4oylHgOIrZ2YjwyCwHXDE
R+X5CJi4XTwpoxp2+L/iVZMXR0GFi1UhLI8BkG+pydDtHfioTPn+jHMqUJ22
5v/L9h4QRe4pusSkg8r8tw9Lq98DoV5Jds3mZyBLBlOn2/wAGMdfP81TywEP
zqa1YX6TYPLJRD7b5HNw3E4bKkXPAH1ZLxzzkUpwhcM6YY1rFmjkUqUyBVaB
p5vpsMdpFrxXbZ9YvlMN6JpZCT70c+DS7UDhgIEasHlud270wjzoRv9uDKXX
g2HTYYcnI1+A9YnUC+7nW0C0b6DzwadvoHf8qKb1i3Ywm7x77Y7MMjAjNosm
brYDtep7uhP3l4H7OuXOFtIBlpZcj9SxfAeA1viv/IcOoHfd7PNN9RWgWfMp
0nanE+T5jI6+jVgBUgPcj8SJXWAn6WI7MrICfFYtLoyEdoESsla+gMsP4BHf
wv+WoRswahy3HUr9CYoUWmPS6HrADYtyozNzP4G06WOuRc0e0HJfilgitwpo
38i2fg3oAa6VQsKhHauAOnfIYGm1B9gvGET60q8BLOGn0pRUL4jzZtyXl18D
9RO+Si5Wh3zvafiPzAdroI4j5616Ry/Ai2g6meSsATZLXwWfw/9Mo+LgI33n
Gnh7VI1b9ZDvpfb6DdxjXwf5B5x3VYP6gA6lZ7lR8TpQVcHfg+L9wOupggTt
wDooxnO31Z/vBznCK5mt6+vgqx/eDHe7H2yfdo45pvELeBUVDv+q6AfivZJU
Mzd+gc+5Msv3yP3A6Nr8w9ToX6CLImXgylI/KPayvkU19gtIHihtSgmTwSiF
4FzT7i+wTY9e5jnkb/vx4+Z3RTeAR3BihbUBGcgIpw0f0dkAjq9/iP+zJYNr
5aZ6H103gBOXGMe6FxmEnsbDpIQNwNlwFn82nAwqe4ZU9Rs3wHmKN+sfk8lg
8uqTqoOpDVDzPQh7m08GdF/0jzZSboI387WYWOUhH/Kiz71zdBP8Pcrv2dlE
BjYUXTwSFzeB+uSZWOw1GcTEh8ZPeG0Cs/Z/exx9ZNAohNAlZGyCSma2deyQ
b82X7QXoopvgH5t9R88hH2M73br17/MmEDd7wiR3yNfUex641TFugSxG6aSf
h/LNqyoLtxS3wIlPRy3xh3LS5w0rsatbYHdU+L+0Q3vUs2bsvd8WuEiObg0+
9L984G4Yl7cFRC+wWIwe8jmeeLlOre4tYPKwWDP+EJ+m0PKZP9+3gHfN9INX
h/jdy17UVeO3gXPjopzJYXyZak6yzqrbgH+mA7MpIIPubvHnwtbb4JGt9evP
KYf4fKvyDyK2QfPMmZSn/8/f0bN5c5XbgLJE0df3ML/i4705HR+2wfj7r8V5
NmSQGn01u4jiNwj6qvkfTp8MGE7P/xcl/RvQwg7awRNk8Oibe+aty7/Bn629
N1N8ZOB4ITpdvvA3cHvzVI1xvh+M/+FKYx/8DUIl0LpTnf3AsDw/ZX3rN+gg
bmkPFPaDkyytiQ3ndwB3ntgjS/t+QDX0I1bj+w4QvsNU3t3bB3wC/WJEuXZB
o8juknBuH1hWoH9MqbEL+Dx1pIXv9YGRp2KRXfG7IFHriOspgT6QZ2IafFHp
D1g7LelRY9YLuKhmAxUt/4CkjWNGJyV7QXTtnQB8+J/DOb39Zv7h+/LgjPR7
9+4PoMjHM90M6wHgXdM964d/QfGfL0/jc7tBbYSONyj4CwJ4feTvOnYDKZVR
TwL5L3g69as3/Fg3YEv/7r4g9A/M3dVY9K7sAp/MRW65wX8AzRaWdqw97Osf
w6wD6PcBg5PHUlxBO/joefT50AUKhHJwo2D+dRvIHtfgWLCmQFITR6MZtNuA
DbgS8teDAvkq9c06t7sVzLKE2B5Lp0DkRhqzLgy2gC8vJgVDP1MgVx/K9TTM
NYEf03Epyo8oETPWX0O0ig2gUruQ2vApJXLkPv4F2lYPPMpbvG4UUCKfyfdM
fA3qwa8HX42f9lIi1Z9S/1HdqQPbnOdYv3FRIdnpltdOtNSAff3NiKyXVMgz
zjgfCtGXAKtm2qqFVEi892WOUtsKEMxLcOx7S4WU/TuQ/VFQDqgWLmpu71Ih
1TNnHlmfKAN0wS/2L+lSI74/sQ1L9xegZ5HkdtOCGqH+77S2fWcxiL449vHR
HWpEm2fhNkG4GDAJUraWJlEjSS1l0RPvCwFb43Vf6hlqZIF6dkD7dgF4I+S5
yP+LGrkzP9AEPuSDhLCoq8dpaZA7DV3Ruzr5gMOk/qS1LA0C70QkF8rmAZ4V
1rVGXxokdteEElHMAh8uS9oOxhzquaVrm5T+AxnN6kOfs2kQM/a/EdFnMoFA
lHMFrpMGuVF6R4/NOgOIir92ccXRIn0uyquvPqWALDdFNoIELfIvf3SLAZcC
+Jqz6z4o0yIRYRyNSrrJAGfst69tSYu8zvr78jNMBFSBJ1NEi2mRbwZv7kx+
jAOBffmn3zfRIqaPdp54xjwBf7lwM0/ItEiajrr/JhILNstXpP+s0SLySgnv
jXqjweJEETZ2hg7pcOgfPK4RDm4c4XKKNaJDBL0oRmkVw8CMRyiTpj0doq9B
n/rxWCgYp7e9WhVJh9T6qC1znAoGV0wH/zg9o0MikzqEnWMCwXDOmTyhCjrE
vFnToLr1EehT5vv+eIQOMZz1j7C48BDohkQmIF/okB4FU321F76gfWBT+fc2
HRKxKOcnxOEDWhxGgh2F6JHJPMH+VZw3qEiM4QHO9EjZTF2RrNltcGx6p3Xr
IT3SPcjI8n3eBRQdc7aveEKPHHm/fCEr8ibIwbQq+GvpkU9HI9E+zhtAgLnW
ZLiTHrF5vGMatmML0q+J/Y78QI+4uyrS6W5ZgoQf/85t/qNHkr+ZbxLdrwCW
07e/lrEzIFvn1o75LBmDx+ETT+zFGZDCv7dmaLgNQKhg44eh8wyIM/vFR80M
GmD/pmRAxHUGBArKpnibnQB+tUniZ90YkIMiCY2vH/iAt/5dt9IkBqTZ4jQp
eEIOW0uZ5rArOpTf73UGbqlid2YNmniaGJD10G6hxkAEW5JtsR7sZ0BUPliq
83ZqY46+x6jDpxkQ33km1eoBPWy2Pa1EfY0BMd1jpdHPNMSs2WiN1qkYkYva
fGsmvMbYtaK5DJtjjEhDQWutjoUpNrp2ich9hhEx+XDDERu9gl06i34mX2RE
5u3rXlGcvIYNRMk9DrVjRAq0JGKm/MwwvbeZCqe9GZG+3rwgkXJzrFOEcWw1
ghEppdXaTum0wM65+j4szmBEOsYo/tL1XsfQhgUR63JGxPDNLXC60RJTp7zS
yYkyIr8TrHA/nlphk9PS8najjMig5mfJdidrzK/lILVikRGZ1Hrhc/6IDSaQ
/m5/5w8jsmxd/MPpjQ3W6l3urMPOhFC8/55O6WSLWRmHDCdKMCHqhp8Ldhdt
sX9yZqc/qTIhe5JMslyydlgWo3yBjCET0u6eE1VjYYedXaRi9rVjQmIHZkVJ
QXaHc+e4d8c9JkQvqr4hK9sOC8it/Mj+mAlp9JJLqauzw0QehetYZTMh3zSO
JNxot8NQ8+uVJTVMCFWwDyNDvx1mo3ycd6uLCRm427BycCjv4+mCz00yIWFy
4Q3Pu+ywnJ9TS3E/mZDUIBfPCy12GCDXmExSMSNv/0h26JXaYbMvolqkeJmR
SfOni2tJdlhwuLWEtywz0k47U5/ka4eJ2Z98ggFmRKDVvdTfzA6DGoxbzFeY
EWnCyuK2kh1mJzBjbe7CjMS7rJ29yGSHUf6u7y58xIyotu9axrTaYprVdhka
RczI3ltfMZNNG2z+iQplTDMzwnFtJkg2ygYLvcXi+n6QGVn2PCZnzGWDdYg3
nbm7zYywXE2wuyRqjWmnss/knWdBRFPMygRoLLEvngvnf1iyIIbNEjWW969j
4Uat1ac9WJBefF+z9BcLrIveOXQ0gwXhoifYdLSaY7p+6BGaZRbky0iaVZDl
NUzf1u2O8xNW5GuosVBimgm2fEbrXV0eK6Ly9aFoEaUJFsPHT6RoYEUscl46
C7sbY/0jnezPplmRFMV/zKnpRpihtlBdvwIbUh4ZmH6gfgEzkibvyo+wIRtH
XdTlrDUxHy7PUdEvbEgbO+VKVNQ5LPuApxz/mw2JunxOMLERwVbe3bDaEmJH
BE1b+p/rELHHoX/QNhd2pJV5dcn0lhpW7ZaXXunPjihMvAw9w6SKjZvreuTF
syNvofFUQ70yJqWYRAivZ0c+tve9RaROYvM/uNqPUOAQIyHzk7abcpjPZ+fK
HEYc4q1beiV8QAZjmmjJ5OXEIbfZbG70NB7DTnTaeTNK4ZCh9dW5t1AS62yu
sw1VxCF3bQRvyc6KY+ZVdIZ/1XBIwy4pgIQjYMGZFZI/DHCIJPOAg5C+IMaV
cIC7eRWHCHD9DYxh48NKIi7vfbLBIQbzSRrGm1zYG4+dd8OeOOSgL1r2uAYb
duOmQbu+Pw4J56UOm+hgwLYtcyrbw3FIX/330YBIakzkvHZUfToOCckVbku8
v4HWnk33ls/HIXmqU79bXnxBdZWWbYvLcMjC39nwecoW1E04QS2DhEP8gzQC
g9l/ECk4P0vie3AIa1qjBx3lNjGFQQUfM4xDjtn+WH7Os0ds25j65v8Zh1zJ
TuDKw9EC428K7zdXcIiUn1FIAysD+PIppN1tG4d4jl4eJXxiAg/GxioXD3DI
A6zTUT6MFTD3H/3PlhGPSJmfHRfZZz/s335R4xx45MzeSUvhY3ig1DDobSKE
R/qr3z211+AA1/O8DbUU8UiGIU6ASZEL/EztVmtTwyPhD46fLGXhBqGx/EeU
NfFI15Ff7zbGuQFPyB18pQEeyYrLXQlN4QGlPtie1FU88lrA0+EH4AVn73As
59rgkbvBoWy9U7xg2N7pPZ8LHrG27EgscuEDjmZN7YmeeGTV8u0Fnq98YMeQ
uYrJH4/8ZGk5W2LGD55o2vwXFo5Hvt1y3Vts4QeiajVR/+LwiEUSVZElXgDU
ytPcu5+OR1Z4mtAnlgJAV8LM7mceHmnwtj+z/0wATPKVGTqX4ZGE2DinE4MC
wJ1tT222Do+UcQh8KNwSAFQ0xkcsSHjkO7e6xxinIEjdLcCPduMR8tb0pdPH
BEHLq9IZ7hE8cqwyVnbopCCYvV/90mIKj2TG0YhQKgsCulOv/LMX8Ig9Xccx
ezlBIPeLpD+3ikdExj45PxQQBJerO3mP/MEjPKgwbuRAAPi6kxdcaDgQxs16
9+8fBUCW3GhdBRsH0mtbuHy+VgC0L4+HrPFxIArkVPobwQJgqWTm0ikJDkRI
Q8a15rwAYHNeFH4gf6h/kDddyiAATh358b1VlQO5zAyvt3bwA4vPG80H5ziQ
xY1N9ssP+UFg/p8oLUMO5OeVaNf30vyg0JbyWtQ1DqTE8rPYy3d8YG2K7Rfb
bQ6k39hfblSMD/BkcsPL9zmQ8qQXXR8gLzhjLhSfFsSBrM4ds86x5gWRY9Iy
IikcSHbjs9TGeB4gPKh9Q57EgWxyrXgYf+ACF1C/UQN2TuS0ttLk4Gk88HgU
kveUnxP5pOzShHXhQJp6tPtbCU7kyZ4mr/xlHJhrTGWyVONEjFkl73JNsoEH
VdWarvacyJX+7OJQK2aQ4/YKV3mbEwFME0xHw5hAhyz6af0+J8Jiv6SbXMEI
2ErIfg9jOJEZsV3cDQYGUJS3WBtdx4kcf6503/crDei3+RE8QOJEZL95HHAc
owFrQptGuF5O5Flh3bb9HWpw9hnl9/SPnMhBYlHYdQoqMJooJPGClguxZ/pW
/+PlPnHnksT6MjsXkkrXrEjltkcUYZPBFAS4kISPhvysp/4Rb8WoWjYqcCHm
vTPVtJO7RIqwy8ldZlzIysWmkffhW8TwkxGPJuy5EBNzJq+XUZtE+i+vnH7c
5kLKxu+ZLiduENl0hNW4g7mQd4MHZy60rRMTty4RpGO4EOfvGn2aH9eIXMWh
TBopXMj8YukXQ+o1oiD90kfHEi4kf27V9MbACjHnlUD3g9pDvFGeQhVa34ni
LhernrRxIROfUi20e78Rj/XVhtQPcyH9CiJJ93cWiSqxAVI0u1yIf9q9u6I/
54gtZ6rZ+ai5Ec6Nh0KKfbNEjZX5HVlWbqQo5P4HBdsZovZFPbIpgRsp/XN/
cEh9itiz51fvLMt9yG+56JP0JogXKl9m+ytzI9VL7V0/XT8QTdg5PZ7rcyMM
jGew69/fEscwHYtXptyICdud/6z1RonmHg80ydbcyLx6Sv7cq2Gizcg014Yn
N6JEPwQbM8jE+RDcPt0jbkTtwjVi6mwv0UlJ66tAJDcylC6NWul3E+8klzRr
ZnIjGVMs2iUPXxPXtKYKrhVyI49pn7HeCkSJ3pusT1wruRGxSydu3tdqIfpd
9bZJaj88fytN/513LXGPtvh88cD/GizvcCr8L44LWSEp9+Le6y4rMkNldQih
JFQyExIpLSt8JRUpZYQyQsoe2fN+PslKRJSVSqKEZEQq/Pj58/2c85z3eV7v
88cRgUC9ffMjlYW6IZUDyrV9IkC6TULSP7J0w4m6HCOTIuBk+n6ryUScLl/r
hanfCyLQsdLb9XrTdd17/k96eddEINGzpURkzhJv2d6HKbwEGPMx03T2D8Nx
73lyVLYSwFK21v17dhwWva0VY0ghgKSCNFew/yOcrOkVYCNDAKnh8B7+wQyc
kfzu4DUtArQYNnGQ9fOw1EEujXhDAnR+0QiUjC3EOSu7qbnmBOCT93idalGM
dxR68iAbAky1vvstwCrBzxxS57pcCMBeaZ5RzFuGVQW7B7+eIwAbf41rp1Y5
rsQcTX/9CNB/jxqeaVWB95zXKOQPJQBzIE/c07ISs6geCbRIApQ+duI7sKcK
Q1fyVbUEApxdeKjszluNG0M63Y3TCYA2Tnt9bKzGRiobLO3zCJB+xK+12qMG
t33ZqXWhnAAlEfTgjSs12CzWTfIGJoCB4+KOhsBa3KWfKPCwlQAWpdunv03U
4iPz7Yv5bwmgnN/gf2J/He5/svr5+UcCRAbWGIjE1+FUO7Fr0mME6OpMqKF1
1WHXrWqMuzMESLaxUPq6Wofl2w81zv8lQFLj0DI3g4V/hXq42rITodRvIFNR
k4VrNG9sfLGJCALGw2y/97NwyK/ULBkRIlhmXDH9dYCF9+fV7L8nQYTUN4b7
q41YWNC5Z3xBhgiXo2Od3u1m4V6xmQg7FSKU7ZFvaFufn9LNK9+gSYRyXQd/
2kYWdomQfC1rQISaL/R7FsN1WE5v77koMyI0B5+Q7yuvw3N/bQQXjxHBNVO9
jH69DlcXez+zdyKC//j+kYwDdfiqe9ThRg8iKK8tTzUK1mEjWt7c9stEqA1M
fzT5uhYLDDTFRgcR4Tn7pUv+YbW4J+rzzj831/eL8qlr06rFzmvbfJseEuG6
RF05JbkG/zd0dckRE0GF73ylmXo1NkhISm5+SQQet4Ceqd4qzHeoQntHNxGc
2Iu2lXpX4YdoMvjfKBGsxp/8Sy2sxOUpRznieEVh97xlxQ/hChx45MLTJWFR
2LtXXZGVV471+e8YniSLwlMzPzdj/XLcFVgfrqgkCnPHd/spXCzDU7by/K+O
iEJXb6vl5+4SzBTbILKaJgotDhc1Nc8W4skuUqVrrihUOchyjRYV4OJbGtbt
paJQ7I32bFnIx7p/PRMfNouCmnGi3rGwPGzb30fZ+UMU5p0rN1x+nY3pUXM4
cUEUlAu8O4ylsvG4Eb8T26oo9HNJcFKvZWHfSr2MDiExmJXh4hzXy8Sx8QXS
7hpikLZNl9N+PAP/EAnMTQQxGNQ+GtdhlrHOx2RHu6kYZOZPLHyqfIwXE8ZU
FE+IgYA7Y7H9fjq2eUjTWQgXgxE3c6rrbAouFZ15LhUrBtGqF5V+zSdjvkSk
b50iBps8DiqbriZhVqKtcW2xGNyO1t62Kp2IaclxViHvxWCvQZ78i+Z4fIXk
0lcyKgY3fdpfLKzE4bfJKjajP8Xg+Q9yrqRmHL6R0uloxC4O5TUOIhtbYvEn
8qMvfvzikDbq7BuwLRZrPPJ0zSWIwza/QG5f9xj8/RHPGX55cXjVX/A8jBaN
QaJ/SkddHBacFQwwTxR+mJp5/vxecUhV/xdza/AuNk3T93lrJQ5U6CnwTb6D
i9KDQh4GicOV6hkSPTIcc9MPcLSFiUNwesQxrtQw7PRYLGw5WhzEGUq1MtU3
sXBG5R3HTHHo868/rsl5A3sybgpGPxOHAKlfhDr167gpwyrmRY04/NPPFH/g
FYp9nswmSHaKw+G7ixO3fofgTuZzsWMD4qDlzvFNbV8Iln56NyV8RBye0E0l
uxWv4oGnchmTi+JwSdltt1ZmENbOci0sppKA4+Jcxfqng+OldyqPbCfBl8ij
FwlEPzydtaFsqxoJuoVfnXYR98Xp2anVvsYkSLkQY8Su643/yZzTyrEkwbaJ
6q/PHC5jyxwt/N6eBGYLIK0adglz5A40al8kgeeGKeXQ2QvYfnu2kVcgCayL
xBrrVC7g8lyfV2k3SdA7Hcex77cXdssTfsOeRAIfYr0CMjiL2/IPDrY2kKCh
Pu0k783T2G0nh4jZaxI4m38Prrjphjnqasy7e0kwFND22SH6FNZuk25+P06C
xJtNR/UaXPCAxac1h18k4CNce9E97ox93t/XHFkmgeqHzVy8os64aJyteFKQ
DMTPvn0qUU7Y9ELVpJcoGd67Ox8WLTyBv/85JzVPJ8Nes8+3kakjpnF/SFpW
I0O+QX1pUbEdjpGquMlvRwaa8Ge/n6LWWLHQsz7alQzStQ3hrULHcJsaY3mb
17rOTmfkbT2K2Q2iLlCukSHq1pE/vbutcGq7Yf7j22QY3Mpx38rWEmtZrXyT
iiPDY70kM92bFtjb2cNOMZsMLdzP/nT8MMdCk9SE0mIy3FxJzv/mcwgXXuzr
0qglw1V97o+CQmZ4LGSf0d4OMig/vpyx+ZIpDuVZCmnsI8NB9s5TpbtNMDW6
uG7/MBmW3sfkr/Ab4+NpFJXD82QQCFMWtvloiBekezx7Vsjw8NF+H6c+AxxT
dDvrOBcF3ju1Rv/7sA+3oT+kk2IU+Ce5LWmNWx+7GRYd+8aggDVbw58wBT3M
0eEa47GDAulcJZk99oC1P3ZzXdpLgcHpK84HinTwgMstvUXj9f5cHrtWfW3s
80M3KMCSAtsQxxT6romLlvLnQk9RoHWmNdPcaTc2DXXewX2eAp5FZJ1k1V14
jFfs9B1/CnQPs/cgYQ1MFQv7eP8OBUjvDUZ2LO3ErHRtomg8BRRWRhNt2Xbi
47LzFimpFIjrXT5NF1bF0bucXj4tocBok+C9K8eU8Y7nBPbtdRR4vcuoVlFI
Cb8y6tAubKIAZz3O7AhTwOzHNEsr+inAP3rCqitPDqd+mp3a84UC8Sbszx4c
2461TmXL4EkKZAWEf70lLIu9vbc9avkfBbhfvr/NVy2FhVba+k25JUA3SGdA
N10SF16/JvxGSAK89xhIf41n4rHY6fB+pgQ8qz5EIWbT8TB/9yd5BQkQbpfR
/95Mw4NhZTtDNCRAWlLv0sgQFXcG+H+WNZGALbe2XIx+QcatC7bq/1lKwN0V
6X4bcxJu8NK502233i8g9WJhWgxXObPvCvCSgBSRsAQ3JyIu/fg1stNPAoSy
dilXKRNwwbGXI4xrEqAQzLHUvlkEp5tG3mu/LwHZ14Rf3PsjjJOavL5SH0nA
hsKbdb9Xt+A4XQtN7ywJkFCK3x8rvAXfUiWMkWvWNRx7YVUtiEML/mpdbJCA
mm4NCxmGAA6S/hDT3C4BoYGEcWr6JnxBPF3Ha0gC7OzCA+t6ePCZuND7Dd8l
4FfArm8JEdzYVfDUBGFOAj4q6Zpxm3NhG3a5+OccVAi9kmV9g4cTHwni/7FV
gArCapflCMvs+NDiNLgTqGB4hCvJaHkD1p8smxLaTgWh7/yz43Q2rO2aoH9K
lQp3nnrp6N1bRRpD/g9rtKhQp7Qrl2NmBcm91TFwPkSFCa97bKoz/5DkQVpS
pTUVMlDaaHzkXyTRwj7Ld5IKDTrFuVraf5Bw7cvksstU4C0v2Iw6FxC/Wt4c
939UcBg+6vjj2TziKorcbx+2Xt/75X9rab/Q8mOLec5EKrjmxz6Zyp1FiyQ1
E5sMKqSPtlBabsyg2XhCWmE+Fe41FcX/6fiJvkZ8MD2GqfBfnJfNkaeTaIgD
p+e9pEJk5lSQptIEGvgvfXG1iwqr1r7J7zu+o9cXT2Vkj1LhyOb3qQf1v6GW
H/v/Lk9R4drjTk4DwldUf0ru0OFFKuzdzWaiuTSCBgv+BAVx0uBZBV3h2/Qw
6p8Yz5bmXdf9u5ZkVj6jHunBt10CNDhJq1U/ozaEOtNZslJEGlgWHJA8/HMQ
tX8qtHpDokFez7NLfp7vUat4WvAVGg0aLUw2RKz2o4a4az0d22lQFqjvIHai
Fz3vvrTmp0iDsPG17hi5HsQSdJVj7KSBbFR+2BjXO1R1yyjEV5sGfSrX4h5P
d6HV3C3kMD0aeBI21aq1vkEG7R+r4o1o4KZH2zj7tgPdnsq2yjxAg16RZcX0
5XbUJXB5pvwwDR4NhR65DW2IoKR7p+koDXLpyvL86a3I/jCvTI8tDXL0NpYl
ib5E47FpjvOuNBhe3P9DwrwJKZafWWI/QwN5+s7d7nyNyLtXPUH4PA3+dOXo
ubx/gWoX2VQZ3jTYefeX2HhtPWITfd2hcoUGY7/nJJ7bPUdGex546AXTwCX6
v4gbzghF2jpvtLhOg+6ZuBylW3VI9NFf7Qt3aXBEMq13TbYaOeLGgauxNIhR
r6lrS69ETz/f8456QAORg0XyTcoVaJLNVigthQaFV5+qB/SXIWWGVEHRYxqA
yBxE3y9Fvvtm9+Os9fnMgE/IpQSxXOtGO/JpEF8gnNlhVIyMsy1IPyvW/WTE
2BRDC9C9VnLVSi0NVmP/ePgV5KGeie+W/PU0MFX/uKKwkIPEN5VNk5ppoH4p
KT/cOhs57Qi+Ld9Gg1dzUsd7ezJRlpmJtNYbGnzysza7duYpmvLa1mDaQ4OB
6K4OAeIT5F+S989jiAYbbVI09J6lI/zWJ/7KKA0k/NllSpTTEOcCqESM02Be
M2uTo/QjZCrC3/HwJw22rpzSs9ZJRtEa/e45v2hghq/HR15ORH3WGZzVf9bz
doi5LfDyASJfOZf+coUGzuesQrk1ElBOHcfAGBcdKCmvBbJP3EfTHzsvL26i
Q65DUJoCMRaprSZu5tpCh9NfrRWnRqNRAPVUvgiBDs/Lz6WJR0ShelDeL0Wi
gx5p4V36+buIy3l5RI1Gh6f21N9CV+6gg9dbgg2k6EA1Df2g/iQCDTTbV7oo
0UHtg1ylt0UYkvguY3lZjQ6nxj/lvOq+gVx55n+G7qFDFeXCQ0PP6yhvO46I
1aUDT+y0tRk5FM2aRkhl7KNDalGp1onREKRx9siLEmM6lHFmM5jBV1HQXarD
CzM6BKXftWfY/4d4uirihq3psEO231w29Ao6NBeiPGtPh6t/plfzm/1QnPDB
12sn6eDh9erKc2lfNLiT6L75NB3kHzFW/J54I9rREQ7qWTo4XBmv4NW8jNx8
C9MUL9KBfCh7rHn8Iip44K+l60sHws37ImJFF9CeQcHLDiF0eLdw8p/Hz7OI
ttZxhnBznV/n0cfPNnsiHsm7zm8i6HBpxeQK8bAHmjU+aHvr3rpf2+/sloLT
aODcJku9+3RQUVR/tcp0Q/WxbSZLD+hw0FTFiFzuinKqIvTKUuhg0+DcHGfn
gvw38KhIZdHh6If770YmnZCT9EvZoTw6jNGdBeTSTyDjA2G0B8/okKUzPV1y
zwEpXzAUPVxOB5f/URZJaXaIGM8pxFtDB1Iz76TJGxu0WtPI3YDW86GoJutS
jqOxodC1gAY6rMVHTZPCj6FK2Q0zU+10sNosH5KTbYVSzerHMrvowEza/0Ha
zhKFXbo65NhLB8bR16OykhbI64FuH3GQDuEbNPdZbjiMjrL+19E1RIckx0S9
6hEzpP2F1RwxSgdVD5simbEDSJIrCOmP0+FzVk1AGZ8pWjBfKiifo8Pl+4YK
74qM0EfvmqfnFunw02neLlbOEDUl+qdIL9Phl4Lpnfrn+1AB3hX3eW39fl/v
C2Wd1Udxo4t3HnIy4CX3ccaakh4K4qm8bsHLAPZral1iPIBcFXwC+QQZEHaW
OeHxXQft9Js/E0RkwJ4qz99zbJpIPKXUWZ3MgL6fe9jKdHcj9hcXbadpDKi4
ZFVyKEkDTX5TtsyWWq/b2i31bFFHb/lmTZzkGCBkuG+fz5OdqFbpmZ6YEgNu
4+3+QWaqKOOI1563OxnwOVxJ3UpQBV1KnZI10GHAVR6+MeYjBWTbmE/7nx4D
DnDWmN9NkF9ncUa00ogBynecqhpKtyM5ATmh8wcYsGA7mRYwI4O2qE5wyx5m
wHyOjmKMqTT6eyxnbfgIAwZ7P7ze2CCJhgNP/0m0YUBrpvvCXysmKm7+NrbJ
hQEqb1ryfepp6OHk06Gm0ww4IpRQnqVERSGbXfv+O8uA4H9ZoTlcFOSuxuzU
uMiAO6lDZfocJGRuM9I848MAj27t7/MMMaQR/BjlBDCgZE00xtWFiCSeOFWc
vMoAT4GKw64NImh6aujpu1sMOHT/TCRnjzDq25KaEnmXAQb9m51/hW5BWMMh
zjCWAeq9knijiRDKsiNHriYwgCyUK3HCRBDdC/lwvSqZAcYl5TsWZfmRb2ZS
4IV0BkiU8p0WVeRDjm02l7dnMuAtOzNN6xgPUtg24JxcxAAXxDOnzLURmYYv
LQyXMcBQ8NeE1gkO5LZEDpeuYYD1rUY0M7ABhZ7bK3YWMyBlZOLV2wtsKHX4
ZH5JIwN6PBWW1ExWWbVWN3T+tDJgcaS0z/zrMquvJeuNdicDMvN6gPfZP5Zg
4Y/5lwPrvBJ0WkSaf7PkaIJhAkMMsJyJy5/lXWAZ3VcWtRplQMFU5fD5i79Y
zlxWeQ/H13kozcRN/p1lXb3ioz30kwHv5/759GnNsFKmHnQy5xnw+sudUGvW
FKv6RK2Tx18GyC88pkqen2TNGq7dWGBnws2oYl8n+zEWfw2dqMnDhBbK8KHv
UV9ZsjsMcq8KMEF2cFL20/cRlkGam1azMBNy3F1Gzp78wjopHNHBJ8qEF8tr
tnPzn1lJfzvm4hlMsCcdbRL+3yDr7ZAwga7AhA3nbPbUtfax+JqtNQt2McF8
YDU5ec871r78FMdd+kxo/lp2nqXRxQqK+RLacJAJgZe3KFYfbWeV+0lnm1mv
76d83ryV+yWra9J4z317JjjY3xErYTSzphw82wdOMqG9ZUH9m2sjS8qgeMbl
LBOokV/o45b1LP2qt9dyLzJh1a2ddewXYjnK/d4648uEd4eKV1X96lgJQpq7
A64x4dyGlqldolWs0uv2bc/DmPCqRLTFeUcFq3Mx2H5jJBOCVy+pDbqXsbg/
NYZEJzBB+PRG4zmzYpZ/rtmrrHwmHF+6VfDuXxYrjnzBbqqYCaO3j8Qobcpk
FUfF/lSpXOe14nj+luET1oRP/xZUzwTlurNhIrLpLFv9k7bvepkg3zLAc7Uw
geVbcX1K9AMTmkT0J7nr41ixslnBjsNMEDvF6zmxHMtqE/yRMTHJBFvVZXpR
UxRr7JqAutIsE8a1Pz/CAndZ7L+VXnr/ZoLdlNVv25jbLAl3S5vaJSZ845qV
yza9xdL64P1jbY0J5e1xX3eoh7H+D/iNEok=
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ], 
       TagBox[
        {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1: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

          "]]},
        Annotation[#, "Charting`Private`Tag#2"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    StyleBox[
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1: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
yza9xdL64P1jbY0J5e1xX3eoh7H+D/iNEok=
              "]]}, "Charting`Private`Tag#1"], 
           Annotation[{
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1: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

              "]]}, "Charting`Private`Tag#2"]}}, {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[2]], 
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           Plot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[2]], 
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}],
     Selectable->False]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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
yza9xdL64P1jbY0J5e1xX3eoh7H+D/iNEok=
          "]]}, "Charting`Private`Tag#1"], 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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

          "]]}, "Charting`Private`Tag#2"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
       "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
       "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[2]], 
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.920004819186476*^9, 3.920004877895512*^9}, 
   3.920004939516129*^9, {3.920005038692887*^9, 3.9200050501762085`*^9}, {
   3.920005369904626*^9, 3.9200053962560244`*^9}, 3.9200054482947903`*^9, 
   3.920005482281045*^9, 3.9200055572691517`*^9, 3.920541902017991*^9, 
   3.920542134984776*^9, 3.920542310522602*^9, 3.9207199998377457`*^9, 
   3.920720202085688*^9, 3.920721146328769*^9, 3.921391297587846*^9, 
   3.921391396591033*^9, 3.921392217915163*^9, 3.921392251683341*^9, 
   3.921392402436388*^9},
 CellLabel->
  "Out[160]=",ExpressionUUID->"8aeaad35-db35-4ff2-b00d-63c7618ce689"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "[", 
   RowBox[{"cx_", ",", "cy_", ",", "cz_"}], "]"}], "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"densitydist", " ", "[", 
     RowBox[{"cx", ",", "cy", ",", "cz"}], "]"}], "-", 
    RowBox[{"fapproxFull2", "[", 
     RowBox[{"cx", ",", "cy", ",", "cz"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9207239829377*^9, 3.920724006334968*^9}, {
  3.920724113526966*^9, 3.920724118661153*^9}, {3.920733476323921*^9, 
  3.9207334763280277`*^9}, {3.920785445930336*^9, 3.9207854494203243`*^9}, {
  3.920785497836409*^9, 3.920785540661173*^9}, {3.921405319016197*^9, 
  3.92140532322733*^9}, {3.921405385242992*^9, 3.9214054067777452`*^9}},
 CellLabel->
  "In[190]:=",ExpressionUUID->"1cda7504-3a18-4a0f-a732-a56783c7ec5c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"379097578860", " ", 
      SqrtBox["2"], " ", 
      SuperscriptBox["\[Pi]", 
       RowBox[{"3", "/", "2"}]]}]], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "48789185445"}], "+", 
       RowBox[{"244950", " ", 
        SuperscriptBox["cx", "12"]}], "+", 
       RowBox[{"244950", " ", 
        SuperscriptBox["cy", "12"]}], "+", 
       RowBox[{"1028345818500", " ", 
        SuperscriptBox["cz", "2"]}], "-", 
       RowBox[{"36439146315", " ", 
        SuperscriptBox["cz", "4"]}], "-", 
       RowBox[{"16989994990", " ", 
        SuperscriptBox["cz", "6"]}], "+", 
       RowBox[{"948599150", " ", 
        SuperscriptBox["cz", "8"]}], "+", 
       RowBox[{"10995648", " ", 
        SuperscriptBox["cz", "10"]}], "-", 
       RowBox[{"783840", " ", 
        SuperscriptBox["cz", "12"]}], "+", 
       RowBox[{"18", " ", 
        SuperscriptBox["cx", "10"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1733522"}], "+", 
          RowBox[{"81650", " ", 
           SuperscriptBox["cy", "2"]}], "-", 
          RowBox[{"204125", " ", 
           SuperscriptBox["cz", "2"]}]}], ")"}]}], "-", 
       RowBox[{"18", " ", 
        SuperscriptBox["cy", "10"], " ", 
        RowBox[{"(", 
         RowBox[{"1733522", "+", 
          RowBox[{"204125", " ", 
           SuperscriptBox["cz", "2"]}]}], ")"}]}], "-", 
       RowBox[{"25", " ", 
        SuperscriptBox["cy", "8"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "50643017"}], "-", 
          RowBox[{"13306032", " ", 
           SuperscriptBox["cz", "2"]}], "+", 
          RowBox[{"264546", " ", 
           SuperscriptBox["cz", "4"]}]}], ")"}]}], "+", 
       RowBox[{"5", " ", 
        SuperscriptBox["cy", "6"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "4048551938"}], "-", 
          RowBox[{"2060177045", " ", 
           SuperscriptBox["cz", "2"]}], "+", 
          RowBox[{"90861276", " ", 
           SuperscriptBox["cz", "4"]}], "+", 
          RowBox[{"774042", " ", 
           SuperscriptBox["cz", "6"]}]}], ")"}]}], "+", 
       RowBox[{"3", " ", 
        SuperscriptBox["cy", "4"], " ", 
        RowBox[{"(", 
         RowBox[{"41297998170", "+", 
          RowBox[{"44567601710", " ", 
           SuperscriptBox["cz", "2"]}], "-", 
          RowBox[{"2881482575", " ", 
           SuperscriptBox["cz", "4"]}], "-", 
          RowBox[{"67719192", " ", 
           SuperscriptBox["cz", "6"]}], "+", 
          RowBox[{"3625260", " ", 
           SuperscriptBox["cz", "8"]}]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["cy", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "211343482350"}], "-", 
          RowBox[{"689069150055", " ", 
           SuperscriptBox["cz", "2"]}], "+", 
          RowBox[{"47643808830", " ", 
           SuperscriptBox["cz", "4"]}], "+", 
          RowBox[{"3871112075", " ", 
           SuperscriptBox["cz", "6"]}], "-", 
          RowBox[{"282614112", " ", 
           SuperscriptBox["cz", "8"]}], "+", 
          RowBox[{"3527280", " ", 
           SuperscriptBox["cz", "10"]}]}], ")"}]}], "+", 
       RowBox[{"5", " ", 
        SuperscriptBox["cx", "8"], " ", 
        RowBox[{"(", 
         RowBox[{"253215085", "+", 
          RowBox[{"734850", " ", 
           SuperscriptBox["cy", "4"]}], "+", 
          RowBox[{"66530160", " ", 
           SuperscriptBox["cz", "2"]}], "-", 
          RowBox[{"1322730", " ", 
           SuperscriptBox["cz", "4"]}], "-", 
          RowBox[{"18", " ", 
           SuperscriptBox["cy", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"1733522", "+", 
             RowBox[{"204125", " ", 
              SuperscriptBox["cz", "2"]}]}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{"5", " ", 
        SuperscriptBox["cx", "6"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "4048551938"}], "+", 
          RowBox[{"979800", " ", 
           SuperscriptBox["cy", "6"]}], "-", 
          RowBox[{"2060177045", " ", 
           SuperscriptBox["cz", "2"]}], "+", 
          RowBox[{"90861276", " ", 
           SuperscriptBox["cz", "4"]}], "+", 
          RowBox[{"774042", " ", 
           SuperscriptBox["cz", "6"]}], "-", 
          RowBox[{"36", " ", 
           SuperscriptBox["cy", "4"], " ", 
           RowBox[{"(", 
            RowBox[{"1733522", "+", 
             RowBox[{"204125", " ", 
              SuperscriptBox["cz", "2"]}]}], ")"}]}], "-", 
          RowBox[{"20", " ", 
           SuperscriptBox["cy", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "50643017"}], "-", 
             RowBox[{"13306032", " ", 
              SuperscriptBox["cz", "2"]}], "+", 
             RowBox[{"264546", " ", 
              SuperscriptBox["cz", "4"]}]}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{"3", " ", 
        SuperscriptBox["cx", "4"], " ", 
        RowBox[{"(", 
         RowBox[{"41297998170", "+", 
          RowBox[{"1224750", " ", 
           SuperscriptBox["cy", "8"]}], "+", 
          RowBox[{"44567601710", " ", 
           SuperscriptBox["cz", "2"]}], "-", 
          RowBox[{"2881482575", " ", 
           SuperscriptBox["cz", "4"]}], "-", 
          RowBox[{"67719192", " ", 
           SuperscriptBox["cz", "6"]}], "+", 
          RowBox[{"3625260", " ", 
           SuperscriptBox["cz", "8"]}], "-", 
          RowBox[{"60", " ", 
           SuperscriptBox["cy", "6"], " ", 
           RowBox[{"(", 
            RowBox[{"1733522", "+", 
             RowBox[{"204125", " ", 
              SuperscriptBox["cz", "2"]}]}], ")"}]}], "-", 
          RowBox[{"50", " ", 
           SuperscriptBox["cy", "4"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "50643017"}], "-", 
             RowBox[{"13306032", " ", 
              SuperscriptBox["cz", "2"]}], "+", 
             RowBox[{"264546", " ", 
              SuperscriptBox["cz", "4"]}]}], ")"}]}], "+", 
          RowBox[{"5", " ", 
           SuperscriptBox["cy", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "4048551938"}], "-", 
             RowBox[{"2060177045", " ", 
              SuperscriptBox["cz", "2"]}], "+", 
             RowBox[{"90861276", " ", 
              SuperscriptBox["cz", "4"]}], "+", 
             RowBox[{"774042", " ", 
              SuperscriptBox["cz", "6"]}]}], ")"}]}]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["cx", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "211343482350"}], "+", 
          RowBox[{"1469700", " ", 
           SuperscriptBox["cy", "10"]}], "-", 
          RowBox[{"689069150055", " ", 
           SuperscriptBox["cz", "2"]}], "+", 
          RowBox[{"47643808830", " ", 
           SuperscriptBox["cz", "4"]}], "+", 
          RowBox[{"3871112075", " ", 
           SuperscriptBox["cz", "6"]}], "-", 
          RowBox[{"282614112", " ", 
           SuperscriptBox["cz", "8"]}], "+", 
          RowBox[{"3527280", " ", 
           SuperscriptBox["cz", "10"]}], "-", 
          RowBox[{"90", " ", 
           SuperscriptBox["cy", "8"], " ", 
           RowBox[{"(", 
            RowBox[{"1733522", "+", 
             RowBox[{"204125", " ", 
              SuperscriptBox["cz", "2"]}]}], ")"}]}], "-", 
          RowBox[{"100", " ", 
           SuperscriptBox["cy", "6"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "50643017"}], "-", 
             RowBox[{"13306032", " ", 
              SuperscriptBox["cz", "2"]}], "+", 
             RowBox[{"264546", " ", 
              SuperscriptBox["cz", "4"]}]}], ")"}]}], "+", 
          RowBox[{"15", " ", 
           SuperscriptBox["cy", "4"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "4048551938"}], "-", 
             RowBox[{"2060177045", " ", 
              SuperscriptBox["cz", "2"]}], "+", 
             RowBox[{"90861276", " ", 
              SuperscriptBox["cz", "4"]}], "+", 
             RowBox[{"774042", " ", 
              SuperscriptBox["cz", "6"]}]}], ")"}]}], "+", 
          RowBox[{"6", " ", 
           SuperscriptBox["cy", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"41297998170", "+", 
             RowBox[{"44567601710", " ", 
              SuperscriptBox["cz", "2"]}], "-", 
             RowBox[{"2881482575", " ", 
              SuperscriptBox["cz", "4"]}], "-", 
             RowBox[{"67719192", " ", 
              SuperscriptBox["cz", "6"]}], "+", 
             RowBox[{"3625260", " ", 
              SuperscriptBox["cz", "8"]}]}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["cx", "2"]}], "-", 
         SuperscriptBox["cy", "2"], "-", 
         SuperscriptBox["cz", "2"]}], ")"}]}]]}]}]}], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["3", "2"]}], "-", 
      SuperscriptBox["cx", "2"], "-", 
      SuperscriptBox["cy", "2"], "-", 
      RowBox[{
       SqrtBox["6"], " ", "cz"}], "-", 
      SuperscriptBox["cz", "2"]}]], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", 
        SqrtBox["6"], " ", "cz"}]]}], ")"}]}], 
   RowBox[{"2", " ", 
    SuperscriptBox["\[Pi]", 
     RowBox[{"3", "/", "2"}]]}]]}]], "Output",
 CellChangeTimes->{
  3.9207241215906157`*^9, 3.920733478818532*^9, 3.920785450547479*^9, {
   3.920785495569468*^9, 3.920785499630105*^9}, {3.920785531782609*^9, 
   3.920785542533957*^9}, 3.9213912993457537`*^9, 3.921391398355302*^9, 
   3.921392219687076*^9, 3.9213922534607277`*^9, 3.921392404350965*^9, 
   3.921405332317616*^9, 3.921405408764008*^9},
 CellLabel->
  "Out[190]=",ExpressionUUID->"77644e25-489e-4901-abf5-7080e3302805"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"accum", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"u", "=", 
            RowBox[{
             RowBox[{"-", "10"}], "+", 
             RowBox[{"ii", "*", 
              RowBox[{"2", "/", "5"}]}]}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"v", "=", 
            RowBox[{
             RowBox[{"-", "10"}], "+", 
             RowBox[{"jj", "*", 
              RowBox[{"2", "/", "5"}]}]}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"w", "=", 
            RowBox[{
             RowBox[{"-", "10"}], "+", 
             RowBox[{"kk", "*", 
              RowBox[{"2", "/", "5"}]}]}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"accum", "+=", 
            RowBox[{"N", "[", 
             RowBox[{
              RowBox[{"g", "[", 
               RowBox[{"u", ",", "v", ",", "w"}], "]"}], "*", 
              RowBox[{"g", "[", 
               RowBox[{"u", ",", "v", ",", "w"}], "]"}], "*", 
              RowBox[{"8", "/", "125"}]}], "]"}]}], ";"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"ii", ",", " ", "50"}], "}"}]}], "]"}], ";"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"jj", ",", "50"}], "}"}]}], "]"}], ";"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"kk", ",", "50"}], "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"accum", "=", 
    RowBox[{"Sqrt", "[", "accum", "]"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"accumf", "=", "0"}], ";"}], "\n", 
 RowBox[{"\t", 
  RowBox[{
   RowBox[{"Do", "[", "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{
      RowBox[{"Do", "[", "\[IndentingNewLine]", "\t", 
       RowBox[{
        RowBox[{
         RowBox[{"Do", "[", "\[IndentingNewLine]", "\t", 
          RowBox[{
           RowBox[{
            RowBox[{"u", "=", 
             RowBox[{
              RowBox[{"-", "10"}], "+", 
              RowBox[{"ii", "*", 
               RowBox[{"2", "/", "5"}]}]}]}], ";", "\[IndentingNewLine]", 
            "\t", 
            RowBox[{"v", "=", 
             RowBox[{
              RowBox[{"-", "10"}], "+", 
              RowBox[{"jj", "*", 
               RowBox[{"2", "/", "5"}]}]}]}], ";", "\[IndentingNewLine]", 
            "\t", 
            RowBox[{"w", "=", 
             RowBox[{
              RowBox[{"-", "10"}], "+", 
              RowBox[{"kk", "*", 
               RowBox[{"2", "/", "5"}]}]}]}], ";", "\[IndentingNewLine]", 
            "\t", 
            RowBox[{"accumf", "+=", 
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{"densitydist", "[", 
                RowBox[{"u", ",", "v", ",", "w"}], "]"}], "*", 
               RowBox[{"densitydist", "[", 
                RowBox[{"u", ",", "v", ",", "w"}], "]"}], "*", 
               RowBox[{"8", "/", "125"}]}], "]"}]}], ";"}], 
           "\[IndentingNewLine]", "\t", ",", 
           RowBox[{"{", 
            RowBox[{"ii", ",", "0", ",", " ", "50"}], "}"}]}], "]"}], ";"}], 
        "\[IndentingNewLine]", "\t", ",", 
        RowBox[{"{", 
         RowBox[{"jj", ",", "0", ",", " ", "50"}], "}"}]}], "]"}], ";"}], 
     "\[IndentingNewLine]", "\t", ",", 
     RowBox[{"{", 
      RowBox[{"kk", ",", "0", ",", " ", "50"}], "}"}]}], "]"}], 
   ";"}]}], "\[IndentingNewLine]", 
 RowBox[{"\t", 
  RowBox[{
   RowBox[{"accumf", "=", 
    RowBox[{"Sqrt", "[", "accumf", "]"}]}], ";"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"accum", "/=", "accumf"}], ";"}]}], "Input",
 CellChangeTimes->{{3.920733595194549*^9, 3.9207335971788273`*^9}, {
   3.9213924957375507`*^9, 3.921392508551632*^9}, {3.921392925865302*^9, 
   3.9213929541017857`*^9}, {3.9213930650884857`*^9, 3.921393080547412*^9}, {
   3.9213931772980413`*^9, 3.921393267619616*^9}, {3.921393304976697*^9, 
   3.921393319373023*^9}, {3.9213933734080877`*^9, 3.921393529635991*^9}, {
   3.9213935744571657`*^9, 3.921393722558496*^9}, 3.921393763773457*^9, {
   3.92140615530637*^9, 3.921406199104719*^9}, {3.921406389516954*^9, 
   3.921406422166127*^9}, {3.921406458024535*^9, 3.921406501561985*^9}, {
   3.921406621658238*^9, 3.921406630018043*^9}, 3.9214067022835093`*^9, {
   3.921406776865793*^9, 3.92140680880793*^9}},
 CellLabel->
  "In[213]:=",ExpressionUUID->"1a71ebd3-8dc8-4da0-a0c3-a3267db74dac"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", "accum", "]"}]], "Input",
 CellChangeTimes->{3.921406785502331*^9},
 CellLabel->
  "In[220]:=",ExpressionUUID->"d3ddbd1e-bbe1-4dac-b9d5-1379b7c6422c"],

Cell[BoxData["1.0900698904063277`"], "Output",
 CellChangeTimes->{3.921406871815731*^9},
 CellLabel->
  "Out[220]=",ExpressionUUID->"d20c5307-ad73-4bb7-a9f4-e68fe2fced5d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"fapproxFull2", "[", 
     RowBox[{"0", ",", "0", ",", "cz"}], "]"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"cz", ",", 
     RowBox[{"-", "20"}], ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.92000508545338*^9, 3.920005085642018*^9}},
 CellLabel->
  "In[163]:=",ExpressionUUID->"0c3bb101-9e77-4902-b51f-777130d4f496"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1: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
6imiaQl08w+mDI4/7DAUpy1rLJpI/x+ntyr/
          "]], 
         LineBox[{{0.16323811214608566`, -0.007058047527109462}, {
          0.17690436686031766`, -0.005488442166007502}, {
          0.18677260168473392`, -0.004266650306082111}, {
          0.1966408365091502, -0.002983627603290233}, {
          0.21637730615798278`, -0.00023708377834472715`}, {
          0.22624554098239907`, 0.0012247488865436615`}, {
          0.23611377580681536`, 0.002744436637510133}, {0.25585024545564794`, 
          0.005953611089175051}, {0.26571848028006423`, 
          0.00764112936165677}, {0.2755867151044805, 0.009382567212744707}, {
          0.2884934918731696, 0.011763186463272485`}}], 
         LineBox[CompressedData["
1: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
Xd6fY3iLpvnp2tzODhnK25O/KajF0P4HuKSZ9A==
          "]], 
         LineBox[{{-0.2883009600266185, 
          0.011763186463272485`}, {-0.2596221651740391, 
          0.006592195948853925}, {-0.2505278624233233, 
          0.005066204287376632}, {-0.24143355967260755`, 
          0.003587347078996607}, {-0.223244954171176, 
          0.0007740931102013746}, {-0.21415065142046025`, \
-0.000558836888684135}, {-0.20505634866974448`, -0.0018416997652938023`}, \
{-0.18686774316831295`, -0.004254571530690425}, {-0.17777344041759718`, \
-0.005383319954475002}, {-0.16867913766688142`, -0.006459481060099421}, \
{-0.16335803698039794`, -0.007058047527109462}}]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    StyleBox[
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1: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
6imiaQl08w+mDI4/7DAUpy1rLJpI/x+ntyr/
              "]], 
             
             Line[{{0.16323811214608566`, -0.007058047527109462}, {
              0.17690436686031766`, -0.005488442166007502}, {
              0.18677260168473392`, -0.004266650306082111}, {
              0.1966408365091502, -0.002983627603290233}, {
              0.21637730615798278`, -0.00023708377834472715`}, {
              0.22624554098239907`, 0.0012247488865436615`}, {
              0.23611377580681536`, 0.002744436637510133}, {
              0.25585024545564794`, 0.005953611089175051}, {
              0.26571848028006423`, 0.00764112936165677}, {0.2755867151044805,
               0.009382567212744707}, {0.2884934918731696, 
              0.011763186463272485`}}], 
             Line[CompressedData["
1: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
Xd6fY3iLpvnp2tzODhnK25O/KajF0P4HuKSZ9A==
              "]], 
             
             Line[{{-0.2883009600266185, 
              0.011763186463272485`}, {-0.2596221651740391, 
              0.006592195948853925}, {-0.2505278624233233, 
              0.005066204287376632}, {-0.24143355967260755`, 
              0.003587347078996607}, {-0.223244954171176, 
              0.0007740931102013746}, {-0.21415065142046025`, \
-0.000558836888684135}, {-0.20505634866974448`, -0.0018416997652938023`}, \
{-0.18686774316831295`, -0.004254571530690425}, {-0.17777344041759718`, \
-0.005383319954475002}, {-0.16867913766688142`, -0.006459481060099421}, \
{-0.16335803698039794`, -0.007058047527109462}}]}, 
            "Charting`Private`Tag#1"]}}, {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{-20, 10}, {-0.007058047527109462, 
             0.011763186463272485`}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           Plot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, 
          "PlotRange" -> {{-20, 10}, {-0.007058047527109462, 
            0.011763186463272485`}}, 
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}],
     Selectable->False]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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
6imiaQl08w+mDI4/7DAUpy1rLJpI/x+ntyr/
          "]], 
         Line[{{0.16323811214608566`, -0.007058047527109462}, {
          0.17690436686031766`, -0.005488442166007502}, {
          0.18677260168473392`, -0.004266650306082111}, {
          0.1966408365091502, -0.002983627603290233}, {
          0.21637730615798278`, -0.00023708377834472715`}, {
          0.22624554098239907`, 0.0012247488865436615`}, {
          0.23611377580681536`, 0.002744436637510133}, {0.25585024545564794`, 
          0.005953611089175051}, {0.26571848028006423`, 
          0.00764112936165677}, {0.2755867151044805, 0.009382567212744707}, {
          0.2884934918731696, 0.011763186463272485`}}], 
         Line[CompressedData["
1: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
Xd6fY3iLpvnp2tzODhnK25O/KajF0P4HuKSZ9A==
          "]], 
         Line[{{-0.2883009600266185, 
          0.011763186463272485`}, {-0.2596221651740391, 
          0.006592195948853925}, {-0.2505278624233233, 
          0.005066204287376632}, {-0.24143355967260755`, 
          0.003587347078996607}, {-0.223244954171176, 
          0.0007740931102013746}, {-0.21415065142046025`, \
-0.000558836888684135}, {-0.20505634866974448`, -0.0018416997652938023`}, \
{-0.18686774316831295`, -0.004254571530690425}, {-0.17777344041759718`, \
-0.005383319954475002}, {-0.16867913766688142`, -0.006459481060099421}, \
{-0.16335803698039794`, -0.007058047527109462}}]}, 
        "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PanelPlotLayout" -> <||>, 
       "PlotRange" -> {{-20, 10}, {-0.007058047527109462, 
         0.011763186463272485`}}, "Frame" -> {{False, False}, {False, False}},
        "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
       "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
       GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-20, 10}, {-0.007058047527109462, 0.011763186463272485`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.920005086690125*^9, 3.920541902047194*^9, 
  3.9205421350609827`*^9, 3.920542310618721*^9, 3.920719999959062*^9, 
  3.920720202368172*^9, 3.920721146494519*^9, 3.921392219821108*^9, 
  3.921392253586589*^9, 3.9213924045872307`*^9},
 CellLabel->
  "Out[163]=",ExpressionUUID->"64526a20-72ef-46cf-9b5b-7fcd4052b7da"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"densitydist", " ", "[", 
    RowBox[{"cx", ",", "cy", ",", "cz"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"cx", ",", 
     RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"cy", ",", 
     RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"cz", ",", 
     RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.920005245214478*^9, 3.920005310058806*^9}},
 CellLabel->
  "In[164]:=",ExpressionUUID->"765336f8-503b-43ee-9f0b-6d1abb6ca79f"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.9200052982138767`*^9, 3.9200053161639028`*^9}, 
   3.920541902078946*^9, 3.920542139873406*^9, 3.920542315435923*^9, 
   3.920720004779834*^9, 3.920720207207385*^9, 3.920721147755062*^9, 
   3.9213922209879503`*^9, 3.921392254749598*^9, 3.921392407872306*^9},
 CellLabel->
  "Out[164]=",ExpressionUUID->"7533fc13-1575-4754-9e4c-9dfb8452c02b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{"\[Rho]0", "\[IndentingNewLine]", 
 RowBox[{" ", "vmean"}], "\[IndentingNewLine]", 
 RowBox[{" ", "kk"}]}], "Input",
 CellChangeTimes->{{3.920007554869366*^9, 3.920007557622815*^9}},
 CellLabel->
  "In[165]:=",ExpressionUUID->"8cc4a966-d73a-42d7-8650-563e303e880b"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.92000755899771*^9, 3.920541902083376*^9, 
  3.920542139897063*^9, 3.920542315471069*^9, 3.920720004807057*^9, 
  3.920720207232231*^9, 3.920721147792346*^9, 3.921392221015573*^9, 
  3.921392254772168*^9, 3.9213924078953457`*^9},
 CellLabel->
  "Out[165]=",ExpressionUUID->"186466f1-d27c-4f2d-9812-a55bef85d327"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.92000755899771*^9, 3.920541902083376*^9, 
  3.920542139897063*^9, 3.920542315471069*^9, 3.920720004807057*^9, 
  3.920720207232231*^9, 3.920721147792346*^9, 3.921392221015573*^9, 
  3.921392254772168*^9, 3.9213924079329567`*^9},
 CellLabel->
  "Out[166]=",ExpressionUUID->"a913c4cf-5033-44f7-ad84-41b0bf91c2fc"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.92000755899771*^9, 3.920541902083376*^9, 
  3.920542139897063*^9, 3.920542315471069*^9, 3.920720004807057*^9, 
  3.920720207232231*^9, 3.920721147792346*^9, 3.921392221015573*^9, 
  3.921392254772168*^9, 3.9213924079339457`*^9},
 CellLabel->
  "Out[167]=",ExpressionUUID->"e1073438-4152-4008-bf63-b9f8c80ee10a"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"theory", "=", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3", ",", "3", ",", "3", ",", "3", ",", "3", ",", "3"}],
     "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fapproxFull2", "[", 
    RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], " ", "=", " ", 
   RowBox[{"buildFfromCoeffsAshifted", "[", 
    RowBox[{"theory", ",", 
     RowBox[{"getCoeffsA", "[", "theory", "]"}], ",", "x", ",", "y", ",", "z",
      ",", "\[Rho]0", ",", " ", "vmean", ",", " ", "kk"}], " ", "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{
  3.920003742363075*^9, {3.920004283848439*^9, 3.920004352030881*^9}, {
   3.920004495743277*^9, 3.920004510090969*^9}, {3.92000454111134*^9, 
   3.9200046306943192`*^9}, {3.920004684107421*^9, 3.920004713608252*^9}, {
   3.920004745994343*^9, 3.920004748711078*^9}, {3.9200051725632563`*^9, 
   3.92000519337125*^9}, {3.920007758245412*^9, 3.9200077630583506`*^9}},
 CellLabel->
  "In[168]:=",ExpressionUUID->"4c523a18-4da7-4fe1-adf3-125f332db374"],

Cell[CellGroupData[{

Cell[BoxData["vmean"], "Input",
 CellChangeTimes->{{3.92000697803866*^9, 3.92000697955413*^9}},
 CellLabel->
  "In[170]:=",ExpressionUUID->"879c95d7-b109-430e-b0e5-1cc427d0bc66"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.920006980319746*^9, 3.920541935249317*^9, 
  3.920542145862821*^9, 3.920542321258353*^9, 3.920720007132578*^9, 
  3.9207202087639513`*^9, 3.92072114788798*^9, 3.921392221107319*^9, 
  3.921392254864533*^9, 3.921392408024357*^9},
 CellLabel->
  "Out[170]=",ExpressionUUID->"04679299-db5c-461b-971a-c8afe33594d1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"vvx", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"man1", "=", 
  RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"fapproxFull2", "[", 
         RowBox[{"vvx", ",", "vvy", ",", "cz"}], "]"}], ",", 
        RowBox[{"densitydist", " ", "[", 
         RowBox[{"vvx", ",", "vvy", ",", "cz"}], "]"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"cz", ",", 
        RowBox[{"-", "20"}], ",", "10"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", " ", "All"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"vvy", ",", 
      RowBox[{"-", "10"}], ",", "0"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.920004792528084*^9, 3.920004877136634*^9}, {
   3.920004935130319*^9, 3.920004938032538*^9}, {3.920005026619863*^9, 
   3.920005049221328*^9}, 3.920005503864299*^9, 3.9200055692971153`*^9, {
   3.920005643846425*^9, 3.920005652689574*^9}, {3.920007688227324*^9, 
   3.9200077337090635`*^9}, 3.920013446922608*^9, {3.920013644890478*^9, 
   3.920013681808913*^9}, {3.920013852811502*^9, 3.920013854678221*^9}, {
   3.92139224185852*^9, 3.921392242170738*^9}},
 CellLabel->
  "In[171]:=",ExpressionUUID->"f4298bbc-7fa6-4bd2-b2fe-b4cfad5918d9"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`vvy$$ = -10, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`vvy$$], -10, 0, ControlType -> Manipulator}}, 
    Typeset`size$$ = {360., {109., 114.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`vvy$$ = -10}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[{
         $CellContext`fapproxFull2[$CellContext`vvx, $CellContext`vvy$$, \
$CellContext`cz], 
         $CellContext`densitydist[$CellContext`vvx, $CellContext`vvy$$, \
$CellContext`cz]}, {$CellContext`cz, -20, 10}, PlotRange -> All], 
      "Specifications" :> {{$CellContext`vvy$$, -10, 0}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{404., {154., 160.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.920004819186476*^9, 3.920004877895512*^9}, 
   3.920004939516129*^9, {3.920005038692887*^9, 3.9200050501762085`*^9}, 
   3.92000521070446*^9, 3.9200055786490555`*^9, {3.920005641253873*^9, 
   3.920005654485262*^9}, {3.9200077109286356`*^9, 3.920007734380883*^9}, 
   3.920007776753026*^9, 3.9200131669792075`*^9, 3.920013543941322*^9, 
   3.920013694803527*^9, {3.920013821812466*^9, 3.920013855602955*^9}, 
   3.920541935275724*^9, 3.920542145885633*^9, 3.920542321280306*^9, 
   3.920720007150326*^9, 3.920720208778147*^9, 3.920721147909564*^9, 
   3.921392221125712*^9, 3.921392254881463*^9, 3.9213924080428753`*^9},
 CellLabel->
  "Out[172]=",ExpressionUUID->"8bf96ab3-c34c-4498-9a3d-e1e6911c3cba"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"\[Rho]0", " ", 
   SuperscriptBox["kk", 
    RowBox[{
     RowBox[{"-", "3"}], "/", "2"}]]}], "]"}]], "Input",
 CellChangeTimes->{{3.920005803727092*^9, 3.920005807721414*^9}},
 CellLabel->
  "In[173]:=",ExpressionUUID->"9f0e5e0c-df00-4ec2-b0dd-3a5413e0f781"],

Cell[BoxData["1.`"], "Output",
 CellChangeTimes->{{3.920005799090547*^9, 3.920005808651719*^9}, 
   3.920541935371008*^9, 3.920542145941472*^9, 3.9205423213369417`*^9, 
   3.920720007229718*^9, 3.920720208858438*^9, 3.920721147967247*^9, 
   3.9213922211751204`*^9, 3.92139225492924*^9, 3.9213924080928288`*^9},
 CellLabel->
  "Out[173]=",ExpressionUUID->"e27fe034-4b25-4e0c-87c9-1e10cfffb3df"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"theory", "=", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3", ",", "3", ",", "3", ",", "3", ",", "3", ",", "3"}],
     "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fapproxnormFull2", "[", 
    RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], " ", "=", " ", 
   RowBox[{"buildFfromCoeffsAnormalized", "[", 
    RowBox[{"theory", ",", 
     RowBox[{"getCoeffsA", "[", "theory", "]"}], " ", ",", "x", ",", "y", ",",
      "z"}], "]"}]}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.920012946299187*^9, 3.9200129620037193`*^9}, {
   3.9200130708207536`*^9, 3.920013087936251*^9}, 3.920013126058153*^9},
 CellLabel->
  "In[174]:=",ExpressionUUID->"45e53faf-10e4-4620-9180-8dcc69e4edb2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"vvx", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"man2", "=", " ", 
  RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"fapproxnormFull2", "[", 
         RowBox[{"vvx", ",", "vvy", ",", "cz"}], "]"}], ",", 
        RowBox[{"ff0", " ", "[", 
         RowBox[{"vvx", ",", "vvy", ",", "cz"}], "]"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"cz", ",", 
        RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", " ", "All"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"vvy", " ", ",", 
      RowBox[{
       RowBox[{"-", "5"}], 
       SuperscriptBox["kk", 
        RowBox[{
         RowBox[{"-", "1"}], "/", "2"}]]}], ",", 
      RowBox[{"5", 
       SuperscriptBox["kk", 
        RowBox[{
         RowBox[{"-", "1"}], "/", "2"}]]}]}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.920012966907831*^9, 3.9200129867095547`*^9}, 
   3.920013032491229*^9, {3.920013765817977*^9, 3.920013809168257*^9}, {
   3.920013860073912*^9, 3.920013861985183*^9}},
 CellLabel->
  "In[176]:=",ExpressionUUID->"fd35ee1f-ca4a-4608-8347-a696cdd067c6"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`vvy$$ = -5, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`vvy$$], -5, 5, ControlType -> Manipulator}}, 
    Typeset`size$$ = {360., {112., 117.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`vvy$$ = -5}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[{
         $CellContext`fapproxnormFull2[$CellContext`vvx, $CellContext`vvy$$, \
$CellContext`cz], 
         $CellContext`ff0[$CellContext`vvx, $CellContext`vvy$$, \
$CellContext`cz]}, {$CellContext`cz, -10, 10}, PlotRange -> All], 
      "Specifications" :> {{$CellContext`vvy$$, -5, 5}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{404., {157., 163.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.920012988734657*^9, 3.920013001702298*^9}, 
   3.920013092747238*^9, 3.920013129669499*^9, 3.920013615393401*^9, {
   3.9200138105959435`*^9, 3.920013830015869*^9}, 3.920013862851396*^9, 
   3.920541938128233*^9, 3.920542147461147*^9, 3.920542321982178*^9, 
   3.920720007559068*^9, 3.920720208953356*^9, 3.920721148064492*^9, 
   3.9213922212664833`*^9, 3.921392255021982*^9, 3.9213924081882277`*^9},
 CellLabel->
  "Out[177]=",ExpressionUUID->"e793fb99-addf-42aa-86d5-dfe646d52696"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{Full, Full},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
TaggingRules->{
 "WelcomeScreenSettings" -> {"FEStarting" -> False}, "TryRealOnly" -> False},
FrontEndVersion->"14.0 for Mac OS X ARM (64-bit) (December 12, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"e3003d69-7e33-4f55-8aee-62150c3d5735"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 386, 9, 88, "Input",ExpressionUUID->"c819e5af-96d5-4539-8d6e-4f1709fbc967"],
Cell[CellGroupData[{
Cell[969, 33, 989, 21, 69, "Section",ExpressionUUID->"0488a9bf-ff6a-4633-b09c-210e5a0a5a6c"],
Cell[1961, 56, 1978, 37, 196, "Input",ExpressionUUID->"9b601a50-369a-4d33-880a-05d1c3c299b8"],
Cell[CellGroupData[{
Cell[3964, 97, 502, 8, 30, "Input",ExpressionUUID->"46b19228-5073-41cd-93fe-cc0f2b56a1b9"],
Cell[4469, 107, 6482, 158, 70, "Output",ExpressionUUID->"3d75cf39-df6f-48fb-a4c0-ee4329e25d99"]
}, Open  ]],
Cell[10966, 268, 172, 2, 30, "Input",ExpressionUUID->"afacf0bd-62f3-4e86-a3b2-2637bbf68080"],
Cell[CellGroupData[{
Cell[11163, 274, 301, 5, 30, "Input",ExpressionUUID->"69f5ad57-7d8f-421d-8cec-3286b85dc606"],
Cell[11467, 281, 1086, 36, 70, "Output",ExpressionUUID->"cd8e73d1-ef85-4032-ba5e-f6a2a28eca6a"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[12602, 323, 756, 18, 55, "Section",ExpressionUUID->"d7321192-bb66-4d3e-bf2b-ec2cdbcbc6ca"],
Cell[13361, 343, 749, 21, 48, "Input",ExpressionUUID->"c0a7cd56-fc44-4d4e-89b1-2e2d84cc9f7c"],
Cell[14113, 366, 1275, 31, 70, "Input",ExpressionUUID->"bf5c8aa1-82cc-4e56-b73b-09a5b83d18e9"],
Cell[15391, 399, 319, 6, 28, "Input",ExpressionUUID->"2b30aff4-b8e2-4d76-87ad-16ef2525c3d0"],
Cell[15713, 407, 7834, 229, 398, "Input",ExpressionUUID->"53b21f00-5f0e-4919-b174-b5835e8d8ea5"],
Cell[23550, 638, 2805, 66, 129, "Input",ExpressionUUID->"f05ab810-55d2-465e-b603-fd640be55ea4"],
Cell[CellGroupData[{
Cell[26380, 708, 280, 5, 28, "Input",ExpressionUUID->"ba0b5fe7-c6c6-4297-ad18-6f208f5ef162"],
Cell[26663, 715, 1098, 31, 70, "Output",ExpressionUUID->"7d0405b8-cf63-437c-8296-899898b50e59"]
}, Open  ]],
Cell[27776, 749, 1933, 46, 36, "Input",ExpressionUUID->"c117a07e-0ab8-4392-9a20-929ad3c7943b"],
Cell[29712, 797, 5737, 132, 427, "Input",ExpressionUUID->"b45c4542-1141-49df-9886-4f1a4cb7942a"],
Cell[CellGroupData[{
Cell[35474, 933, 411, 11, 48, "Input",ExpressionUUID->"ad6a48d7-886c-473d-beef-abaec61a9c78"],
Cell[35888, 946, 1065, 16, 70, "Output",ExpressionUUID->"df16bad4-c4e6-4bdb-9b48-c2a7d294496c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36990, 967, 323, 6, 28, "Input",ExpressionUUID->"6bcb7cf7-6153-469f-951e-3d246e0f6a09"],
Cell[37316, 975, 539, 13, 70, "Output",ExpressionUUID->"e7e22e11-c2ad-4f17-a07b-124bb4af3785"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37892, 993, 342, 7, 48, "Input",ExpressionUUID->"04d2285d-772b-44b0-bb8b-c12ab1f7cb6d"],
Cell[38237, 1002, 341, 5, 70, "Output",ExpressionUUID->"52fe41f7-0b12-431b-85e8-3f5c450bc165"],
Cell[38581, 1009, 341, 5, 70, "Output",ExpressionUUID->"fa74c20f-84a8-4b8a-a6b7-6de5f21ab5fd"]
}, Open  ]],
Cell[38937, 1017, 690, 17, 28, "Input",ExpressionUUID->"d7e19fa9-852e-4011-9504-8279f371d3b1"]
}, Closed]],
Cell[CellGroupData[{
Cell[39664, 1039, 1022, 21, 55, "Section",ExpressionUUID->"ff575391-6d66-415c-8b34-30636ec75051"],
Cell[CellGroupData[{
Cell[40711, 1064, 733, 13, 45, "Subsubsection",ExpressionUUID->"fce93876-ca66-4d8e-b781-36792e9888e1"],
Cell[41447, 1079, 9100, 227, 1009, "Input",ExpressionUUID->"6f32c501-a4e8-4fbb-a4b0-b16a5e79c07e"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[50596, 1312, 1728, 43, 73, "Section",ExpressionUUID->"b320702a-3074-41f8-a07b-3174101f9f90",
 InitializationCell->True],
Cell[52327, 1357, 1979, 50, 102, "Input",ExpressionUUID->"d547f2ea-1928-460e-b257-a378759d492b"],
Cell[54309, 1409, 2409, 60, 166, "Input",ExpressionUUID->"3f25d2d7-e68b-4f6f-b2a6-c58b97d4a041"]
}, Closed]],
Cell[CellGroupData[{
Cell[56755, 1474, 1012, 21, 55, "Section",ExpressionUUID->"fc631935-8a27-46a4-8f71-5821408a536a"],
Cell[57770, 1497, 7492, 199, 267, "Input",ExpressionUUID->"afa61b89-9901-42e6-aa59-1497b7ea0446"],
Cell[CellGroupData[{
Cell[65287, 1700, 180, 3, 30, "Input",ExpressionUUID->"ea9ed237-4002-49c5-9b71-5fb3351e0e1f"],
Cell[65470, 1705, 464, 9, 34, "Output",ExpressionUUID->"288ee43f-d08a-4d33-a3e5-6ab5d8672e27"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65971, 1719, 721, 15, 44, "Input",ExpressionUUID->"7f39e42d-679f-4c68-8d00-7a7f4a2242aa"],
Cell[66695, 1736, 44403, 772, 245, "Output",ExpressionUUID->"9171cd0a-932c-4952-aaca-b10d4dc7582f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[111135, 2513, 571, 13, 44, "Input",ExpressionUUID->"102cf5a1-259a-404a-9226-66bd8ab5005d"],
Cell[111709, 2528, 44059, 769, 245, "Output",ExpressionUUID->"7fd3df0c-b837-4006-8128-c8f2ea407ee9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[155805, 3302, 951, 27, 69, "Input",ExpressionUUID->"77259a72-3ea0-49dd-82b6-b6e5c7358f8b"],
Cell[156759, 3331, 525, 8, 34, "Output",ExpressionUUID->"77c5ca3b-fda8-46d4-b1d6-6175fa13e7f0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[157321, 3344, 767, 21, 67, "Input",ExpressionUUID->"14a9e679-d170-4ff7-ab0a-375351f64741"],
Cell[158091, 3367, 370, 7, 34, "Output",ExpressionUUID->"aec2d558-8409-4a3d-9fdb-6a2f847fc346"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[158510, 3380, 1113, 22, 69, "Section",ExpressionUUID->"d2d7fb3d-bd7c-48ca-8d94-7dbd7ea8c417"],
Cell[159626, 3404, 1993, 58, 106, "Input",ExpressionUUID->"cd3327d1-bf80-403c-8a3e-c857ce1f9874"],
Cell[161622, 3464, 1653, 39, 101, "Input",ExpressionUUID->"191b234b-922a-41d4-8ce1-a8fb1a082088"]
}, Closed]],
Cell[CellGroupData[{
Cell[163312, 3508, 980, 20, 55, "Section",ExpressionUUID->"98f8be1c-b57f-4c80-9693-60a3ef05ced8"],
Cell[CellGroupData[{
Cell[164317, 3532, 579, 8, 45, "Subsubsection",ExpressionUUID->"e71b3fe2-c9b0-4fdd-a5f0-7ec141906b78"],
Cell[164899, 3542, 17786, 358, 1093, "Input",ExpressionUUID->"fc626fdd-1751-4989-b553-a7d73d1fcf30"],
Cell[182688, 3902, 15003, 345, 849, "Input",ExpressionUUID->"cfd51b3d-a650-46e2-b0ef-97fd2a26f3d6"],
Cell[CellGroupData[{
Cell[197716, 4251, 330, 7, 52, "Input",ExpressionUUID->"7e48dc76-e27a-43fb-891f-90a7952d4af2"],
Cell[198049, 4260, 429, 10, 28, "Message",ExpressionUUID->"fe14c37c-c0ab-4426-9224-ebc9b0a879d0"],
Cell[198481, 4272, 429, 10, 28, "Message",ExpressionUUID->"b0160b21-7129-4901-bc20-f29dc5ee155f"],
Cell[198913, 4284, 391, 9, 28, "Message",ExpressionUUID->"5559f6cf-2f54-45f9-9c75-f031d28e17f0"],
Cell[199307, 4295, 567, 10, 34, "Output",ExpressionUUID->"6715ec6f-4281-4490-aa1c-70729f137388"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[199935, 4312, 920, 20, 55, "Section",ExpressionUUID->"30dcbd12-f50f-46d2-a30a-735f46e1b353"],
Cell[200858, 4334, 175, 3, 30, "Input",ExpressionUUID->"d85251e8-e819-4e41-8124-7935adcc1058"],
Cell[CellGroupData[{
Cell[201058, 4341, 216, 4, 44, "Input",ExpressionUUID->"8e2e207c-7f57-4463-a93c-65400ce810de"],
Cell[201277, 4347, 305, 5, 34, "Output",ExpressionUUID->"48f67ebb-1d19-4268-a3ef-56a2f38b2f9f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[201619, 4357, 282, 5, 30, "Input",ExpressionUUID->"784352eb-3dca-4e57-838c-2c9676eb8e74"],
Cell[201904, 4364, 320, 5, 34, "Output",ExpressionUUID->"0fbe3b46-6398-4ff7-bb12-906153b31792"]
}, Open  ]],
Cell[CellGroupData[{
Cell[202261, 4374, 1048, 23, 86, "Input",ExpressionUUID->"99fb9024-c3be-409e-80b5-aad10256776e"],
Cell[203312, 4399, 851, 13, 770, "Output",ExpressionUUID->"a52e2d77-d3df-418c-885d-2f12a6e7f39b"]
}, Open  ]],
Cell[204178, 4415, 1182, 27, 86, "Input",ExpressionUUID->"ec95ea2b-2176-4ef7-9584-a26830aeda77"],
Cell[205363, 4444, 812, 22, 86, "Input",ExpressionUUID->"7950cad9-4da6-4c8b-a288-ab548e8d2ce6"],
Cell[206178, 4468, 834, 22, 86, "Input",ExpressionUUID->"6502be29-ca23-4034-b2c7-a1b78d083c0c"],
Cell[207015, 4492, 1596, 36, 107, "Input",ExpressionUUID->"bbca885d-432f-4c82-9666-f373b8a75464"],
Cell[CellGroupData[{
Cell[208636, 4532, 2094, 47, 322, "Input",ExpressionUUID->"56eefd4c-2579-4f73-b5b9-17a1c83b25a6"],
Cell[CellGroupData[{
Cell[210755, 4583, 318, 7, 24, "Print",ExpressionUUID->"153e9815-2ecd-489e-b8b8-db7e8f7aab5f"],
Cell[211076, 4592, 316, 7, 24, "Print",ExpressionUUID->"65b3790d-b1ce-47cf-9c0e-ffbbcf1794be"],
Cell[211395, 4601, 315, 7, 24, "Print",ExpressionUUID->"0642ea8f-afc9-431a-b79d-d5a11c23e57f"],
Cell[211713, 4610, 316, 7, 24, "Print",ExpressionUUID->"d338b836-1b64-4e8c-a104-d06173865cdf"],
Cell[212032, 4619, 316, 7, 24, "Print",ExpressionUUID->"f6810f55-5e70-4415-b0f2-872cfb65bcc7"],
Cell[212351, 4628, 317, 7, 24, "Print",ExpressionUUID->"f544cb69-2caa-4ac2-a4c4-cd69644e73c3"],
Cell[212671, 4637, 436, 10, 24, "Print",ExpressionUUID->"7d4699cb-6493-4467-9f75-bb34874fc86b"],
Cell[213110, 4649, 446, 10, 24, "Print",ExpressionUUID->"583e0332-af7a-4fe6-98d2-58d5583f3a65"],
Cell[213559, 4661, 456, 10, 24, "Print",ExpressionUUID->"d760c85a-029a-4ee5-809e-48985a473aa6"],
Cell[214018, 4673, 469, 11, 24, "Print",ExpressionUUID->"c03f1b11-b769-4d63-8717-81f1b2979dc9"],
Cell[214490, 4686, 481, 11, 24, "Print",ExpressionUUID->"1970d19e-9c90-418a-877e-7e8be846b33c"],
Cell[214974, 4699, 490, 11, 24, "Print",ExpressionUUID->"a67d1a53-9810-4c74-91f0-a93c489ca3e8"],
Cell[215467, 4712, 502, 11, 24, "Print",ExpressionUUID->"0b1e1c39-8560-4041-afca-781eb222d9a4"],
Cell[215972, 4725, 512, 11, 24, "Print",ExpressionUUID->"6fe00427-3f13-4794-b4f5-87002709ab78"],
Cell[216487, 4738, 520, 11, 24, "Print",ExpressionUUID->"ae2aa4a2-2071-4822-a10f-d034034de70e"],
Cell[217010, 4751, 529, 11, 24, "Print",ExpressionUUID->"0afe1b7c-9b0a-4404-88d9-72d61b92f4af"],
Cell[217542, 4764, 543, 11, 24, "Print",ExpressionUUID->"41561791-8c1e-4156-872d-e7db1e9cff30"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[218134, 4781, 2429, 52, 343, "Input",ExpressionUUID->"3c48a82b-619c-4123-9d57-cdf90d71b152"],
Cell[CellGroupData[{
Cell[220588, 4837, 478, 12, 24, "Print",ExpressionUUID->"e5016491-ebc1-4357-93d7-f0bcf27ea075"],
Cell[221069, 4851, 507, 13, 24, "Print",ExpressionUUID->"481ba11b-f2bb-41d2-bf27-8281279a1299"],
Cell[221579, 4866, 515, 13, 24, "Print",ExpressionUUID->"837bbcf7-c3d4-403c-994b-ab2d8f13aff7"],
Cell[222097, 4881, 544, 14, 24, "Print",ExpressionUUID->"6c2f7967-70e2-4dd3-a3b3-4b9157505913"],
Cell[222644, 4897, 554, 14, 24, "Print",ExpressionUUID->"7ec3d9a8-f347-4ac6-8154-1d2c65df0ef5"],
Cell[223201, 4913, 583, 15, 24, "Print",ExpressionUUID->"20ddab67-768b-49f0-a50e-3eae01ffbc50"],
Cell[223787, 4930, 593, 15, 24, "Print",ExpressionUUID->"04768c09-599c-414a-a661-ee1dca690c01"],
Cell[224383, 4947, 622, 16, 24, "Print",ExpressionUUID->"63ab404d-79db-4c2b-b159-657de42571e0"],
Cell[225008, 4965, 634, 16, 24, "Print",ExpressionUUID->"4d0127b1-2b24-48b4-a3d9-b81984666dcf"],
Cell[225645, 4983, 663, 17, 24, "Print",ExpressionUUID->"d5d6327a-e5bf-49cf-8ffd-34c9aa3d4e67"],
Cell[226311, 5002, 674, 17, 24, "Print",ExpressionUUID->"a3c7120d-bf4e-4056-8872-25b1a3e3094b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[227034, 5025, 540, 11, 44, "Input",ExpressionUUID->"1f88c6e1-ad21-4835-b382-487139995d3d"],
Cell[227577, 5038, 730, 13, 56, "Output",ExpressionUUID->"87514f12-7c52-4045-970a-63a052b13aa0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[228344, 5056, 452, 11, 30, "Input",ExpressionUUID->"ed74b008-6e96-4886-b8fe-320a734299a2"],
Cell[228799, 5069, 12826, 398, 266, "Output",ExpressionUUID->"e529dd33-16a7-4882-95e0-c87707898a19"]
}, Open  ]],
Cell[CellGroupData[{
Cell[241662, 5472, 1339, 35, 295, "Input",ExpressionUUID->"48506aab-9ebb-4780-a561-9fade93d2a74"],
Cell[243004, 5509, 1306, 21, 46, "Message",ExpressionUUID->"a71d3791-b400-4e95-8672-18862ee2050c"],
Cell[244313, 5532, 609, 12, 28, "Message",ExpressionUUID->"59f7e815-0bbc-4f0d-96ad-55165f71b263"],
Cell[244925, 5546, 1150, 31, 98, "Output",ExpressionUUID->"9fd5410b-1b44-467e-b8ee-634f0bd5d803"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[246124, 5583, 953, 20, 55, "Section",ExpressionUUID->"1d1df919-ad46-47a0-a9f9-90533f5e629b"],
Cell[247080, 5605, 3379, 91, 285, "Input",ExpressionUUID->"80f705a5-0177-4564-8359-f9e0e2989b28"],
Cell[250462, 5698, 5211, 142, 308, "Input",ExpressionUUID->"d05813ea-57d3-4c6b-bad6-54b45def6caf"],
Cell[255676, 5842, 1323, 30, 130, "Input",ExpressionUUID->"cdc38b65-f49c-4656-a856-897161945b76"],
Cell[CellGroupData[{
Cell[257024, 5876, 247, 5, 30, "Input",ExpressionUUID->"1d01676c-e4ac-454e-961c-9ad86dc1044f"],
Cell[257274, 5883, 8809, 244, 264, "Output",ExpressionUUID->"687b2e58-c196-468d-b4ae-1d56a2497feb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[266120, 6132, 1073, 24, 86, "Input",ExpressionUUID->"d3d19867-d802-4955-8b03-d087d95c0008"],
Cell[267196, 6158, 164481, 2757, 240, "Output",ExpressionUUID->"8aeaad35-db35-4ff2-b00d-63c7618ce689"]
}, Open  ]],
Cell[CellGroupData[{
Cell[431714, 8920, 780, 16, 44, "Input",ExpressionUUID->"1cda7504-3a18-4a0f-a732-a56783c7ec5c"],
Cell[432497, 8938, 9994, 265, 320, "Output",ExpressionUUID->"77644e25-489e-4901-abf5-7080e3302805"]
}, Open  ]],
Cell[442506, 9206, 4597, 116, 706, "Input",ExpressionUUID->"1a71ebd3-8dc8-4da0-a0c3-a3267db74dac"],
Cell[CellGroupData[{
Cell[447128, 9326, 183, 4, 44, "Input",ExpressionUUID->"d3ddbd1e-bbe1-4dac-b9d5-1379b7c6422c"],
Cell[447314, 9332, 171, 3, 34, "Output",ExpressionUUID->"d20c5307-ad73-4bb7-a9f4-e68fe2fced5d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[447522, 9340, 418, 11, 44, "Input",ExpressionUUID->"0c3bb101-9e77-4902-b51f-777130d4f496"],
Cell[447943, 9353, 79806, 1362, 240, "Output",ExpressionUUID->"64526a20-72ef-46cf-9b5b-7fcd4052b7da"]
}, Open  ]],
Cell[CellGroupData[{
Cell[527786, 10720, 642, 17, 44, "Input",ExpressionUUID->"765336f8-503b-43ee-9f0b-6d1abb6ca79f"],
Cell[528431, 10739, 393, 6, 34, "Output",ExpressionUUID->"7533fc13-1575-4754-9e4c-9dfb8452c02b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[528861, 10750, 279, 5, 73, "Input",ExpressionUUID->"8cc4a966-d73a-42d7-8650-563e303e880b"],
Cell[529143, 10757, 361, 6, 34, "Output",ExpressionUUID->"186466f1-d27c-4f2d-9812-a55bef85d327"],
Cell[529507, 10765, 416, 8, 34, "Output",ExpressionUUID->"a913c4cf-5033-44f7-ad84-41b0bf91c2fc"],
Cell[529926, 10775, 361, 6, 34, "Output",ExpressionUUID->"e1073438-4152-4008-bf63-b9f8c80ee10a"]
}, Open  ]],
Cell[530302, 10784, 1049, 22, 73, "Input",ExpressionUUID->"4c523a18-4da7-4fe1-adf3-125f332db374"],
Cell[CellGroupData[{
Cell[531376, 10810, 178, 3, 30, "Input",ExpressionUUID->"879c95d7-b109-430e-b0e5-1cc427d0bc66"],
Cell[531557, 10815, 416, 8, 34, "Output",ExpressionUUID->"04679299-db5c-461b-971a-c8afe33594d1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[532010, 10828, 1311, 29, 101, "Input",ExpressionUUID->"f4298bbc-7fa6-4bd2-b2fe-b4cfad5918d9"],
Cell[533324, 10859, 2408, 45, 333, "Output",ExpressionUUID->"8bf96ab3-c34c-4498-9a3d-e1e6911c3cba"]
}, Open  ]],
Cell[CellGroupData[{
Cell[535769, 10909, 304, 8, 46, "Input",ExpressionUUID->"9f0e5e0c-df00-4ec2-b0dd-3a5413e0f781"],
Cell[536076, 10919, 394, 6, 34, "Output",ExpressionUUID->"e27fe034-4b25-4e0c-87c9-1e10cfffb3df"]
}, Open  ]],
Cell[536485, 10928, 757, 17, 73, "Input",ExpressionUUID->"45e53faf-10e4-4620-9180-8dcc69e4edb2"],
Cell[CellGroupData[{
Cell[537267, 10949, 1238, 33, 105, "Input",ExpressionUUID->"fd35ee1f-ca4a-4608-8347-a696cdd067c6"],
Cell[538508, 10984, 2181, 42, 339, "Output",ExpressionUUID->"e793fb99-addf-42aa-86d5-dfe646d52696"]
}, Open  ]]
}, Open  ]]
}
]
*)

